<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>http://jser.info/</link>
    <atom:link href="http://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 17 Mar 2016 22:43:18 +0900</pubDate>
    <lastBuildDate>Thu, 17 Mar 2016 22:43:18 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>2016-03-17のJS: React.js v15.0 RC、WebAssembly、最近JavaScript</title>
        <description>&lt;p&gt;JSer.info #270 - &lt;a href=&quot;https://facebook.github.io/react/blog/2016/03/16/react-v15-rc2.html&quot; title=&quot;React v15.0 Release Candidate 2&quot;&gt;React v15.0 RC2&lt;/a&gt;がリリースされています。&lt;br&gt;
RC2は&lt;a href=&quot;https://github.com/facebook/react/issues/6246&quot;&gt;RC1で見つかったバグ&lt;/a&gt;やSVGに関する変更がrevertされています。&lt;/p&gt;

&lt;p&gt;RC1を含め変更点については下記の記事にまとまっているので、Reactを使っている人は見ておくといいかと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.koba04.com/post/2016/03/09/react-js-v15-changes/&quot; title=&quot;React.js v15.0 changes - blog.koba04.com&quot;&gt;React.js v15.0 changes - blog.koba04.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;MSEdge(&lt;a href=&quot;https://github.com/microsoft/chakracore&quot; title=&quot;ChakraCore&quot;&gt;ChakraCore&lt;/a&gt;)、Firefox、Chrome(V8)からそれぞれ&lt;a href=&quot;http://webassembly.github.io/&quot; title=&quot;WebAssembly&quot;&gt;WebAssembly&lt;/a&gt;を試験的にサポートしたというアナウンスがされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2016/03/experimental-support-for-webassembly.html&quot;&gt;V8 JavaScript Engine: Experimental support for WebAssembly in V8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/03/a-webassembly-milestone/&quot;&gt;A WebAssembly Milestone: Experimental Support in Multiple Browsers ★ Mozilla Hacks – the Web developer blog&lt;/a&gt; (&lt;a href=&quot;https://www.mozilla.jp/blog/entry/10539/&quot;&gt;翻訳&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/03/15/previewing-webassembly-experiments/&quot;&gt;Previewing WebAssembly experiments in Microsoft Edge | Microsoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WebKitは、特にアナウンスはありませんが&lt;a href=&quot;https://webkit.org/status/#specification-webassembly&quot; title=&quot;WebKit Feature Status | WebKit&quot;&gt;ステータスは開発中&lt;/a&gt;で&lt;a href=&quot;http://trac.webkit.org/browser/trunk/Source/JavaScriptCore/wasm&quot;&gt;テスト実装&lt;/a&gt;をしています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-and-opinions/state-of-the-art-javascript-in-2016-ab67fc68eb0b&quot; title=&quot;State of the Art JavaScript in 2016 — JavaScript and Opinions — Medium&quot;&gt;State of the Art JavaScript in 2016 — JavaScript and Opinions — Medium&lt;/a&gt;という記事では最近のライブラリやツールの定番的なものについてまとめられています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you don’t need it, don’t use it&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;という一言が表しているように、全ての人がこれらを必要になるわけでもないということも書かれています。&lt;/p&gt;

&lt;p&gt;最近は、このようなツールを使う流れから&lt;a href=&quot;http://www.2ality.com/2016/02/js-fatigue-fatigue.html&quot; title=&quot;JavaScript fatigue&quot;&gt;JavaScript fatigue fatigue &lt;/a&gt;が話題となったりしていました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don’t try to know everything&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;全てを試す必要はなかったり、&lt;a href=&quot;https://medium.com/javascript-inside/learn-the-concepts-part-1-418952d968cb&quot;&gt;ツールを使わないでReactを始める方法&lt;/a&gt;など色々なやり方や意見もあったりします。&lt;/p&gt;

&lt;p&gt;自分なりに疲れないやり方で行うのがいいと思います。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-5.0&quot;&gt;V8 JavaScript Engine: V8 Release 5.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/03/v8-release-50.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.0&quot;&gt;v8project.blogspot.com/2016/03/v8-release-50.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8 5.0リリース。&lt;br&gt;
RegExp Unicode flagのサポート、RegExpのwell-known symbolsをサポート、&lt;code&gt;Object.keys()&lt;/code&gt;やrest parameterの速度改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.7.0-·-babel/babel&quot;&gt;Release v6.7.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.7.0&quot; title=&quot;Release v6.7.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.7.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel v6.7.0リリース。&lt;br&gt;
async/await周りのバグ修正、内部的な変更してAST上に存在したキャッシュをWeakMapベースで保存するように変更。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node/changelog.md-at-v5.8.0-·-nodejs/node&quot;&gt;node/CHANGELOG.md at v5.8.0 · nodejs/node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodejs/node/blob/v5.8.0/CHANGELOG.md&quot; title=&quot;node/CHANGELOG.md at v5.8.0 · nodejs/node&quot;&gt;github.com/nodejs/node/blob/v5.8.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 5.8.0リリース。&lt;br&gt;
&lt;code&gt;path.normalize&lt;/code&gt;のレグレッションを修正、&lt;code&gt;util.format&lt;/code&gt;のパフォーマンス改善。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/5585&quot; title=&quot;Node 5.7.1 path.normalize broken · Issue #5585 · nodejs/node&quot;&gt;Node 5.7.1 path.normalize broken · Issue #5585 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/5360&quot; title=&quot;util: improve util.format performance by evanlucas · Pull Request #5360 · nodejs/node&quot;&gt;util: improve util.format performance by evanlucas · Pull Request #5360 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v5.9.0-(stable)-|-node.js&quot;&gt;Node v5.9.0 (Stable) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v5.9.0/&quot; title=&quot;Node v5.9.0 (Stable) | Node.js&quot;&gt;nodejs.org/en/blog/release/v5.9.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 5.9.0リリース。&lt;br&gt;
&lt;code&gt;vm&lt;/code&gt;モジュールのメモリ使用量の削減、&lt;code&gt;zlib&lt;/code&gt;モジュールがconcatenated archivesをサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.5.0-·-testem/testem&quot;&gt;Release v1.5.0 · testem/testem&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/testem/testem/releases/tag/v1.5.0&quot; title=&quot;Release v1.5.0 · testem/testem&quot;&gt;github.com/testem/testem/releases/tag/v1.5.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;testem v1.5.0リリース。&lt;br&gt;
複数のTest Pageを指定するとparallel実行できるように、Mochaのテストにかかった時間を表示できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react.js-v15.0-changes---blog.koba04.com&quot;&gt;React.js v15.0 changes - blog.koba04.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.koba04.com/post/2016/03/09/react-js-v15-changes/&quot; title=&quot;React.js v15.0 changes - blog.koba04.com&quot;&gt;blog.koba04.com/post/2016/03/09/react-js-v15-changes/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React.js v15.0 RCの変更点まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-webassembly-milestone:-experimental-support-in-multiple-browsers-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;A WebAssembly Milestone: Experimental Support in Multiple Browsers ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/03/a-webassembly-milestone/&quot; title=&quot;A WebAssembly Milestone: Experimental Support in Multiple Browsers ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/03/a-webassembly-milestone/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;status&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyの仕様、ブラウザの実装のステータスについて。&lt;br&gt;
最初のbinary formatドラフト仕様がでており、Firefox、Chrome、ChackraCoreのNightlyで試験的な実装がされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2016/03/experimental-support-for-webassembly.html&quot; title=&quot;V8 JavaScript Engine: Experimental support for WebAssembly in V8&quot;&gt;V8 JavaScript Engine: Experimental support for WebAssembly in V8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/03/15/previewing-webassembly-experiments/&quot; title=&quot;Previewing WebAssembly experiments in Microsoft Edge | Microsoft Edge Dev Blog&quot;&gt;Previewing WebAssembly experiments in Microsoft Edge | Microsoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-開発ツールを使った-service-workers-と-push-のデバッグ-|-mozilla-developer-street-(modest)&quot;&gt;Firefox 開発ツールを使った Service Workers と Push のデバッグ | Mozilla Developer Street (modest)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.mozilla.jp/2016/03/debugging-service-workers-and-push-with-firefox-devtools/&quot; title=&quot;Firefox 開発ツールを使った Service Workers と Push のデバッグ | Mozilla Developer Street (modest)&quot;&gt;dev.mozilla.jp/2016/03/debugging-service-workers-and-push-with-firefox-devtools/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;FirefoxでのService WorkerとPush Notificationsのデバッグについて。&lt;br&gt;
&lt;code&gt;about:debugging&lt;/code&gt;というデバッグのダッシュボード画面についても書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;state-of-the-art-javascript-in-2016-—-javascript-and-opinions-—-medium&quot;&gt;State of the Art JavaScript in 2016 — JavaScript and Opinions — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-and-opinions/state-of-the-art-javascript-in-2016-ab67fc68eb0b&quot; title=&quot;State of the Art JavaScript in 2016 — JavaScript and Opinions — Medium&quot;&gt;medium.com/javascript-and-opinions/state-of-the-art-javascript-in-2016-ab67fc68eb0b&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;最近のJavaScriptにおける主流となったライブラリやツールについて。&lt;br&gt;
React、Redux、Babel、ESLint、npm、webpack、mochaなどのテストツールなどや人について&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you don’t need it, don’t use it&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;と書かれているように全てに対するベストではないという話も書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learning-react-without-using-react-part-1-—-javascript-inside-—-medium&quot;&gt;Learning React Without Using React Part 1 — JavaScript Inside — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-inside/learn-the-concepts-part-1-418952d968cb&quot; title=&quot;Learning React Without Using React Part 1 — JavaScript Inside — Medium&quot;&gt;medium.com/javascript-inside/learn-the-concepts-part-1-418952d968cb&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ツールなどは使わないで学ぶReactのチュートリアル。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack-ftw!!!!&quot;&gt;Webpack FTW!!!!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://k94n.com/webpack-ftw&quot; title=&quot;Webpack FTW!!!!&quot;&gt;k94n.com/webpack-ftw&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackはどんなことができるのかというのをわかりやすく簡単に紹介してる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/k9ordon/webpack-ftw&quot; title=&quot;Webpack FTW // Speaker Deck&quot;&gt;Webpack FTW // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;特集：c#×javascript：ecmascriptの最新情報を得るには-(1/2)---＠it&quot;&gt;特集：C#×JavaScript：ECMAScriptの最新情報を得るには (1/2) - ＠IT&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.atmarkit.co.jp/ait/articles/1603/11/news042.html&quot; title=&quot;特集：C#×JavaScript：ECMAScriptの最新情報を得るには (1/2) - ＠IT&quot;&gt;www.atmarkit.co.jp/ait/articles/1603/11/news042.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptの仕様策定のプロセスやリソースがどこにあるかがまとまってる記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jest-|-&amp;quot;javascript-unit-testing-performance&amp;quot;&quot;&gt;Jest | &amp;quot;JavaScript Unit Testing Performance&amp;quot;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/jest/blog/2016/03/11/javascript-unit-testing-performance.html&quot; title=&quot;Jest | &amp;quot;JavaScript Unit Testing Performance&amp;quot;&quot;&gt;facebook.github.io/jest/blog/2016/03/11/javascript-unit-testing-performance.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;テストフレームワークのJestが実行時間を改善するためにやっていることについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-proposal-for-weak-references:-weakref&quot;&gt;JavaScript Proposal for weak references: WeakRef&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ponyfoo.com/articles/weakref&quot; title=&quot;JavaScript Proposal for weak references: WeakRef&quot;&gt;ponyfoo.com/articles/weakref&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;WeakRef&lt;/code&gt; Proposalについての解説。&lt;br&gt;
WeakMapと同じようにWeakな扱いだが、WeakMapと違いGCで回収された時に呼ばれる&lt;code&gt;executor&lt;/code&gt;を指定できる。(WeakMap/Setは回収されたタイミングを知ることができない)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-weakrefs/blob/master/specs/weakrefs.md&quot; title=&quot;proposal-weakrefs/weakrefs.md at master · tc39/proposal-weakrefs&quot;&gt;proposal-weakrefs/weakrefs.md at master · tc39/proposal-weakrefs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js-buffer-api-changes-—-medium&quot;&gt;Node.js Buffer API Changes — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@jasnell/node-js-buffer-api-changes-3c21f1048f97&quot; title=&quot;Node.js Buffer API Changes — Medium&quot;&gt;medium.com/@jasnell/node-js-buffer-api-changes-3c21f1048f97&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v6で予定されているBuffer APIの変更についての解説&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fluent-conference-2016-(san-francisco,-ca)---youtube&quot;&gt;Fluent Conference 2016 (San Francisco, CA) - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=9UYoKyuFXrM&amp;amp;amp;list=PL055Epbe6d5bQubu5EWf_kUNA3ef_qbmL&quot; title=&quot;Fluent Conference 2016 (San Francisco, CA) - YouTube&quot;&gt;www.youtube.com/watch?v=9UYoKyuFXrM&amp;amp;list=PL055Epbe6d5bQubu5EWf_kUNA3ef_qbmL&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fluent Conference 2016の動画が公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;postcss.parts-|-a-searchable-catalog-of-postcss-plugins&quot;&gt;PostCSS.parts | A searchable catalog of PostCSS plugins&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://postcss.parts/&quot; title=&quot;PostCSS.parts | A searchable catalog of PostCSS plugins&quot;&gt;postcss.parts/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;PostCSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;検索&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PostCSSのカタログサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-inversifyjs-2.0&quot;&gt;Introducing InversifyJS 2.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.wolksoftware.com/introducing-inversify-2&quot; title=&quot;Introducing InversifyJS 2.0&quot;&gt;blog.wolksoftware.com/introducing-inversify-2&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Inversion of control (IoC)コンテナーのTypeScript向けライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rajasegar/compack:-an-awesome-bundler-for-web-components&quot;&gt;rajasegar/compack: An awesome bundler for Web Components&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rajasegar/compack&quot; title=&quot;rajasegar/compack: An awesome bundler for Web Components&quot;&gt;github.com/rajasegar/compack&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsのscaffoldingとbundleするツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eanplatter/enclave:-a-simpler-way-to-compile-react-applications-http://enclave.js.org&quot;&gt;eanplatter/enclave: A simpler way to compile React applications http://enclave.js.org&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eanplatter/enclave&quot; title=&quot;eanplatter/enclave: A simpler way to compile React applications http://enclave.js.org&quot;&gt;github.com/eanplatter/enclave&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;して&lt;code&gt;npm start&lt;/code&gt;するだけで、React+Babelな環境を動かせるブートストラップ的なツール&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 17 Mar 2016 22:03:00 +0900</pubDate>
        <link>http://jser.info/2016/03/17/react-webassembly-art-of-javascript/</link>
        <guid isPermaLink="true">http://jser.info/2016/03/17/react-webassembly-art-of-javascript/</guid>
        
        <category>React</category>
        
        <category>WebAssembly</category>
        
        <category>JavaScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-03-08のJS: React v15.0 RC、Reactパフォーマンス調査、DDD</title>
        <description>&lt;p&gt;JSer.info #269 - React v15.0 RC1がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/03/07/react-v15-rc1.html&quot; title=&quot;React v15.0 Release Candidate | React&quot;&gt;React v15.0 Release Candidate | React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html&quot; title=&quot;New Versioning Scheme&quot;&gt;New Versioning Scheme&lt;/a&gt;で書かれているように、Reactの次のメジャーバージョンはv0.14 -&amp;gt; v15.0となります。&lt;/p&gt;

&lt;p&gt;v15.0 RC1では&lt;code&gt;data-reactid&lt;/code&gt;がクライアントサイドのレンダリングではなくなる、&lt;code&gt;null&lt;/code&gt;をコメントとしてレンダリングするようになるなどレンダリングに関する変更がおこなわれています。&lt;br&gt;
&lt;a href=&quot;http://facebook.github.io/react/blog/2015/10/07/react-v0.14.html&quot; title=&quot;React v0.14&quot;&gt;React v0.14&lt;/a&gt;で&lt;code&gt;react&lt;/code&gt;と&lt;code&gt;react-dom&lt;/code&gt;にパッケージが分けられ、それぞれでメソッドも分離されたため非推奨となっていたメソッドがありました。&lt;/p&gt;

&lt;p&gt;v15.0ではこれらの非推奨メソッドの削除や警告メッセージの改善などが行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://benchling.engineering/performance-engineering-with-react/&quot; title=&quot;Performance Engineering with React&quot;&gt;Performance Engineering with React&lt;/a&gt;という記事ではReactを使ったアプリのボトルネック調査方法について書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/perf.html&quot; title=&quot;Performance Tools | React&quot;&gt;Performance Tools | React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;react-addons-perf&lt;/code&gt;を使った計測方法や、どのように改善するかなどについて書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/armorik83/da-xing-hurontoendokai-fa-niokerutypescripttoddd&quot; title=&quot;大型フロントエンド開発におけるTypeScriptとDDD // Speaker Deck&quot;&gt;大型フロントエンド開発におけるTypeScriptとDDD // Speaker Deck&lt;/a&gt;というスライドでは、大規模なアプリケーションにおける設計や考え方、悩みどころについて書かれています。&lt;/p&gt;

&lt;p&gt;Viewとドメインロジックを切り離すための考え方やTypeScriptとDDDについて書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://labs.gree.jp/blog/2013/12/9330/&quot; title=&quot;SNSチームでのドメイン駆動設計の実践 | GREE Engineers&amp;amp;#39; Blog&quot;&gt;SNSチームでのドメイン駆動設計の実践 | GREE Engineers&amp;#39; Blog&lt;/a&gt;なども合わせてみるといいかもしれませんが、フロントエンドと呼ばれる分野でもこういう話が増えてきているようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/yukieen/hurontoendohadddfalsemeng-wojian-ruka&quot; title=&quot;フロントエンドはDDDの夢を見るか // Speaker Deck&quot;&gt;フロントエンドはDDDの夢を見るか // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-v15.0-release-candidate-|-react&quot;&gt;React v15.0 Release Candidate | React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/03/07/react-v15-rc1.html&quot; title=&quot;React v15.0 Release Candidate | React&quot;&gt;facebook.github.io/react/blog/2016/03/07/react-v15-rc1.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React v15.0 RC1リリース。&lt;br&gt;
&lt;code&gt;data-reactid&lt;/code&gt;がクライアントサイドのレンダリングではなくなる、&lt;code&gt;null&lt;/code&gt;をコメントとしてレンダリングするようになる。&lt;br&gt;
また非推奨となっていたメソッドが&lt;code&gt;react&lt;/code&gt;と&lt;code&gt;react-dom&lt;/code&gt;それぞれから削除された。&lt;br&gt;
また、警告メッセージの改善などが行われている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.3.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.3.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/03/eslint-v2.3.0-released&quot; title=&quot;ESLint v2.3.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/03/eslint-v2.3.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint v2.3.0リリース。&lt;br&gt;
ルールのoff/wan/errorを0,1,2という数字ではなく文字列で指定出来るように、ES2016で追加される&lt;code&gt;**&lt;/code&gt;の対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-engineering-with-react&quot;&gt;Performance Engineering with React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://benchling.engineering/performance-engineering-with-react/&quot; title=&quot;Performance Engineering with React&quot;&gt;benchling.engineering/performance-engineering-with-react/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactにおけるパフォーマンス調査の手法やどのようにボトルネックを見つけるかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;僕がネイティブな-css-変数にわくわくする理由&quot;&gt;僕がネイティブな CSS 変数にわくわくする理由&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://terkel.github.io/why-im-excited-about-native-css-variables/&quot; title=&quot;僕がネイティブな CSS 変数にわくわくする理由&quot;&gt;terkel.github.io/why-im-excited-about-native-css-variables/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS Custom Propertyについて書かれた&amp;quot;Why I&amp;#39;m Excited About Native CSS Variables&amp;quot;の翻訳。&lt;br&gt;
コンポーネント名接頭辞にした変数名を使うという命名規則についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://terkel.github.io/why-im-excited-about-native-css-variables/&quot; title=&quot;僕がネイティブな CSS 変数にわくわくする理由&quot;&gt;僕がネイティブな CSS 変数にわくわくする理由&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;high-performance-web-worker-messages-|-read-the-tea-leaves&quot;&gt;High-performance Web Worker messages | Read the Tea Leaves&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://nolanlawson.com/2016/02/29/high-performance-web-worker-messages/&quot; title=&quot;High-performance Web Worker messages | Read the Tea Leaves&quot;&gt;nolanlawson.com/2016/02/29/high-performance-web-worker-messages/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;単純なデータ転送についてのWeb Workerのパフォーマンステスト。&lt;br&gt;
- &lt;code&gt;JSON.stringify()&lt;/code&gt;/&lt;code&gt;JSON.parse()&lt;/code&gt;の利用&lt;br&gt;
- 一部のみ適応&lt;br&gt;
- 生オブジェクトのまま&lt;br&gt;
をそれぞれ比較したもの&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2015/07/how-fast-are-web-workers/&quot; title=&quot;How fast are web workers? ★ Mozilla Hacks – the Web developer blog&quot;&gt;How fast are web workers? ★ Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://glebbahmutov.com/blog/fast-legoization/&quot; title=&quot;Fast legoization | Better world by better software&quot;&gt;Fast legoization | Better world by better software&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fast-legoization-|-better-world-by-better-software&quot;&gt;Fast legoization | Better world by better software&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://glebbahmutov.com/blog/fast-legoization/&quot; title=&quot;Fast legoization | Better world by better software&quot;&gt;glebbahmutov.com/blog/fast-legoization/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Workerを使って画像データを効率よく処理するテクニックについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;なぜ絵文字を含む文字を1文字ずつに分けるのにarray.fromだけで十分なのか？---qiita&quot;&gt;なぜ絵文字を含む文字を1文字ずつに分けるのにArray.fromだけで十分なのか？ - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/alucky0707/items/697598e49ff56191c139&quot; title=&quot;なぜ絵文字を含む文字を1文字ずつに分けるのにArray.fromだけで十分なのか？ - Qiita&quot;&gt;qiita.com/alucky0707/items/697598e49ff56191c139&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;split(&amp;quot;&amp;quot;)&lt;/code&gt;だと絵文字などでサロゲートペアの問題が起きるため、ES6で追加された&lt;code&gt;Array.from&lt;/code&gt;などを使うことで正しく扱えるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-astを始める最初の一歩-|-web-scratch&quot;&gt;JavaScript ASTを始める最初の一歩 | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/03/06/ast-first-step/&quot; title=&quot;JavaScript ASTを始める最初の一歩 | Web Scratch&quot;&gt;efcl.info/2016/03/06/ast-first-step/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのASTを扱ったツールを書きたい人が最初に把握しておくといい部分についてのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;data-structures-in-javascript---ben&amp;#x27;s-blog&quot;&gt;Data structures in JavaScript - Ben&amp;#x27;s Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/&quot; title=&quot;Data structures in JavaScript - Ben&amp;#39;s Blog&quot;&gt;blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アルゴリズム&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでデータ構造やアルゴリズムについて学ぶシリーズ記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-the-webvr-1.0-api-proposal-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Introducing the WebVR 1.0 API Proposal ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/03/introducing-the-webvr-1-0-api-proposal/&quot; title=&quot;Introducing the WebVR 1.0 API Proposal ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/03/introducing-the-webvr-1-0-api-proposal/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VR&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebVR 1.0 APIについての解説記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecma262のiteration-protocolsで遅延評価するiteratorを作る---snyk_s-log&quot;&gt;ECMA262のIteration protocolsで遅延評価するIteratorを作る - snyk_s log&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://saneyukis.hatenablog.com/entry/2016/03/04/030337&quot; title=&quot;ECMA262のIteration protocolsで遅延評価するIteratorを作る - snyk\_s log&quot;&gt;saneyukis.hatenablog.com/entry/2016/03/04/030337&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptの&lt;code&gt;Symbol.iterator&lt;/code&gt;を使い遅延評価出来るコレクション処理を行うという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-transducers-in-javascript-—-medium&quot;&gt;Understanding Transducers in JavaScript — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@roman01la/understanding-transducers-in-javascript-3500d3bd9624&quot; title=&quot;Understanding Transducers in JavaScript — Medium&quot;&gt;medium.com/@roman01la/understanding-transducers-in-javascript-3500d3bd9624&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Transformer protocolを実装したコレクション処理を実装することで、一度の処理で同時に複数の変換を行うことが出来るようにする仕組みであるTransducersについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cognitect-labs/transducers-js&quot; title=&quot;cognitect-labs/transducers-js: Transducers for JavaScript&quot;&gt;cognitect-labs/transducers-js: Transducers for JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;matthewmueller/28kb-react-redux-routing:-react-+-redux-+-routing-stack-for-just-28kb&quot;&gt;matthewmueller/28kb-react-redux-routing: React + Redux + Routing Stack for just 28kb&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/matthewmueller/28kb-react-redux-routing&quot; title=&quot;matthewmueller/28kb-react-redux-routing: React + Redux + Routing Stack for just 28kb&quot;&gt;github.com/matthewmueller/28kb-react-redux-routing&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React + Redux + ルーティングというよくある構成を28kbで実現するというコンセプトリポジトリ。&lt;br&gt;
Reactの代わりにPreact、Reduxの代わりにラップしたSocrates、ルーティングはenroute + Reduxミドルウェアを使っている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;大型フロントエンド開発におけるtypescriptとddd-//-speaker-deck&quot;&gt;大型フロントエンド開発におけるTypeScriptとDDD // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/armorik83/da-xing-hurontoendokai-fa-niokerutypescripttoddd&quot; title=&quot;大型フロントエンド開発におけるTypeScriptとDDD // Speaker Deck&quot;&gt;speakerdeck.com/armorik83/da-xing-hurontoendokai-fa-niokerutypescripttoddd&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DDD&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;大規模なクライアントサイドを書く場合の構造やテスト、環境についてのスライド。&lt;br&gt;
TypeScriptでちゃんとしたドメインモデルを構築し、Viewのレイヤーとの分離を図る仕組みの作り方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react.js-conf-2016---steve-mcguire---performance-without-compromise---youtube&quot;&gt;React.js Conf 2016 - Steve McGuire - Performance Without Compromise - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=kDARP5QZ6nU&amp;amp;amp;list=PLb0IAmt7-GS0M8Q95RIc2lOM6nc77q1IY&amp;amp;amp;index=28&quot; title=&quot;React.js Conf 2016 - Steve McGuire - Performance Without Compromise - YouTube&quot;&gt;www.youtube.com/watch?v=kDARP5QZ6nU&amp;amp;list=PLb0IAmt7-GS0M8Q95RIc2lOM6nc77q1IY&amp;amp;index=28&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Netflixのクライアントサイドのアーキテクチャについて。&lt;br&gt;
mixinじゃなくて高階関数でレイヤーを表現、宣言的にするためのルールとしての&amp;quot;No refs&amp;quot;。&lt;br&gt;
またパフォーマンス面では、Transducersの話、静的なpropと動的なpropは分けることでの最適化についてなど。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;designing-in-react:-why-and-how-//-speaker-deck&quot;&gt;Designing in React: Why and How // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/fand/designing-in-react-why-and-how&quot; title=&quot;Designing in React: Why and How // Speaker Deck&quot;&gt;speakerdeck.com/fand/designing-in-react-why-and-how&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React語圏でどういう試みがあって何を解決しようとしてたかという話&lt;br&gt;
CSS、アニメーションについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gulp:-the-good-parts-//-speaker-deck&quot;&gt;gulp: The Good Parts // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/jmblog/gulp-the-good-parts&quot; title=&quot;gulp: The Good Parts // Speaker Deck&quot;&gt;speakerdeck.com/jmblog/gulp-the-good-parts&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;gulp&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;gulpのプラクティスについて。&lt;br&gt;
タスクの分割、設定の外部ファイル化、v4を見据えたタスクの書き方、v4の変更点について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;code-cartoons-—-medium&quot;&gt;Code Cartoons — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://code-cartoons.com/&quot; title=&quot;Code Cartoons — Medium&quot;&gt;code-cartoons.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Cartoonsで学ぶFlux、Redux、Relayなどのデータコントロールフロー&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rebass&quot;&gt;Rebass&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jxnblk.com/rebass/&quot; title=&quot;Rebass&quot;&gt;jxnblk.com/rebass/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactを使ったUIライブラリ。&lt;br&gt;
ステートレスコンポーネントとして実装されている。&lt;br&gt;
コンポーネントづくりの参考になりそう&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tryolabs/fetch-it:-an-enhanced-http-client-based-on-fetch.&quot;&gt;tryolabs/fetch-it: An enhanced HTTP client based on fetch.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tryolabs/fetch-it&quot; title=&quot;tryolabs/fetch-it: An enhanced HTTP client based on fetch.&quot;&gt;github.com/tryolabs/fetch-it&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fetch APIをベースにしたHTTPクライアントライブラリ。&lt;br&gt;
middlewareで処理を追加できる仕組みを持っている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.tryolabs.com/2016/03/02/fetch-it-enhanced-http-client-based-on-fetch/&quot; title=&quot;fetch-it: enhanced HTTP client based on fetch | Tryolabs | Blog&quot;&gt;fetch-it: enhanced HTTP client based on fetch | Tryolabs | Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cognitect-labs/transducers-js:-transducers-for-javascript&quot;&gt;cognitect-labs/transducers-js: Transducers for JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cognitect-labs/transducers-js&quot; title=&quot;cognitect-labs/transducers-js: Transducers for JavaScript&quot;&gt;github.com/cognitect-labs/transducers-js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Transformer protocolを実装したコレクション処理を実装することで、一度の処理で同時に複数の変換を行うことが出来るようにする仕組みとライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;uber-common/react-vis&quot;&gt;uber-common/react-vis&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/uber-common/react-vis&quot; title=&quot;uber-common/react-vis&quot;&gt;github.com/uber-common/react-vis&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;グラフ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Uberのグラフやビジュアライズ系のReact Componentライブラリ。&lt;br&gt;
棒グラフ、折れ線グラフ、円グラフ、テーブル、ツリーマップなど色々な表現が用意されてる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;quick-browserify-by-sandeep-kumar-patel-[leanpub-pdf/ipad/kindle]&quot;&gt;Quick Browserify by Sandeep Kumar Patel [Leanpub PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/browserify&quot; title=&quot;Quick Browserify by Sandeep Kumar Patel \[Leanpub PDF/iPad/Kindle\]&quot;&gt;leanpub.com/browserify&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Browserifyについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 08 Mar 2016 23:49:00 +0900</pubDate>
        <link>http://jser.info/2016/03/08/react15.0rc-perf-ddd/</link>
        <guid isPermaLink="true">http://jser.info/2016/03/08/react15.0rc-perf-ddd/</guid>
        
        <category>JavaScript</category>
        
        <category>DDD</category>
        
        <category>React</category>
        
        <category>Perf</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-03-03のJS: Ember.js LTS、ECMA i18n API 3rd Edition RC、jQuery 3での変更点</title>
        <description>&lt;p&gt;JSer.info #268 - &lt;a href=&quot;http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html&quot; title=&quot;Ember.js - Announcing Ember&amp;amp;#39;s First LTS Release&quot;&gt;Ember.js - Announcing Ember&amp;#39;s First LTS Release&lt;/a&gt;ではEmber.jsのLTS(Long Term Support)について書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/02/29/ember-2-4-released.html&quot; title=&quot;Ember.js 2.4&quot;&gt;Ember.js 2.4&lt;/a&gt;が最初のLTSリリースとなります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emberjs.com/images/blog/2016-02/Releases@3x.svg&quot; alt=&quot;LTS&quot;&gt;&lt;/p&gt;

&lt;p&gt;LTSでは36週の間バグ修正のリリースが行われ、60週間はセキュリティパッチのリリースが行われるリリースサイクルになります。&lt;br&gt;
つまりEmber.js 2.4は2016年11月までバグ修正が行われ、2017年4月までセキュリティリリースが継続される形になります。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;ECMA-402ことECMAScript i18n APIの3rd EditionがRCリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tc39.github.io/ecma402/&quot; title=&quot;ECMAScript® 2016 Internationalization API Specification (3rd Edition)&quot;&gt;ECMAScript® 2016 Internationalization API Specification (3rd Edition)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma402/releases/tag/3.0-rc-1&quot; title=&quot;Release 3rd Edition - Release Candidate · tc39/ecma402&quot;&gt;Release 3rd Edition - Release Candidate · tc39/ecma402&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl&quot; title=&quot;Intl オブジェクト&quot;&gt;Intl オブジェクト&lt;/a&gt;と呼ばれる国際化関連のAPIを定めている仕様です。&lt;/p&gt;

&lt;p&gt;2nd Editionからのユーザーにとっての違いは&lt;a href=&quot;http://tc39.github.io/ecma402/#sec-intl.getcanonicallocales&quot; title=&quot;Intl.getCanonicalLocales (locales)&quot;&gt;&lt;code&gt;Intl.getCanonicalLocales (locales)&lt;/code&gt;&lt;/a&gt;のAPIが増えただけぐらいになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/tc39-notes/blob/master/es7/2015-11/nov-19.md#abstract-locale-operations&quot;&gt;tc39-notes/nov-19.md at master · rwaldron/tc39-notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma402/pull/78&quot;&gt;Exposing &lt;code&gt;CanonicalizeLocaleList()&lt;/code&gt; abstract operation via &lt;code&gt;Intl.getCanonicalLocales()&lt;/code&gt; by caridy · Pull Request #78 · tc39/ecma402&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ECMA-402もECMAScript(ECMA-262)と同じく&lt;a href=&quot;https://tc39.github.io/process-document/&quot; title=&quot;The TC39 Process&quot;&gt;The TC39 Process&lt;/a&gt;を採用しています。&lt;br&gt;
そのため毎年リリース + StageでのProposal管理が&lt;a href=&quot;https://github.com/tc39/ecma402&quot; title=&quot;tc39/ecma402: Status, process, and documents for ECMA 402&quot;&gt;tc39/ecma402: Status, process, and documents for ECMA 402&lt;/a&gt;で行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/slide-what-is-ecmascript/&quot; title=&quot;Introduction | ECMAScriptとは何か？&quot;&gt;Introduction | ECMAScriptとは何か？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/whats-new-in-jquery-3/&quot; title=&quot;What&amp;amp;#39;s New in jQuery 3 - Telerik Developer Network&quot;&gt;What&amp;#39;s New in jQuery 3 - Telerik Developer Network&lt;/a&gt;という記事では、現在&lt;a href=&quot;https://blog.jquery.com/2016/01/14/jquery-3-0-beta-released/&quot; title=&quot;Beta&quot;&gt;Beta&lt;/a&gt;リリースされているjQuery 3について詳しく解説されています。&lt;/p&gt;

&lt;p&gt;細かな変更点について書かれているので、jQueryに興味がある人は見てみるといいです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.6.0-·-babel/babel&quot;&gt;Release v6.6.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.6.0&quot; title=&quot;Release v6.6.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.6.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel 6.6.0リリース。&lt;br&gt;
transform-es3-member-expression-literalsが再度組み合わせて利用できるように、Babel 6で削除されたオプションに関するエラーをわかりやすく表示されるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---announcing-ember&amp;#x27;s-first-lts-release&quot;&gt;Ember.js - Announcing Ember&amp;#x27;s First LTS Release&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html&quot; title=&quot;Ember.js - Announcing Ember&amp;#39;s First LTS Release&quot;&gt;emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Ember.jsがLTS(Long Term Support)リリースを行う予定。&lt;br&gt;
Ember.js 2.4が最初のLTSリリースとなる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---ember.js-2.4-and-2.5-beta-released&quot;&gt;Ember.js - Ember.js 2.4 and 2.5 Beta Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/02/29/ember-2-4-released.html&quot; title=&quot;Ember.js - Ember.js 2.4 and 2.5 Beta Released&quot;&gt;emberjs.com/blog/2016/02/29/ember-2-4-released.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Ember.js 2.4と2.5 Betaリリース。&lt;br&gt;
2.5では&lt;code&gt;Object.assign&lt;/code&gt;のpolyfillである&lt;code&gt;Ember.assign&lt;/code&gt;の追加、イベントのテストヘルパーの追加&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-3rd-edition---release-candidate-·-tc39/ecma402-·-github&quot;&gt;Release 3rd Edition - Release Candidate · tc39/ecma402 · GitHub&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/ecma402/releases/tag/3.0-rc-1&quot; title=&quot;Release 3rd Edition - Release Candidate · tc39/ecma402 · GitHub&quot;&gt;github.com/tc39/ecma402/releases/tag/3.0-rc-1&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript Internationalization API 3rd Edition RCリリース。 i18n APIについて定義されてる仕様書&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#x27;s-new-in-jquery-3---telerik-developer-network&quot;&gt;What&amp;#x27;s New in jQuery 3 - Telerik Developer Network&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/whats-new-in-jquery-3/&quot; title=&quot;What&amp;#39;s New in jQuery 3 - Telerik Developer Network&quot;&gt;developer.telerik.com/featured/whats-new-in-jquery-3/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery 3についての解説。&lt;br&gt;
for/ofでの列挙、&lt;code&gt;$.get&lt;/code&gt;/&lt;code&gt;$.post&lt;/code&gt;のシグネチャ追加、requestAnimationFrameの対応、&lt;code&gt;data()&lt;/code&gt;の動作変更、DeferredがPromise/A+互換に、SVGのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;step-by-step-guide-to-building-react-redux-apps-—-medium&quot;&gt;Step by Step Guide To Building React Redux Apps — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@rajaraodv/step-by-step-guide-to-building-react-redux-apps-using-mocks-48ca0f47f9a&quot; title=&quot;Step by Step Guide To Building React Redux Apps — Medium&quot;&gt;medium.com/@rajaraodv/step-by-step-guide-to-building-react-redux-apps-using-mocks-48ca0f47f9a&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React+Reduxをステップバイステップで学ぶチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;design-by-contract-with-flow,-react,-and-eslint-·-jeff-winkler&quot;&gt;Design by Contract with Flow, React, and ESLint · Jeff Winkler&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://react.rocks/blog/post/propTypes_React_Flow/&quot; title=&quot;Design by Contract with Flow, React, and ESLint · Jeff Winkler&quot;&gt;react.rocks/blog/post/propTypes_React_Flow/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactのコードをESLint + FlowTypeでチェックする仕組みについての記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;preload:-what-is-it-good-for?-–-smashing-magazine&quot;&gt;Preload: What Is It Good For? – Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/&quot; title=&quot;Preload: What Is It Good For? – Smashing Magazine&quot;&gt;www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt;でのpreloadについての詳しい解説。&lt;br&gt;
ブラウザがちゃんと優先度を扱える、CSPと同居できる、&lt;code&gt;as&lt;/code&gt;属性を使い適切な形でリソースを読み込めるなどの特徴について書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;building-command-line-tools-with-node.js---atlassian-developers&quot;&gt;Building command line tools with Node.js - Atlassian Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.atlassian.com/blog/2015/11/scripting-with-node/?categories=node.js&quot; title=&quot;Building command line tools with Node.js - Atlassian Developers&quot;&gt;developer.atlassian.com/blog/2015/11/scripting-with-node/?categories=node.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでCLI作るチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;falcor入門-1日目-falcorとは何者か---qiita&quot;&gt;Falcor入門 1日目 Falcorとは何者か - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/Quramy/items/5cf4f112d715c2e2d300&quot; title=&quot;Falcor入門 1日目 Falcorとは何者か - Qiita&quot;&gt;qiita.com/Quramy/items/5cf4f112d715c2e2d300&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;API&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Falcorとはどういうものなのかについての解説。&lt;br&gt;
データの透過性と一貫性について&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Falcorを利用する大きなメリットの1つは「データがサーバにあるのか、クライアントにあるのか意識することなく扱えるようになること」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescriptの型定義管理ツールtypingsについて---qiita&quot;&gt;TypeScriptの型定義管理ツールTypingsについて - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/literalice/items/d83249a5646abcb0bec6&quot; title=&quot;TypeScriptの型定義管理ツールTypingsについて - Qiita&quot;&gt;qiita.com/literalice/items/d83249a5646abcb0bec6&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;typingsの使い方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;async/await:-it’s-good-and-bad-—-medium&quot;&gt;async/await: It’s Good and Bad — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@benlesh/async-await-it-s-good-and-bad-15cf121ade40&quot; title=&quot;async/await: It’s Good and Bad — Medium&quot;&gt;medium.com/@benlesh/async-await-it-s-good-and-bad-15cf121ade40&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/awaitのメリット/デメリットについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gaearon/react-makes-you-sad:-here’s-a-flowchart-to-make-you-happy-again!&quot;&gt;gaearon/react-makes-you-sad: Here’s a flowchart to make you happy again!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gaearon/react-makes-you-sad&quot; title=&quot;gaearon/react-makes-you-sad: Here’s a flowchart to make you happy again!&quot;&gt;github.com/gaearon/react-makes-you-sad&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;画像&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactの学ぶ手順やエコシステムについてのアドバイス的な図&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/kuy/items/bfe5975205c9237ebd26&quot;&gt;日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;examples-of-name-clashes-in-javascript’s-standard-library&quot;&gt;Examples of name clashes in JavaScript’s standard library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2016/02/js-name-clashes.html&quot; title=&quot;Examples of name clashes in JavaScript’s standard library&quot;&gt;www.2ality.com/2016/02/js-name-clashes.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;新たに追加するメソッド名が衝突したBreak the webの例とSymbolについて。&lt;br&gt;
&lt;code&gt;Symbol.unscopables&lt;/code&gt;が導入された経緯について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;elmish:-functional-programming-in-javascript-—-medium&quot;&gt;Elmish: Functional Programming in Javascript — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@chetcorcos/elmish-functional-programming-in-javascript-50995f1d4b9e&quot; title=&quot;Elmish: Functional Programming in Javascript — Medium&quot;&gt;medium.com/@chetcorcos/elmish-functional-programming-in-javascript-50995f1d4b9e&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Elm的なアーキテクチャをJavaScriptで実装しながら学んでみたという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ccorcos/elmish&quot; title=&quot;ccorcos/elmish: A Javascript UI library inspired by Elm&quot;&gt;ccorcos/elmish: A Javascript UI library inspired by Elm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;confoo:-measuring-spa-performance-//-speaker-deck&quot;&gt;ConFoo: Measuring SPA Performance // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/bluesmoon/confoo-measuring-spa-performance&quot; title=&quot;ConFoo: Measuring SPA Performance // Speaker Deck&quot;&gt;speakerdeck.com/bluesmoon/confoo-measuring-spa-performance&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SPAでパフォーマンスをどう計測するについてのスライド。&lt;br&gt;
XHRのhook、MutationObserver、FetchObserverについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react.js-conf-2016---youtube&quot;&gt;React.js Conf 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLb0IAmt7-GS0M8Q95RIc2lOM6nc77q1IY&quot; title=&quot;React.js Conf 2016 - YouTube&quot;&gt;www.youtube.com/playlist?list=PLb0IAmt7-GS0M8Q95RIc2lOM6nc77q1IY&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React.js Conf 2016の動画まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;doclets&quot;&gt;Doclets&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.doclets.io/&quot; title=&quot;Doclets&quot;&gt;www.doclets.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Markdown&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSDocとMarkdownのドキュメントホスティングサイト。&lt;br&gt;
ymlにソースとMarkdownファイルを指定すれば、ドキュメントを作ってくれる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;html-standard-日本語訳&quot;&gt;HTML Standard 日本語訳&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://momdo.github.io/html/&quot; title=&quot;HTML Standard 日本語訳&quot;&gt;momdo.github.io/html/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WHATWG Living Standardの日本語訳&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://momdo.hatenablog.jp/entry/20160301/1456833788&quot; title=&quot;HTML Living Standard訳はじめました - 水底の血&quot;&gt;HTML Living Standard訳はじめました - 水底の血&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rtsao/csjs:-modular,-scoped-css-with-es6&quot;&gt;rtsao/csjs: Modular, scoped CSS with ES6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rtsao/csjs&quot; title=&quot;rtsao/csjs: Modular, scoped CSS with ES6&quot;&gt;github.com/rtsao/csjs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Template Stringsを使ったCSSのカプセル化を行うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mohayonao/web-audio-mock-api:-mock-api-which-implements-the-web-audio-api&amp;#x27;s-interfaces-only&quot;&gt;mohayonao/web-audio-mock-api: mock API which implements the Web Audio API&amp;#x27;s interfaces only&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mohayonao/web-audio-mock-api&quot; title=&quot;mohayonao/web-audio-mock-api: mock API which implements the Web Audio API&amp;#39;s interfaces only&quot;&gt;github.com/mohayonao/web-audio-mock-api&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;API&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Audio APIのモックライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-|-react-webpack-cookbook&quot;&gt;Introduction | React Webpack cookbook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://christianalfoni.github.io/react-webpack-cookbook/&quot; title=&quot;Introduction | React Webpack cookbook&quot;&gt;christianalfoni.github.io/react-webpack-cookbook/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackとReactでのビルド環境構築系のGitBook&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;amazon.co.jp：-ブラウザハック-webブラウザからの攻撃手法とその防御法総覧:-wade-alcorn,-christian-frichot,-michele-orru,-園田-道夫,-はせがわ-ようすけ,-西村-宗晃,-株式会社プロシステムエルオーシー:-本&quot;&gt;Amazon.co.jp： ブラウザハック Webブラウザからの攻撃手法とその防御法総覧: Wade Alcorn, Christian Frichot, Michele Orru, 園田 道夫, はせがわ ようすけ, 西村 宗晃, 株式会社プロシステムエルオーシー: 本&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.jp/%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%83%8F%E3%83%83%E3%82%AF-Web%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%8B%E3%82%89%E3%81%AE%E6%94%BB%E6%92%83%E6%89%8B%E6%B3%95%E3%81%A8%E3%81%9D%E3%81%AE%E9%98%B2%E5%BE%A1%E6%B3%95%E7%B7%8F%E8%A6%A7-Wade-Alcorn/dp/479814343X&quot; title=&quot;Amazon.co.jp： ブラウザハック Webブラウザからの攻撃手法とその防御法総覧: Wade Alcorn, Christian Frichot, Michele Orru, 園田 道夫, はせがわ ようすけ, 西村 宗晃, 株式会社プロシステムエルオーシー: 本&quot;&gt;www.amazon.co.jp/%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%83%8F%E3%83%83%E3%82%AF-Web%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%8B%E3%82%89%E3%81%AE%E6%94%BB%E6%92%83%E6%89%8B%E6%B3%95%E3%81%A8%E3%81%9D%E3%81%AE%E9%98%B2%E5%BE%A1%E6%B3%95%E7%B7%8F%E8%A6%A7-Wade-Alcorn/dp/479814343X&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年3月16日発売&lt;br&gt;
攻撃者目線から学ぶブラウザ/ウェブのセキュリティについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 03 Mar 2016 21:53:00 +0900</pubDate>
        <link>http://jser.info/2016/03/03/ember-lts-402-i18n-rc-jquery3/</link>
        <guid isPermaLink="true">http://jser.info/2016/03/03/ember-lts-402-i18n-rc-jquery3/</guid>
        
        <category>Ember</category>
        
        <category>i18n</category>
        
        <category>ECMAScript</category>
        
        <category>jQuery</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-02-24のJS: TypeScript 1.8、Reactのバージョニング、Draft.js</title>
        <description>&lt;p&gt;JSer.info #267 - &lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/02/22/announcing-typescript-1-8-2/&quot; title=&quot;TypeScript 1.8&quot;&gt;TypeScript 1.8&lt;/a&gt;が正式リリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/releases/tag/v1.8.2&quot; title=&quot;Release v1.8.2 · Microsoft/TypeScript&quot;&gt;Release v1.8.2 · Microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#typescript-18&quot; title=&quot;What&amp;amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&quot;&gt;What&amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JavaScriptファイルをTypeScriptプロジェクトに含めやすくする&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What&amp;#x27;s-new-in-TypeScript#including-js-files-with---allowjs&quot; title=&quot;--allowJs&quot;&gt;--allowJs&lt;/a&gt;オプションやTypeScriptファイルをそのまま1つのJavaScriptにbundleする機能が追加されています。&lt;/p&gt;

&lt;p&gt;また、String Literal Typesの対応やフローコントロールを解析し到達できていないコードの検知などの機能も追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html&quot; title=&quot;New Versioning Scheme | React&quot;&gt;New Versioning Scheme | React&lt;/a&gt;ではReactの次期バージョンはv15.0.0となることについて書かれています。&lt;/p&gt;

&lt;p&gt;いわゆる&lt;a href=&quot;http://semver.org/&quot; title=&quot;Semantic Versioning&quot;&gt;Semantic Versioning&lt;/a&gt;の1.0.0以降の方式でアップデートしていくという方針について書かれています。&lt;/p&gt;

&lt;p&gt;また、Reactに依存したライブラリにおけるReactバージョンに指定方法についても書かれているので、&lt;br&gt;
React Componentのライブラリを作っている人は参照するといいかもしれません。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://facebook.github.io/react/img/blog/versioning-6.png&quot; alt=&quot;react versioning&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;FacebookのNoteやMessengerで使われているReactベースのリッチテキストエディタフレームワークである&lt;a href=&quot;https://facebook.github.io/draft-js/&quot; title=&quot;Draft.js&quot;&gt;Draft.js&lt;/a&gt;が公開されています。&lt;/p&gt;

&lt;p&gt;Reactでコンポーネントを作る際に、テキストエディタのような仕組みは色々悩みどころが出てくるので、&lt;br&gt;
その辺の仕組みを見てみると面白いかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/draft-js/docs/advanced-topics-issues-and-pitfalls.html#content&quot; title=&quot;Issues and Pitfalls&quot;&gt;Issues and Pitfalls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v5.7.0-(stable)-|-node.js&quot;&gt;Node v5.7.0 (Stable) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v5.7.0/&quot; title=&quot;Node v5.7.0 (Stable) | Node.js&quot;&gt;nodejs.org/en/blog/release/v5.7.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 5.7.0リリース。&lt;br&gt;
&lt;code&gt;Buffer#fill&lt;/code&gt;が&lt;code&gt;encoding&lt;/code&gt;引数をサポート、&lt;code&gt;spawn()&lt;/code&gt;が&lt;code&gt;shell&lt;/code&gt;オプションをサポートするなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-1.12.1-and-2.2.1-released-|-official-jquery-blog&quot;&gt;jQuery 1.12.1 and 2.2.1 Released | Official jQuery Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jquery.com/2016/02/22/jquery-1-12-1-and-2-2-1-released/&quot; title=&quot;jQuery 1.12.1 and 2.2.1 Released | Official jQuery Blog&quot;&gt;blog.jquery.com/2016/02/22/jquery-1-12-1-and-2-2-1-released/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery 1.12.1と2.2.1リリース&lt;br&gt;
&lt;code&gt;.position()&lt;/code&gt;のバグを修正&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-1.8-|-typescript&quot;&gt;Announcing TypeScript 1.8 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/02/22/announcing-typescript-1-8-2/&quot; title=&quot;Announcing TypeScript 1.8 | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2016/02/22/announcing-typescript-1-8-2/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 1.8リリース。&lt;br&gt;
String Literal Typesのサポート、コントロールフローを解析しUnreachableなコードを検出するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.2.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.2.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/02/eslint-v2.2.0-released&quot; title=&quot;ESLint v2.2.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/02/eslint-v2.2.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 2.2.0リリース&lt;br&gt;
&lt;code&gt;// eslint-disable-next-line&lt;/code&gt;のサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-es2016-draft-2016-02-15-·-tc39/ecma262&quot;&gt;Release ES2016 Draft 2016-02-15 · tc39/ecma262&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases/tag/es2016-draft-20160215&quot; title=&quot;Release ES2016 Draft 2016-02-15 · tc39/ecma262&quot;&gt;github.com/tc39/ecma262/releases/tag/es2016-draft-20160215&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2016 Draft 2016-02-15リリース。&lt;br&gt;
exponentiation operatorの追加、&lt;code&gt;Object.prototype&lt;/code&gt;はimmutableに、Unicode 8.0へアップデート、&lt;code&gt;[[Enumerate]]&lt;/code&gt;と&lt;code&gt;Reflect.enumerate&lt;/code&gt;の削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2.10.0-·-jscs-dev/node-jscs&quot;&gt;Release v2.10.0 · jscs-dev/node-jscs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jscs-dev/node-jscs/releases/tag/v2.10.0&quot; title=&quot;Release v2.10.0 · jscs-dev/node-jscs&quot;&gt;github.com/jscs-dev/node-jscs/releases/tag/v2.10.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSCS 2.10.0リリース。&lt;br&gt;
&lt;code&gt;disallowSpacesInsideTemplateStringPlaceholders&lt;/code&gt;、&lt;code&gt;requireImportsAlphabetized&lt;/code&gt;の追加&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-versioning-scheme-|-react&quot;&gt;New Versioning Scheme | React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html&quot; title=&quot;New Versioning Scheme | React&quot;&gt;facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactの次期バージョンは15.0.0としてリリース予定。&lt;br&gt;
Semver的なバージョニングに合わせるため。また、React ComponentにおけるReactの依存バージョンの書き方についても解説されてる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-using-&amp;#x60;_.chain&amp;#x60;-is-a-mistake.-—-making-internets-—-medium&quot;&gt;Why using &amp;#x60;_.chain&amp;#x60; is a mistake. — Making Internets — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/making-internets/why-using-chain-is-a-mistake-9bc1f80d51ba&quot; title=&quot;Why using \`\_.chain\` is a mistake. — Making Internets — Medium&quot;&gt;medium.com/making-internets/why-using-chain-is-a-mistake-9bc1f80d51ba&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;lodashの&lt;code&gt;_.chanin&lt;/code&gt;は拡張が難しい、lodashに含めることでbundleサイズが大きいという問題がある。&lt;br&gt;
4.1から&lt;code&gt;lodash/fp&lt;/code&gt;にfunctionalな関数が用意されており、同等の表現はより小さなbundleサイズで実現できるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;devtools-へのセキュリティ-パネル導入について---google-developers-japan&quot;&gt;DevTools へのセキュリティ パネル導入について - Google Developers Japan&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://googledevjp.blogspot.com/2016/02/draft-devtools.html&quot; title=&quot;DevTools へのセキュリティ パネル導入について - Google Developers Japan&quot;&gt;googledevjp.blogspot.com/2016/02/draft-devtools.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome開発者ツールに&amp;quot;Security&amp;quot;パネルが追加された。&lt;br&gt;
TLS証明書、Mixed Contentなどを確認出来る&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-safe-navigation&quot;&gt;JavaScript Safe Navigation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/dakaraphi/6a87168db66fd8f032d2&quot; title=&quot;JavaScript Safe Navigation&quot;&gt;gist.github.com/dakaraphi/6a87168db66fd8f032d2&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proxy&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ProxyとSymbolを使って &lt;code&gt;?.&lt;/code&gt; 的なプロパティチェインを繋げるように書く実装。&lt;br&gt;
&lt;code&gt;safe(o).isNull.next.next.$&lt;/code&gt; のように書ける&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;aerotwist---the-hack-is-back!&quot;&gt;Aerotwist - The Hack is Back!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aerotwist.com/blog/the-hack-is-back/&quot; title=&quot;Aerotwist - The Hack is Back!&quot;&gt;aerotwist.com/blog/the-hack-is-back/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;createImageBitmap&lt;/code&gt;とWebWorkerを使うことで、画像のデコード処理を別スレッドで行う方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;delivering-octicons-with-svg&quot;&gt;Delivering Octicons with SVG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/blog/2112-delivering-octicons-with-svg&quot; title=&quot;Delivering Octicons with SVG&quot;&gt;github.com/blog/2112-delivering-octicons-with-svg&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;fonts&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;GitHubはアイコンフォントをやめて、SVGを使ったアイコンを利用するように切り替えた。&lt;br&gt;
SVGをアイコンとして埋め込む方法、パフォーマンス、欠点や落とし穴について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;talk/webtalk_2016-02-20.pdf-at-master-·-momdo/talk&quot;&gt;talk/webtalk_2016-02-20.pdf at master · momdo/talk&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/momdo/talk/blob/master/webtalk_2016-02-20.pdf&quot; title=&quot;talk/webtalk\_2016-02-20.pdf at master · momdo/talk&quot;&gt;github.com/momdo/talk/blob/master/webtalk_2016-02-20.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ウェブの仕様は継続的に更新されているという話。&lt;br&gt;
WHATWG HTMLから見るW3C HTML、CSS SnapshotはCSS WGが安定していると認識したものを記述しているという話について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-と-udacity-による-javascript-promise-オンライン-コースのご紹介---google-developers-japan&quot;&gt;Google と Udacity による JavaScript Promise オンライン コースのご紹介 - Google Developers Japan&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://googledevjp.blogspot.com/2016/02/google-udacity-javascript-promise.html&quot; title=&quot;Google と Udacity による JavaScript Promise オンライン コースのご紹介 - Google Developers Japan&quot;&gt;googledevjp.blogspot.com/2016/02/google-udacity-javascript-promise.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promiseに関するオンラインコース&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;npm-discover-·-see-what-everyone-else-is-using&quot;&gt;npm Discover · see what everyone else is using&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.npmdiscover.com/&quot; title=&quot;npm Discover · see what everyone else is using&quot;&gt;www.npmdiscover.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;検索&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;特定のnpmパッケージとよく一緒に使われているものを一覧表示してくれるサイト。&lt;br&gt;
「&lt;code&gt;react&lt;/code&gt;と一緒に使われているツールやライブラリが何か」という事を検索できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;trueadm/inferno:-an-extremely-fast,-isomorphic-javascript-library-for-building-modern-user-interfaces&quot;&gt;trueadm/inferno: An extremely fast, isomorphic JavaScript library for building modern user interfaces&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/trueadm/inferno&quot; title=&quot;trueadm/inferno: An extremely fast, isomorphic JavaScript library for building modern user interfaces&quot;&gt;github.com/trueadm/inferno&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VirtualDOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactライクなVirtual DOMライブラリ。&lt;br&gt;
テンプレートからVirtual DOM Elementを作る段階で、静的/動的なのかを調べている。&lt;br&gt;
これにより実行時にはdiff/patchを行わないフラグメントを作ることでパフォーマンスの向上を狙っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/trueadm/inferno/issues/21&quot; title=&quot;What&amp;amp;#x27;s the difference from virtual dom libraries? · Issue #21 · trueadm/inferno&quot;&gt;What&amp;#x27;s the difference from virtual dom libraries? · Issue #21 · trueadm/inferno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ziyasal/scientist.js:-a-javascript-interpretation-of-the-ruby-library-scientist,-a-library-for-carefully-refactoring-critical-paths.&quot;&gt;ziyasal/scientist.js: A JavaScript interpretation of the Ruby library Scientist, a library for carefully refactoring critical paths.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ziyasal/scientist.js&quot; title=&quot;ziyasal/scientist.js: A JavaScript interpretation of the Ruby library Scientist, a library for carefully refactoring critical paths.&quot;&gt;github.com/ziyasal/scientist.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;リファクタリングを補助するRubyライブラリであるscienceのJavaScript版&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/trello/scientist&quot; title=&quot;trello/scientist: A Node.js library for carefully refactoring critical paths in production&quot;&gt;trello/scientist: A Node.js library for carefully refactoring critical paths in production&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/github/scientist&quot; title=&quot;github/scientist: A Ruby library for carefully refactoring critical paths.&quot;&gt;github/scientist: A Ruby library for carefully refactoring critical paths.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dthree/cash:-cross-platform-linux-commands-in-pure-es6&quot;&gt;dthree/cash: Cross-platform Linux commands in pure ES6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dthree/cash&quot; title=&quot;dthree/cash: Cross-platform Linux commands in pure ES6&quot;&gt;github.com/dthree/cash&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptで書かれたLinuxコマンド集。&lt;br&gt;
クロスプラットフォームで動く&lt;code&gt;mv&lt;/code&gt;や&lt;code&gt;cp&lt;/code&gt;といった単体のコマンドとしてもインストールできる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;draft.js-|-rich-text-editor-framework-for-react&quot;&gt;Draft.js | Rich Text Editor Framework for React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/draft-js/&quot; title=&quot;Draft.js | Rich Text Editor Framework for React&quot;&gt;facebook.github.io/draft-js/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;facebook&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Facebook Notesやmessengerで使われてるReactのリッチエディタフレームワーク。&lt;br&gt;
immutable-jsを利用している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;projectseptemberinc/gl-react:-opengl-/-webgl-bindings-for-react-to-implement-complex-effects-over-images-and-content,-in-the-descriptive-vdom-paradigm&quot;&gt;ProjectSeptemberInc/gl-react: OpenGL / WebGL bindings for React to implement complex effects over images and content, in the descriptive VDOM paradigm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ProjectSeptemberInc/gl-react&quot; title=&quot;ProjectSeptemberInc/gl-react: OpenGL / WebGL bindings for React to implement complex effects over images and content, in the descriptive VDOM paradigm&quot;&gt;github.com/ProjectSeptemberInc/gl-react&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;OpenGL / WebGLを使ったReact Componentライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;happy-learn-javascript-tutorial&quot;&gt;Happy Learn JavaScript Tutorial&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.happylearnjavascripttutorial.com/&quot; title=&quot;Happy Learn JavaScript Tutorial&quot;&gt;www.happylearnjavascripttutorial.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScript楽しく学ぶ目的の書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-mancy-by-jaime-gonzález-garcía-[pdf/ipad/kindle]&quot;&gt;JavaScript-mancy by Jaime González García [PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/javascriptmancy-mastering-arcane-art-of-writing-awesome-javascript-for-csharp-developers&quot; title=&quot;JavaScript-mancy by Jaime González García \[PDF/iPad/Kindle\]&quot;&gt;leanpub.com/javascriptmancy-mastering-arcane-art-of-writing-awesome-javascript-for-csharp-developers&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;C#開発者向けJavaScript本&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 24 Feb 2016 10:11:00 +0900</pubDate>
        <link>http://jser.info/2016/02/24/typescript1.8-react-semver-draft/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/24/typescript1.8-react-semver-draft/</guid>
        
        <category>TypeScript</category>
        
        <category>React</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-02-15のJS: Grunt 1.0.0 RC1、ESLint 2.0.0、Underscore/Lodash</title>
        <description>&lt;p&gt;JSer.info #266 - Grunt 1.0.0 RC1がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gruntjs.com/blog/2016-02-11-grunt-1.0.0-rc1-released&quot;&gt;Grunt 1.0.0 rc1 released - Grunt: The JavaScript Task Runner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gruntはコミットが止まっていましたが、jQuery Foundation協力のもと再出発しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jquery.com/2015/11/19/grunt-rebooted/&quot; title=&quot;Grunt, Rebooted&quot;&gt;Grunt, Rebooted&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.0.0 RC1では、&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v3.0.0&quot;&gt;npm 3で挙動が変更&lt;/a&gt;された&lt;code&gt;peerDependencies&lt;/code&gt;への対応、依存モジュールのアップデートなどが行われています。&lt;/p&gt;

&lt;p&gt;今までは&lt;code&gt;grunt&lt;/code&gt;というコマンドを利用する際には別途&lt;code&gt;grunt-cli&lt;/code&gt;をインストールする必要がありました。&lt;br&gt;
1.0.0からは&lt;code&gt;grunt&lt;/code&gt;のdependenciesに&lt;code&gt;grunt-cli&lt;/code&gt;が含まれれるため、&lt;code&gt;npm install grunt&lt;/code&gt;するだけで&lt;code&gt;grunt&lt;/code&gt;コマンドを利用できます。&lt;/p&gt;

&lt;p&gt;これは、npm run-scriptでの利用を想定した作りとなっています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ npm info grunt@1.0.0-rc1 | grep grunt-cli -B 10
  engines: { node: &amp;#39;&amp;gt;=0.10.0&amp;#39; },
  scripts: { test: &amp;#39;grunt test&amp;#39;, &amp;#39;test-tap&amp;#39;: &amp;#39;grunt test:tap&amp;#39; },
  main: &amp;#39;lib/grunt&amp;#39;,
  dependencies:
   { &amp;#39;coffee-script&amp;#39;: &amp;#39;~1.10.0&amp;#39;,
     dateformat: &amp;#39;~1.0.12&amp;#39;,
     eventemitter2: &amp;#39;~0.4.13&amp;#39;,
     exit: &amp;#39;~0.1.1&amp;#39;,
     &amp;#39;findup-sync&amp;#39;: &amp;#39;~0.3.0&amp;#39;,
     glob: &amp;#39;~6.0.4&amp;#39;,
     &amp;#39;grunt-cli&amp;#39;: &amp;#39;1.0.0-rc1&amp;#39;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;グローバルに&lt;code&gt;grunt&lt;/code&gt;コマンドをインストールしたい場合は、今まで通り&lt;code&gt;npm install grunt-cli -g&lt;/code&gt;とすることで利用できます。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;https://github.com/gruntjs/rfcs&quot; title=&quot;gruntjs/rfcs: RFCs for changes to Grunt&quot;&gt;gruntjs/rfcs&lt;/a&gt;というリポジトリが公開され、RFC(Request for Comments)を受け付ける仕組みづくりなどが進められています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;JavaScript Lintツールの&lt;a href=&quot;http://eslint.org/&quot; title=&quot;ESLint&quot;&gt;ESLint&lt;/a&gt; 2.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/blog/2016/02/eslint-v2.0.0-released&quot;&gt;ESLint v2.0.0 released - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/8bcecd821cca9e849078&quot; title=&quot;ESLint v2.0.0 の変更点まとめ - Qiita&quot;&gt;ESLint v2.0.0 の変更点まとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ルールの設定やプラグイン作成に関連するAPIの変更などが行われているため、以下のページでマイグレーションガイドが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/docs/user-guide/migrating-to-2.0.0&quot; title=&quot;Documentation - ESLint - Pluggable JavaScript linter&quot;&gt;Migrating to v2.0.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cht8687/You-Dont-Need-Lodash-Underscore&quot;&gt;cht8687/You-Dont-Need-Lodash-Underscore: Lists of Javascript methods which you can use natively&lt;/a&gt;ではLodash/Underscoreの中で、ECMAScriptにも同様の機能があるものをまとめています。&lt;/p&gt;

&lt;p&gt;また、それに対するレスポンスとして&lt;a href=&quot;https://github.com/stevemao/You-Dont-Know-About-Lodash-Underscore&quot;&gt;stevemao/You-Dont-Know-About-Lodash-Underscore: In response to You-Dont-Need-Lodash-Underscore&lt;/a&gt;というまとめも公開されています。&lt;br&gt;
Lodash/Underscoreのメソッドは単純に置き換え出来るもの以外の機能も持っているということについて書かれています。&lt;/p&gt;

&lt;p&gt;こちらとは関係ないですが、UnderscoreとLodashのマージを考える&lt;a href=&quot;https://github.com/underdash/underdash&quot; title=&quot;Underdash&quot;&gt;Underdash&lt;/a&gt;のステータスがアップデートされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/underdash/underdash/issues/14&quot; title=&quot;Merge update. · Issue #14 · underdash/underdash&quot;&gt;Merge update. · Issue #14 · underdash/underdash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;So as to the merge I think it&amp;#39;s already happened as Lodash v4.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とLodash側の人が書いています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.1.0---2016.02.09-·-zloirock/core-js&quot;&gt;Release 2.1.0 - 2016.02.09 · zloirock/core-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases/tag/v2.1.0&quot; title=&quot;Release 2.1.0 - 2016.02.09 · zloirock/core-js&quot;&gt;github.com/zloirock/core-js/releases/tag/v2.1.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;core-js 2.1.0リリース。&lt;br&gt;
ES5 polyfillの分離。&lt;br&gt;
&lt;code&gt;Reflect.enumerate&lt;/code&gt;の削除、Metadata Reflection APIの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md&quot; title=&quot;decorators/metadata.md at master · jonathandturner/decorators&quot;&gt;decorators/metadata.md at master · jonathandturner/decorators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;february-2016-security-release-summary-|-node.js&quot;&gt;February 2016 Security Release Summary | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/february-2016-security-releases/&quot; title=&quot;February 2016 Security Release Summary | Node.js&quot;&gt;nodejs.org/en/blog/vulnerability/february-2016-security-releases/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;セキュリティ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのセキュリティアップデート。&lt;br&gt;
0.1x、4.x、5.xのアップデートがそれぞれ公開されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;grunt-1.0.0-rc1-released---grunt:-the-javascript-task-runner&quot;&gt;Grunt 1.0.0 rc1 released - Grunt: The JavaScript Task Runner&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gruntjs.com/blog/2016-02-11-grunt-1.0.0-rc1-released&quot; title=&quot;Grunt 1.0.0 rc1 released - Grunt: The JavaScript Task Runner&quot;&gt;gruntjs.com/blog/2016-02-11-grunt-1.0.0-rc1-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Grunt&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Grunt 1.0.0 RC1リリース。&lt;br&gt;
メジャーアップデートとなるため&lt;code&gt;peerDependencies&lt;/code&gt;についての注意、&lt;code&gt;grant&lt;/code&gt;モジュールにCLIが含まれるように、依存モジュールのアップデートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.0.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.0.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/02/eslint-v2.0.0-released&quot; title=&quot;ESLint v2.0.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/02/eslint-v2.0.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 2.0.0リリース。&lt;br&gt;
&lt;code&gt;eslint --init&lt;/code&gt;で既存コードから判定して利用するルールの設定を作為する機能の追加、&lt;code&gt;eslint:recommended&lt;/code&gt;のアップデート、既存ルールの挙動変更やオプションの非互換な変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/8bcecd821cca9e849078&quot; title=&quot;ESLint v2.0.0 の変更点まとめ - Qiita&quot;&gt;ESLint v2.0.0 の変更点まとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/docs/user-guide/migrating-to-2.0.0&quot; title=&quot;Documentation - ESLint - Pluggable JavaScript linter&quot;&gt;Documentation - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;strongloop-|-a-new-day-for-express!&quot;&gt;StrongLoop | A New Day for Express!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://strongloop.com/strongblog/a-new-day-for-express/&quot; title=&quot;StrongLoop | A New Day for Express!&quot;&gt;strongloop.com/strongblog/a-new-day-for-express/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;community&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;expressがNode.js FoundationのTop-Level Projectとなり、strongloop(IBM)から  https://github.com/expressjs へ移管された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/TSC/blob/master/Applications/Express.md&quot; title=&quot;TSC/Express.md at master · nodejs/TSC&quot;&gt;TSC/Express.md at master · nodejs/TSC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-the-accessible-modal-dialog&quot;&gt;Introducing the Accessible Modal Dialog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.edenspiekermann.com/2016/02/11/introducing-accessible-modal-dialog/&quot; title=&quot;Introducing the Accessible Modal Dialog&quot;&gt;dev.edenspiekermann.com/2016/02/11/introducing-accessible-modal-dialog/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アクセシビリティ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WAI-ARIA&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AccessibleなモーダルUIライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;timaschew/postcss-compare-packs:-compare-most-popular-postcss-packs-like-cssnext,-rucksack-and-precss&quot;&gt;timaschew/postcss-compare-packs: compare most popular postcss packs like cssnext, rucksack and precss&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/timaschew/postcss-compare-packs&quot; title=&quot;timaschew/postcss-compare-packs: compare most popular postcss packs like cssnext, rucksack and precss&quot;&gt;github.com/timaschew/postcss-compare-packs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;PostCSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;cssnext、rucksack、precssなどのPostCSSパックの比較&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript,-tc39-meeting-notesの読み方と修正方法-|-web-scratch&quot;&gt;ECMAScript, TC39 Meeting Notesの読み方と修正方法 | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/02/12/tc39-meeting-notes/&quot; title=&quot;ECMAScript, TC39 Meeting Notesの読み方と修正方法 | Web Scratch&quot;&gt;efcl.info/2016/02/12/tc39-meeting-notes/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMA TC39ミーティングノートの読み方とこのミーティングノートにはどういうことが書かれているのかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cht8687/you-dont-need-lodash-underscore:-lists-of-javascript-methods-which-you-can-use-natively&quot;&gt;cht8687/You-Dont-Need-Lodash-Underscore: Lists of Javascript methods which you can use natively&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cht8687/You-Dont-Need-Lodash-Underscore&quot; title=&quot;cht8687/You-Dont-Need-Lodash-Underscore: Lists of Javascript methods which you can use natively&quot;&gt;github.com/cht8687/You-Dont-Need-Lodash-Underscore&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;underscore/lodashのメソッドをネイティブで同じ表現をする書き方について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/stevemao/You-Dont-Know-About-Lodash-Underscore&quot; title=&quot;stevemao/You-Dont-Know-About-Lodash-Underscore: In response to You-Dont-Need-Lodash-Underscore&quot;&gt;stevemao/You-Dont-Know-About-Lodash-Underscore: In response to You-Dont-Need-Lodash-Underscore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-update-on-strong-mode---google-グループ&quot;&gt;An update on strong mode - Google グループ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/forum/#!msg/strengthen-js/ojj3TDxbHpQ/5ENNAiUzEgAJ&quot; title=&quot;An update on strong mode - Google グループ&quot;&gt;groups.google.com/forum/#!msg/strengthen-js/ojj3TDxbHpQ/5ENNAiUzEgAJ&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8のstrong modeの実装ステータスや結果について。&lt;br&gt;
性能が想定よりでなかった、ES6の仕様に性能のブロッカーがある。複雑になりすぎるなど。&lt;br&gt;
そのため次期V8ではstrong modeのサポートは削除予定&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-perf/react-worker-dom:-experiments-to-see-the-advantages-of-using-web-workers-to-render-react-virtual-dom&quot;&gt;web-perf/react-worker-dom: Experiments to see the advantages of using Web Workers to Render React Virtual DOM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/web-perf/react-worker-dom&quot; title=&quot;web-perf/react-worker-dom: Experiments to see the advantages of using Web Workers to Render React Virtual DOM&quot;&gt;github.com/web-perf/react-worker-dom&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactをWebWorkerで動かす実装とデモ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ariafallah/webpacktutorial:-a-simple-webpack-tutorial&quot;&gt;AriaFallah/WebpackTutorial: A simple webpack tutorial&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/AriaFallah/WebpackTutorial&quot; title=&quot;AriaFallah/WebpackTutorial: A simple webpack tutorial&quot;&gt;github.com/AriaFallah/WebpackTutorial&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackのチュートリアル。&lt;br&gt;
色々なパターンについて設定やなぜそう書くのかについて書かれてる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-newsletter&quot;&gt;React Newsletter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://reactjsnewsletter.com/&quot; title=&quot;React Newsletter&quot;&gt;reactjsnewsletter.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mail&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactのWeeklyメールマガジン&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;marten-de-vries/kneden:-transpile-es7-async/await-to-vanilla-es6-promise-chains:-a-babel-plugin&quot;&gt;marten-de-vries/kneden: Transpile ES7 async/await to vanilla ES6 Promise chains: a Babel plugin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/marten-de-vries/kneden&quot; title=&quot;marten-de-vries/kneden: Transpile ES7 async/await to vanilla ES6 Promise chains: a Babel plugin&quot;&gt;github.com/marten-de-vries/kneden&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/awaitをPromiseを使ったreadableなコードへ変換する目的のBabelプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ruyadorno/ntl:-npm-task-list:-interactive-cli-menu-to-list/run-npm-tasks&quot;&gt;ruyadorno/ntl: Npm Task List: Interactive cli menu to list/run npm tasks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ruyadorno/ntl&quot; title=&quot;ruyadorno/ntl: Npm Task List: Interactive cli menu to list/run npm tasks&quot;&gt;github.com/ruyadorno/ntl&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npm run-scriptをインタラクティブに選択肢て実行出来るツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-glossary…-by-andrea-giammarchi-[pdf/ipad/kindle]&quot;&gt;JavaScript glossary… by Andrea Giammarchi [PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/jsglossary&quot; title=&quot;JavaScript glossary… by Andrea Giammarchi \[PDF/iPad/Kindle\]&quot;&gt;leanpub.com/jsglossary&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptを使った開発に出てくる用語を解説することを目的とした書籍&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.webreflection.co.uk/blog/2016/02/08/jsglossary&quot; title=&quot;My new JavaScript book&quot;&gt;My new JavaScript book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 15 Feb 2016 20:07:00 +0900</pubDate>
        <link>http://jser.info/2016/02/15/grunt-eslint2.0.0-underscore-lodash/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/15/grunt-eslint2.0.0-underscore-lodash/</guid>
        
        <category>JavaScript</category>
        
        <category>Grunt</category>
        
        <category>ESLint</category>
        
        <category>underscore</category>
        
        <category>lodash</category>
        
        <category>Vanilla</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-02-08のJS: Babel 6.5.0、Angular 1.5、letとconst</title>
        <description>&lt;p&gt;JSer.info #265 - Babel 6.5.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.5.0&quot; title=&quot;Release v6.5.0 · babel/babel&quot;&gt;Release v6.5.0 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Babel 6.0.0から一度の走査で全ての変換処理(プラグイン)を適用することで高速化しています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Babel 6 implements a new optimization which merges all plugins together into a single traversal.&lt;br&gt;&lt;br&gt;
-- &lt;a href=&quot;https://babeljs.io/blog/2015/10/29/6.0.0&quot; title=&quot;6.0.0 Released · Babel&quot;&gt;6.0.0 Released · Babel&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;逆に全ての処理が一度に行われるのでプラグイン間で競合を起こしやすかったり、特定のプラグインの前後で処理したい場合などに問題が発生していました。&lt;/p&gt;

&lt;p&gt;Babel 6.5.0では&lt;code&gt;passPerPreset&lt;/code&gt;というオプションが追加され、preset毎にtraversalが作られて処理出来るようになりました。&lt;br&gt;
これにより、プラグイン毎の衝突といったものを制御しやすくなっています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;passPerPreset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;presets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;plugin-1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;preset-2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;plugin-2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また、コード生成の処理を最適化し、最大2倍程度早くなっています。&lt;br&gt;
以下にて解説されていますが、V8の文字列処理の特性を利用した最適化なので特殊なやり方です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/pull/3283#discussion-diff-50198857&quot; title=&quot;Improve generator performance by gzzhanghao · Pull Request #3283 · babel/babel&quot;&gt;Improve generator performance by gzzhanghao · Pull Request #3283 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;V8では文字列結合した文字列を&lt;a href=&quot;https://github.com/v8/v8/blob/b23d5389e024a85cdc5c7d343fe5cc68a14f4d49/src/objects.h#L9141-L9187&quot; title=&quot;ConsString&quot;&gt;ConsString&lt;/a&gt;として保持しています。&lt;br&gt;
そして、その文字列の添字アクセスした時に初めて&lt;a href=&quot;https://github.com/v8/v8/blob/b23d5389e024a85cdc5c7d343fe5cc68a14f4d49/src/objects.cc#L1717-L1743&quot; title=&quot;String::SlowFlatten&quot;&gt;String::SlowFlatten&lt;/a&gt;を行います。&lt;/p&gt;

&lt;p&gt;この&lt;a href=&quot;https://github.com/v8/v8/blob/b23d5389e024a85cdc5c7d343fe5cc68a14f4d49/src/objects.cc#L1717-L1743&quot; title=&quot;String::SlowFlatten&quot;&gt;String::SlowFlatten&lt;/a&gt;の処理が重たいため、Babelのコード生成のような文字列を結合していく処理に、これをできるだけ避けるような変更が入っています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jsbin.com/kekaweheda/edit?js,console&quot;&gt;https://jsbin.com/kekaweheda/edit?js,console&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(JavaScriptエンジンの実装次第ではあります)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.jp/2016/02/angular-150-ennoblement-facilitation.html&quot; title=&quot;Angular 1.5.0 - ennoblement-facilitation has been released!&quot;&gt;Angular 1.5.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular.js/blob/master/CHANGELOG.md#150-ennoblement-facilitation-2016-02-05&quot; title=&quot;angular.js/CHANGELOG.md at master · angular/angular.js&quot;&gt;angular.js/CHANGELOG.md at master · angular/angular.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.5.0ではAngularJS 2へのマイグレーションがしやすなるような機能の追加などが行われています。&lt;br&gt;
&lt;code&gt;module.component()&lt;/code&gt;の追加、one-wayバインディングの対応、ES6 Classesの対応改善、また&lt;code&gt;ngSanitize&lt;/code&gt;のセキュリティ改善が行われています。&lt;/p&gt;

&lt;p&gt;コンポーネントを定義する&lt;code&gt;module.component()&lt;/code&gt;については以下の記事を参照するといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/laco0416/items/edfa917583af4593ad6c&quot; title=&quot;その使い方はもう古いかも？AngularJS老化チェック（ディレクティブ篇） - Qiita&quot;&gt;その使い方はもう古いかも？AngularJS老化チェック（ディレクティブ篇） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://mathiasbynens.be/notes/es6-const&quot; title=&quot;ES6 const is not about immutability · Mathias Bynens&quot;&gt;ES6 const is not about immutability · Mathias Bynens&lt;/a&gt;という記事では、&lt;code&gt;const&lt;/code&gt;に関するよくある誤解を解いています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const&lt;/code&gt;は値を不変にするのではなく、値へのバインディングを不変するという意味でJavaの&lt;code&gt;final&lt;/code&gt;などと同じです。&lt;br&gt;
 そのためオブジェクトのプロパティへの代入は可能のままとなりますが、オブジェクトの不変については&lt;code&gt;Object.freeze()&lt;/code&gt;を利用できる点などについて書かれています。&lt;br&gt;
 またそれをふまえて&lt;code&gt;let&lt;/code&gt;と&lt;code&gt;const&lt;/code&gt;の使い分けについても書かれています。&lt;/p&gt;

&lt;p&gt;合わせて、&lt;code&gt;let&lt;/code&gt;(&lt;code&gt;const&lt;/code&gt;も同様)のスコープについて解説されている以下の記事も参照してみるといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://davidwalsh.name/for-and-against-let&quot; title=&quot;For and against &amp;amp;#39;let&amp;amp;#39;&quot;&gt;For and against &amp;#39;let&amp;#39;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.5.0-·-babel/babel&quot;&gt;Release v6.5.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.5.0&quot; title=&quot;Release v6.5.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.5.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel 6.5.0リリース。&lt;br&gt;
Babel 6から一度のコード変換で全てされていたが、それを複数に分けられる&lt;code&gt;passPerPreset&lt;/code&gt;オプションの追加。&lt;br&gt;
V8のString実装への最適化を行いコード生成を高速化するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dev.opera-—-opera-35-released&quot;&gt;Dev.Opera — Opera 35 released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.opera.com/blog/opera-35/&quot; title=&quot;Dev.Opera — Opera 35 released&quot;&gt;dev.opera.com/blog/opera-35/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Opera&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Opera 35(based on Chromium 48)リリース。&lt;br&gt;
&lt;code&gt;document.fonts&lt;/code&gt;がSetらいくなオブジェクトとなり&lt;code&gt;entries()&lt;/code&gt;などが利用できるように、&lt;code&gt;TouchEvent&lt;/code&gt;イベントコンストラクタの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-1.5.0---ennoblement-facilitation-has-been-released!&quot;&gt;Angular 1.5.0 - ennoblement-facilitation has been released!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.com/2016/02/angular-150-ennoblement-facilitation.html&quot; title=&quot;Angular 1.5.0 - ennoblement-facilitation has been released!&quot;&gt;angularjs.blogspot.com/2016/02/angular-150-ennoblement-facilitation.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS 1.5.0リリース。&lt;br&gt;
AngularJS 2へのアップグレードパスの改善。&lt;br&gt;
&lt;code&gt;module.component()&lt;/code&gt;の追加、one-wayバインディングの対応、ES6 Classesの対応改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-49-beta:-css-custom-properties,-background-sync-with-service-workers,-and-new-es2015-features&quot;&gt;Chromium Blog: Chrome 49 Beta: CSS custom properties, background sync with service workers, and new ES2015 features&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.chromium.org/2016/02/chrome-49-beta-css-custom-properties.html&quot; title=&quot;Chromium Blog: Chrome 49 Beta: CSS custom properties, background sync with service workers, and new ES2015 features&quot;&gt;blog.chromium.org/2016/02/chrome-49-beta-css-custom-properties.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 49 Betaリリース。&lt;br&gt;
CSS custom propetires(CSS Variable)、ES6の対応改善、&lt;code&gt;Object.observe()&lt;/code&gt;が非推奨となるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;looking-ahead:-microsoft-edge-for-developers-in-2016-|-microsoft-edge-dev-blog&quot;&gt;Looking ahead: Microsoft Edge for developers in 2016 | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/02/03/2016-platform-priorities/&quot; title=&quot;Looking ahead: Microsoft Edge for developers in 2016 | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2016/02/03/2016-platform-priorities/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MSEdgeのロードマップ。&lt;br&gt;
アクセシビリティの改善、ES6 modules、Fetch API、Web Notifications、Beacon APIなどの対応を予定している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typings-で-d.ts-の管理をする-|-スマホ神-–-javascript-受託開発-–&quot;&gt;typings で d.ts の管理をする | スマホ神 – JavaScript 受託開発 –&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://smart.ataglance.jp/2016-02-04-manage-dts-by-typings/&quot; title=&quot;typings で d.ts の管理をする | スマホ神 – JavaScript 受託開発 –&quot;&gt;smart.ataglance.jp/2016-02-04-manage-dts-by-typings/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;typings&lt;/code&gt;を遣ったd.tsの管理について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;handling-props-and-class-names-in-react-–-simonsmith.io-–-portfolio-and-blog-of-a-london-based-front-end-web-developer&quot;&gt;Handling props and class names in React – simonsmith.io – Portfolio and blog of a London based front-end web developer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://simonsmith.io/handling-props-and-classnames-in-react/&quot; title=&quot;Handling props and class names in React – simonsmith.io – Portfolio and blog of a London based front-end web developer&quot;&gt;simonsmith.io/handling-props-and-classnames-in-react/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React ComponentとclassNameの管理パターン。&lt;br&gt;
classnamesモジュールを使う方法とテストについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;for-and-against-&amp;#x27;let&amp;#x27;&quot;&gt;For and against &amp;#x27;let&amp;#x27;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://davidwalsh.name/for-and-against-let&quot; title=&quot;For and against &amp;#39;let&amp;#39;&quot;&gt;davidwalsh.name/for-and-against-let&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;let&lt;/code&gt;とスコープについての詳しい解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-const-is-not-about-immutability-·-mathias-bynens&quot;&gt;ES6 const is not about immutability · Mathias Bynens&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mathiasbynens.be/notes/es6-const&quot; title=&quot;ES6 const is not about immutability · Mathias Bynens&quot;&gt;mathiasbynens.be/notes/es6-const&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const&lt;/code&gt;は値を不変(immutable)にするのではなく、値へのバインディングを不変にするという意味。&lt;br&gt;
そのためオブジェクトのプロパティへの代入は可能のままだが、オブジェクトの不変については&lt;code&gt;Object.freeze()&lt;/code&gt;が扱う。また&lt;code&gt;let&lt;/code&gt;と&lt;code&gt;const&lt;/code&gt;の使い分けについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developer-edition-46-–-more-memory-tooling,-improved-@media-sidebar-and-more-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Developer Edition 46 – More memory tooling, improved @media sidebar and more ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/02/developer-edition-46-more-memory-tooling-improved-media-sidebar-and-more/&quot; title=&quot;Developer Edition 46 – More memory tooling, improved @media sidebar and more ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/02/developer-edition-46-more-memory-tooling-improved-media-sidebar-and-more/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 46の開発者ツール変更点について。&lt;br&gt;
Dominator viewの追加、開発者ツールが閉じてても&lt;code&gt;debugger&lt;/code&gt;ステートメントでブレークするようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-es2015-proxies-|-web-updates---google-developers&quot;&gt;Introducing ES2015 Proxies | Web Updates - Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/02/es2015-proxies&quot; title=&quot;Introducing ES2015 Proxies | Web Updates - Google Developers&quot;&gt;developers.google.com/web/updates/2016/02/es2015-proxies&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2015 Proxiesの使い方について。&lt;br&gt;
Reflect APIとの組み合わた使い方などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;다함께,-fluxutils-한바퀴!&quot;&gt;다함께, FluxUtils 한바퀴!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/UyeongJu/fluxutils&quot; title=&quot;다함께, FluxUtils 한바퀴!&quot;&gt;www.slideshare.net/UyeongJu/fluxutils&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;flux utilsについてのスライド。&lt;br&gt;
flux utilsのソースコードを見ながらどのようなシーケンスでやり取りしてるのか、fluxアーキテクチャでの非同期処理についてなどがわかりやすく解説されてる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;top-|-diff-of-htmls&quot;&gt;Top | Diff of HTMLs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://diffofhtmls.herokuapp.com/&quot; title=&quot;Top | Diff of HTMLs&quot;&gt;diffofhtmls.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;W3CとWHATWGのHTML仕様書のdiffを見ることが出来るサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vasanthk/css-refresher-notes:-css-refresher!&quot;&gt;vasanthk/css-refresher-notes: CSS Refresher!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vasanthk/css-refresher-notes&quot; title=&quot;vasanthk/css-refresher-notes: CSS Refresher!&quot;&gt;github.com/vasanthk/css-refresher-notes&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS再入門。&lt;br&gt;
よく使う機能や指定の仕方について詳しく解説されてる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;start-runner/start:-dead-simple-tasks-runner&quot;&gt;start-runner/start: Dead simple tasks runner&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/start-runner/start&quot; title=&quot;start-runner/start: Dead simple tasks runner&quot;&gt;github.com/start-runner/start&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promiseベースのタスク自動化ツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;teamweek/instadate:-a-minimal-high-performance-date-library-for-node.js-and-browser&quot;&gt;Teamweek/instadate: A minimal high performance date library for Node.js and Browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Teamweek/instadate&quot; title=&quot;Teamweek/instadate: A minimal high performance date library for Node.js and Browser&quot;&gt;github.com/Teamweek/instadate&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;日付、時間処理を扱うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thinking-in-react&quot;&gt;Thinking In React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.thinkinginreact.xyz/&quot; title=&quot;Thinking In React&quot;&gt;www.thinkinginreact.xyz/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactを扱う場合においての現実問題に対する解を考えていく電子書籍。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 08 Feb 2016 20:19:00 +0900</pubDate>
        <link>http://jser.info/2016/02/08/babel6.5.0-angular1.5-let-const/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/08/babel6.5.0-angular1.5-let-const/</guid>
        
        <category>ES6</category>
        
        <category>Babel</category>
        
        <category>AngularJS</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-02-02のJS: Firefox 44.0、ES2016の追加機能、webpack2β</title>
        <description>&lt;p&gt;JSer.info #264 - &lt;a href=&quot;https://www.mozilla.jp/firefox/44.0/releasenotes/&quot; title=&quot;Firefox 44.0&quot;&gt;Firefox 44.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;let&lt;/code&gt;と&lt;code&gt;const&lt;/code&gt;は&lt;a href=&quot;https://www.fxsitecompat.com/ja/docs/2015/variables-defined-with-const-and-let-are-no-longer-properties-on-window-redeclaration-with-let-will-throw/&quot;&gt;Spidermonkey独自の動作&lt;/a&gt;が含まれていましたが、今回ES6準拠となるように変更されました。&lt;/p&gt;

&lt;p&gt;HTTP通信において&lt;a href=&quot;https://en.wikipedia.org/wiki/Brotli&quot; title=&quot;Brotli&quot;&gt;Brotli&lt;/a&gt;の圧縮アルゴリズムがサポートされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation#The_Accept-Encoding_header&quot; title=&quot;Content negotiation - HTTP | MDN&quot;&gt;Content negotiation - HTTP | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chromeでも49で実装されています。(HTTPSのみ有効)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/JufzX024oy0/WEOGbN43AwAJ&quot; title=&quot;Intent to Ship: Brotli (Accept-encoding: br on HTTPS connection) - Google グループ&quot;&gt;Intent to Ship: Brotli (Accept-encoding: br on HTTPS connection) - Google グループ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;ECMAScript 2016(ES2016)で追加される機能が確定しました。&lt;/p&gt;

&lt;p&gt;ES2016からはProposal(≒機能ごと)に仕様の検討を行い、最終的に合意を得られたProposalがECMAScriptの仕様へマージされます。&lt;br&gt;
この新しい策定プロセスで以下の2つのProposalがES2016の仕様に入ります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/Array.prototype.includes/&quot; title=&quot;Array.prototype.includes&quot;&gt;Array.prototype.includes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/exponentiation-operator&quot; title=&quot;Exponentiation Operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Proposalから仕様となったものがこの2つという意味なので、ES2016における変更点は他にも色々あります。&lt;/p&gt;

&lt;p&gt;詳しくは別途記事を書いたので以下を参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.info/2016/02/01/es2016/&quot; title=&quot;ECMAScript 2016 features &amp;amp;amp; changes - JSer.info&quot;&gt;ECMAScript 2016 features &amp;amp; changes - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/sokra/27b24881210b56bbaff7&quot; title=&quot;What&amp;amp;#39;s new in webpack 2&quot;&gt;What&amp;#39;s new in webpack 2&lt;/a&gt;ではwebpack 2での追加機能や変更点について書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rollup/rollup&quot; title=&quot;Rollup&quot;&gt;Rollup&lt;/a&gt;のようにES6 Modulesを解析し、使われているもの以外を削除することが出来るようになっています。&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;System.import&lt;/code&gt;をモジュールの分割ポイントとして扱うことができるようになるようです。&lt;/p&gt;

&lt;p&gt;その他の変更はIssueを見るのがいいと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/issues/729&quot; title=&quot;Scheduled small breaking changes for 2.0 · Issue #729 · webpack/webpack&quot;&gt;Scheduled small breaking changes for 2.0 · Issue #729 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/labels/webpack-2&quot; title=&quot;Issues · webpack/webpack&quot;&gt;Issues · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-4.9&quot;&gt;V8 JavaScript Engine: V8 Release 4.9&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/01/v8-release-49.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 4.9&quot;&gt;v8project.blogspot.com/2016/01/v8-release-49.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8 4.9リリース。&lt;br&gt;
Destructuring、Proxy、Reflect、デフォルトパラメータなどES6の仕様追従。&lt;br&gt;
&lt;code&gt;Math.random()&lt;/code&gt;のアルゴリズム改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.info/2016/01/27/math.random-xsfhit/&quot; title=&quot;メジャーブラウザのMath.random()のアルゴリズムがXorShift128+になった - JSer.info&quot;&gt;メジャーブラウザのMath.random()のアルゴリズムがXorShift128+になった - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-ui-1.12.0-beta-1-|-jquery-ui-blog&quot;&gt;jQuery UI 1.12.0 Beta 1 | jQuery UI Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jqueryui.com/2016/01/jquery-ui-1-12-0-beta-1/&quot; title=&quot;jQuery UI 1.12.0 Beta 1 | jQuery UI Blog&quot;&gt;blog.jqueryui.com/2016/01/jquery-ui-1-12-0-beta-1/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery UI 1.12.0 Beta 1リリース。&lt;br&gt;
controlgroupとcheckboxradioの追加、npmサポート、IE7サポート終了など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-master-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at master · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/master/Changelog.md&quot; title=&quot;jsdom/Changelog.md at master · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/master/Changelog.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdom 8.0.0リリース。&lt;br&gt;
IDLからコードを生成することで仕様との互換性の向上、&lt;code&gt;Element#insertAdjacentHTML&lt;/code&gt;と&lt;code&gt;Node#adoptNode&lt;/code&gt;の実装など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-44.0-リリースノート&quot;&gt;Firefox 44.0 リリースノート&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mozilla.jp/firefox/44.0/releasenotes/&quot; title=&quot;Firefox 44.0 リリースノート&quot;&gt;www.mozilla.jp/firefox/44.0/releasenotes/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 44.0リリース。&lt;br&gt;
&lt;code&gt;Symbol.toPrimitive&lt;/code&gt;の実装、letやconstがES6の仕様に追従、OffscreenCanvas APIをフラグ付きで追加、WebRTCから接頭辞の削除など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/44&quot; title=&quot;Firefox 44 for developers - Mozilla | MDN&quot;&gt;Firefox 44 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/44/&quot; title=&quot;Firefox 44 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 44 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/docs/2015/variables-defined-with-const-and-let-are-no-longer-properties-on-window-redeclaration-with-let-will-throw/&quot; title=&quot;const や let で定義された変数は window 上のプロパティとならなくなり、let による再宣言は例外が投げられます | Firefox サイト互換性情報&quot;&gt;const や let で定義された変数は window 上のプロパティとならなくなり、let による再宣言は例外が投げられます | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-1.8-beta---typescript---site-home---msdn-blogs&quot;&gt;Announcing TypeScript 1.8 Beta - TypeScript - Site Home - MSDN Blogs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.msdn.com/b/typescript/archive/2016/01/28/announcing-typescript-1-8-beta.aspx&quot; title=&quot;Announcing TypeScript 1.8 Beta - TypeScript - Site Home - MSDN Blogs&quot;&gt;blogs.msdn.com/b/typescript/archive/2016/01/28/announcing-typescript-1-8-beta.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 1.8βリリース。&lt;br&gt;
tscにJavaScriptファイルを扱う &lt;code&gt;--allowJs&lt;/code&gt; が追加された。&lt;br&gt;
ES6 to ES5をTypeScript Compilerで変換、d.tsがないライブラリとかをtscが直接扱えるようになる。&lt;br&gt;
Unreachable codeの検出、String literal typesの追加、JSXの対応改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#typescript-18-upcoming&quot; title=&quot;What&amp;amp;#x27;s new in TypeScript · Microsoft/TypeScript Wiki&quot;&gt;What&amp;#x27;s new in TypeScript · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;phantomjs-2.1-release-notes-|-phantomjs&quot;&gt;PhantomJS 2.1 Release Notes | PhantomJS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://phantomjs.org/release-2.1.html&quot; title=&quot;PhantomJS 2.1 Release Notes | PhantomJS&quot;&gt;phantomjs.org/release-2.1.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PhantomJS 2.1リリース。&lt;br&gt;
SSL Client Authentication、context menuイベントのサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3.1.0-·-rackt/redux&quot;&gt;Release v3.1.0 · rackt/redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rackt/redux/releases/tag/v3.1.0&quot; title=&quot;Release v3.1.0 · rackt/redux&quot;&gt;github.com/rackt/redux/releases/tag/v3.1.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Redux 3.1.0リリース。&lt;br&gt;
&lt;code&gt;createStore()&lt;/code&gt;が&lt;code&gt;applyMiddleware()&lt;/code&gt;をオプションとして受け入れられるようになった。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deprecate-tsd-·-issue-#269-·-definitelytyped/tsd&quot;&gt;Deprecate TSD · Issue #269 · DefinitelyTyped/tsd&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/tsd/issues/269&quot; title=&quot;Deprecate TSD · Issue #269 · DefinitelyTyped/tsd&quot;&gt;github.com/DefinitelyTyped/tsd/issues/269&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptの型定義ファイルを管理するツールであるtsdが非推奨となり、代わりにtypingsを利用することが推奨されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/typings/typings&quot; title=&quot;typings/typings - TypeScript&quot;&gt;typings/typings - TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vvakame/dtsm&quot; title=&quot;vvakame/dtsm - TypeScript&quot;&gt;vvakame/dtsm - TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-2016-features-&amp;amp;-changes---jser.info&quot;&gt;ECMAScript 2016 features &amp;amp; changes - JSer.info&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jser.info/2016/02/01/es2016/&quot; title=&quot;ECMAScript 2016 features &amp;amp; changes - JSer.info&quot;&gt;jser.info/2016/02/01/es2016/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2016で追加される機能が確定したことについて。&lt;br&gt;
また新機能以外の変更点やどこを見れば仕様の変更が分かるかなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#x27;s-new-in-webpack-2&quot;&gt;What&amp;#x27;s new in webpack 2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/sokra/27b24881210b56bbaff7&quot; title=&quot;What&amp;#39;s new in webpack 2&quot;&gt;gist.github.com/sokra/27b24881210b56bbaff7&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack 2での変更点について。&lt;br&gt;
ES6 modulesをベースとした最適化、&lt;code&gt;System.import&lt;/code&gt;を使った動的ロード向けのモジュール分離に対応するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-application-libraries-and-component-architectures---telerik-developer-network&quot;&gt;Front-end Application Libraries and Component Architectures - Telerik Developer Network&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/front-end-application-frameworks-component-architectures/&quot; title=&quot;Front-end Application Libraries and Component Architectures - Telerik Developer Network&quot;&gt;developer.telerik.com/featured/front-end-application-frameworks-component-architectures/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;コンポーネントを扱うライブラリの仕組みや構成、ルーター、サポートブラウザなどについての比較まとめ。&lt;br&gt;
Polymer、React、Riot.js、Vue.js、Aurelia、Angular2について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;spencer-dixon---test-driven-react-tutorial&quot;&gt;Spencer Dixon - Test Driven React Tutorial&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://spencerdixon.com/blog/test-driven-react-tutorial.html&quot; title=&quot;Spencer Dixon - Test Driven React Tutorial&quot;&gt;spencerdixon.com/blog/test-driven-react-tutorial.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactのテストについてのチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;adding-eslint-to-your-project-is-now-easier-than-ever&quot;&gt;Adding ESLint to Your Project is Now Easier than Ever&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://devnull.guru/adding-eslint-to-your-project-is-easier-than-ever/&quot; title=&quot;Adding ESLint to Your Project is Now Easier than Ever&quot;&gt;devnull.guru/adding-eslint-to-your-project-is-easier-than-ever/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Bluetooth&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 2.xで導入されてる&lt;code&gt;--init&lt;/code&gt;によるAutomatic Configurationについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;createjs入門---ics-media&quot;&gt;CreateJS入門 - ICS MEDIA&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ics.media/tutorial-createjs/index.html&quot; title=&quot;CreateJS入門 - ICS MEDIA&quot;&gt;ics.media/tutorial-createjs/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CreateJS入門サイト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;styleguide:-accessibility-·-edx/ux-pattern-library-wiki&quot;&gt;Styleguide: Accessibility · edx/ux-pattern-library Wiki&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/edx/ux-pattern-library/wiki/Styleguide:-Accessibility&quot; title=&quot;Styleguide: Accessibility · edx/ux-pattern-library Wiki&quot;&gt;github.com/edx/ux-pattern-library/wiki/Styleguide:-Accessibility&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;アクセシビリティ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WAI-ARIA&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;アクセシビリティについてスタイルガイド&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;naomiaro/waveform-playlist:-multitrack-web-audio-editor-and-player-with-canvas-waveform-preview.-set-cues,-fades-and-shift-multiple-tracks-in-time.-project-inspired-by-audacity.&quot;&gt;naomiaro/waveform-playlist: Multitrack Web Audio editor and player with canvas waveform preview. Set cues, fades and shift multiple tracks in time. Project inspired by Audacity.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/naomiaro/waveform-playlist&quot; title=&quot;naomiaro/waveform-playlist: Multitrack Web Audio editor and player with canvas waveform preview. Set cues, fades and shift multiple tracks in time. Project inspired by Audacity.&quot;&gt;github.com/naomiaro/waveform-playlist&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AudacityインスパイアなWeb Audioを使った音声エディタ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sinsoku/clairvoyance&quot;&gt;sinsoku/clairvoyance&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sinsoku/clairvoyance&quot; title=&quot;sinsoku/clairvoyance&quot;&gt;github.com/sinsoku/clairvoyance&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSのカバレッジ計測ツール。&lt;br&gt;
CSSファイルに書かれたスタイルがHTMLの中でどのくらい使われてるかを計測できるツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sinsoku.hatenablog.com/entry/2016/01/31/174155&quot; title=&quot;CSS のカバレッジを計測する Clairvoyance というツールを作りました - アジャイルSEの憂鬱&quot;&gt;CSS のカバレッジを計測する Clairvoyance というツールを作りました - アジャイルSEの憂鬱&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;juliankrispel/decaf:-coffeescript-to-es.next-transpiler&quot;&gt;juliankrispel/decaf: Coffeescript to ES.next transpiler&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/juliankrispel/decaf&quot; title=&quot;juliankrispel/decaf: Coffeescript to ES.next transpiler&quot;&gt;github.com/juliankrispel/decaf&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CoffeeScriptのコードをJavaScriptに変換するツール。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/decaffeinate/decaffeinate&quot; title=&quot;Issues · decaffeinate/decaffeinate&quot;&gt;Issues · decaffeinate/decaffeinate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dfilatov/vidom:-library-to-build-ui-based-on-virtual-dom&quot;&gt;dfilatov/vidom: Library to build UI based on virtual DOM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dfilatov/vidom&quot; title=&quot;dfilatov/vidom: Library to build UI based on virtual DOM&quot;&gt;github.com/dfilatov/vidom&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactインスパイアなVirtual DOMを持つUIライブラリ。&lt;br&gt;
Reactより小さく早いものを目的としている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developit/preact:-fast-3kb-react-alternative-with-the-same-es6-api.-components-&amp;amp;-virtual-dom.&quot;&gt;developit/preact: Fast 3kb React alternative with the same ES6 API. Components &amp;amp; Virtual DOM.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/preact&quot; title=&quot;developit/preact: Fast 3kb React alternative with the same ES6 API. Components &amp;amp; Virtual DOM.&quot;&gt;github.com/developit/preact&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactのコアを再実装することを目的としたライブラリ。&lt;br&gt;
ContextやPropTypesなどを削除している。&lt;br&gt;
preact-compatというReactの互換レイヤーを別モジュールとして持っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/developit/preact/wiki/Differences-to-React&quot; title=&quot;Differences to React · developit/preact Wiki&quot;&gt;Differences to React · developit/preact Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/developit/preact-compat&quot; title=&quot;developit/preact-compat - JavaScript&quot;&gt;developit/preact-compat - JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zeithq/micro:-micro-—-async-http-microservices&quot;&gt;zeithq/micro: Micro — Async HTTP microservices&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zeithq/micro&quot; title=&quot;zeithq/micro: Micro — Async HTTP microservices&quot;&gt;github.com/zeithq/micro&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;小さなHTTPサーバライブラリ。&lt;br&gt;
リクエストを受け取りレスポンスを返すというシンプルなもの。&lt;br&gt;
async/awaitをデフォルトで使えるようになっている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sindresorhus/got:-simplified-http/https-requests&quot;&gt;sindresorhus/got: Simplified HTTP/HTTPS requests&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/got&quot; title=&quot;sindresorhus/got: Simplified HTTP/HTTPS requests&quot;&gt;github.com/sindresorhus/got&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js向けのHTTPクライアントライブラリ。&lt;code&gt;request&lt;/code&gt;と同じ立ち位置のライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;viewer.js&quot;&gt;Viewer.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://fengyuanchen.github.io/viewerjs/&quot; title=&quot;Viewer.js&quot;&gt;fengyuanchen.github.io/viewerjs/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;画像&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;多機能な画像ビューアライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stylelint/stylelint&quot;&gt;stylelint/stylelint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stylelint/stylelint&quot; title=&quot;stylelint/stylelint&quot;&gt;github.com/stylelint/stylelint&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ルールやプラグインで拡張できるCSSのスタイルLintツール&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 02 Feb 2016 19:57:00 +0900</pubDate>
        <link>http://jser.info/2016/02/02/firefox44-es2016-new-feature-webpack2beta/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/02/firefox44-es2016-new-feature-webpack2beta/</guid>
        
        <category>Firefox</category>
        
        <category>ECMAScript</category>
        
        <category>webpack</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>ECMAScript 2016 features &amp; changes</title>
        <description>&lt;p&gt;ECMAScript 2016に新規追加される機能が&lt;a href=&quot;https://github.com/tc39/agendas/blob/master/2016/01.md&quot; title=&quot;50th meeting of Ecma TC39&quot;&gt;50回目のEcma TC39ミーティング&lt;/a&gt;で確定しました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;On March 1st I will be snapshotting the ECMA262 draft to start its journey toward becoming the official ECMAScript 2016 standard!&lt;/p&gt;&amp;mdash; Brian Terlson (@bterlson) &lt;a href=&quot;https://twitter.com/bterlson/status/692424625813377026&quot;&gt;January 27, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;array.prototype.includes&quot;&gt;&lt;a href=&quot;https://github.com/tc39/Array.prototype.includes/&quot; title=&quot;Array.prototype.includes&quot;&gt;Array.prototype.includes&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;ES6で&lt;code&gt;Array.prototype.contains&lt;/code&gt;として追加される予定でしたが、Break the webであったため延期されていた機能です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://esdiscuss.org/topic/having-a-non-enumerable-array-prototype-contains-may-not-be-web-compatible&quot; title=&quot;Having a non-enumerable Array.prototype.contains may not be web-compatible&quot;&gt;Having a non-enumerable Array.prototype.contains may not be web-compatible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/constellation/introducing-break-the-web-array-extra-methods-case&quot; title=&quot;Introducing Break the Web: Array extra methods case // Speaker Deck&quot;&gt;Introducing Break the Web: Array extra methods case // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;exponentiation-operator&quot;&gt;&lt;a href=&quot;https://github.com/rwaldron/exponentiation-operator&quot; title=&quot;Exponentiation Operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;x ** y&lt;/code&gt; は &lt;code&gt;Math.pow(x, y)&lt;/code&gt; と同じ機能です。&lt;/p&gt;

&lt;p&gt;詳しくは既に幾つか記事が書かれているので以下を参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2016/01/ecmascript-2016.html&quot;&gt;The final feature set of ECMAScript 2016 (ES7)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ponyfoo.com/articles/es2016-features-and-ecmascript-as-a-living-standard&quot;&gt;ES2016 Features &amp;amp; ECMAScript as a Living Standard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://teppeis.hatenablog.com/entry/2016/01/es2016-feature-freeze&quot;&gt;ES2016の追加機能が決定、あるいはES7言うな問題 - teppeis blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ES2016からは機能ごとのProposalを出し、承認されたらECMAScriptの仕様にマージするという形にプロセスが変わっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/10/18/ecmascript-paper/&quot; title=&quot;ECMAScriptの仕様策定に関するカンニングペーパー | Web Scratch&quot;&gt;ECMAScriptの仕様策定に関するカンニングペーパー | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上記の追加された機能がマージされた仕様書のスナップショットが3月に、&lt;br&gt;
最終的にEcma GAで承認されたら6月に正式なECMAScript 2016としてリリースされます。&lt;/p&gt;

&lt;p&gt;以下にES2016のドラフト版などがリリースされているので、これを見るのが分かりやすいです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases&quot; title=&quot;Releases · tc39/ecma262&quot;&gt;Releases · tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ECMAScriptも&lt;a href=&quot;https://whatwg.org/&quot; title=&quot;WHATWG&quot;&gt;WHATWG&lt;/a&gt;のHTMLのように&lt;a href=&quot;http://tc39.github.io/ecma262/&quot;&gt;Living Standard&lt;/a&gt;となっているので、バージョン番号はスナップショット的な扱いです。&lt;/p&gt;

&lt;p&gt;これまでのドラフト版を見ると追加された機能以外も仕様的には色々なアップデートが含まれていることが分かります。&lt;/p&gt;

&lt;h2 id=&quot;変更された仕様&quot;&gt;変更された仕様&lt;/h2&gt;

&lt;p&gt;幾つか例をあげてみます。&lt;/p&gt;

&lt;h3 id=&quot;promise.allとpromise.raceが@@speciesを無視するように&quot;&gt;&lt;code&gt;Promise.all&lt;/code&gt;と&lt;code&gt;Promise.race&lt;/code&gt;が&lt;code&gt;@@species&lt;/code&gt;を無視するように&lt;/h3&gt;

&lt;p&gt;ES6では&lt;code&gt;Promise.resolve&lt;/code&gt;が&lt;code&gt;@@species&lt;/code&gt;を無視する変更は入ってましたが、allとraceについても同様の変更が入りました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/issues/151&quot; title=&quot;Remove @@species lookup from Promise.all() and Promise.race() · Issue #151 · tc39/ecma262&quot;&gt;Remove @@species lookup from Promise.all() and Promise.race() · Issue #151 · tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hostpromiserejectiontrackerの抽象インタフェースが追加された&quot;&gt;&lt;a href=&quot;https://wiki.suikawiki.org/n/HostPromiseRejectionTracker&quot; title=&quot;HostPromiseRejectionTracker&quot;&gt;HostPromiseRejectionTracker&lt;/a&gt;の抽象インタフェースが追加された&lt;/h3&gt;

&lt;p&gt;これは&lt;code&gt;HostPromiseRejectionTracker&lt;/code&gt;をHost環境(ブラウザなど)が実装していると、&lt;br&gt;
PromiseでUnhandled Rejectionが起きた際に呼ぶという仕様です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/domenic/unhandled-rejections-browser-spec&quot; title=&quot;domenic/unhandled-rejections-browser-spec&quot;&gt;domenic/unhandled-rejections-browser-spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/promises-book/&quot; title=&quot;JavaScript Promiseの本&quot;&gt;JavaScript Promiseの本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この仕様と&lt;a href=&quot;https://blog.whatwg.org/html-standard-now-more-community-driven&quot;&gt;WHATWG/htmlが連携&lt;/a&gt;し、&lt;code&gt;&amp;#39;unhandledRejection&amp;#39;&lt;/code&gt;と&lt;code&gt;&amp;#39;rejectionHandled&amp;#39;&lt;/code&gt;イベントの仕様が実装されています。&lt;br&gt;
(具体的にユーザーが使うのはこっち)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/slide/error-handling/promise-error-handling.html&quot; title=&quot;Promise Error Handling&quot;&gt;Promise Error Handling&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;#39;unhandledRejection&amp;#39;&lt;/code&gt;と&lt;code&gt;&amp;#39;rejectionHandled&amp;#39;&lt;/code&gt;について解説したもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;generatorfunctionから[[construct]]が取り除かれた&quot;&gt;GeneratorFunctionから&lt;code&gt;[[Construct]]&lt;/code&gt;が取り除かれた&lt;/h3&gt;

&lt;p&gt;ES6ではGeneratorFunctionが&lt;code&gt;new&lt;/code&gt;できました。&lt;br&gt;
しかし、ES2016では例外を投げるように変更されました。&lt;br&gt;
(&lt;code&gt;[[Construct]]&lt;/code&gt;を持つ == &lt;code&gt;new&lt;/code&gt;できる)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;var g = { *g() {} }.g;
new g(); // ES6ではvalid、ES2016ではthrow error
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases/tag/es2016-draft-20151201&quot; title=&quot;Release ES2016 Draft 2015-12-01 · tc39/ecma262&quot;&gt;Release ES2016 Draft 2015-12-01 · tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;proxyの[[enumerate]]-trapの変更&quot;&gt;Proxyの&lt;code&gt;[[Enumerate]]&lt;/code&gt; trapの変更&lt;/h3&gt;

&lt;p&gt;まだ仕様に変更は入ってないですが、変更が予定されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/issues/160#issuecomment-176403705&quot;&gt;&lt;code&gt;[[Enumerate]]&lt;/code&gt; and for-in on proxies can produce non-string keys · Issue #160 · tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このように、追加された機能以外も細かな変更などが行われています。&lt;br&gt;
Breaking Changeですが、まだ利用してるケースも少ない(そもそも実装が少ない)ので早いうちに修正してるという印象です。&lt;/p&gt;

&lt;h2 id=&quot;変更を知る方法&quot;&gt;変更を知る方法&lt;/h2&gt;

&lt;p&gt;このような正式な変更はどこで知るのかを簡単にまとめてみます。&lt;br&gt;
細かい修正以外の変更は、2ヶ月に1回開催されているTC39のミーティングで議論されてから追加されます。&lt;/p&gt;

&lt;p&gt;情報の伝達が早い順で並べるとTwitter &amp;gt; GitHub &amp;gt; その他という感じです。&lt;/p&gt;

&lt;h3 id=&quot;twitter&quot;&gt;Twitter&lt;/h3&gt;

&lt;p&gt;TC39のミーティング中は、TC39メンバーのTwitterを見るのが早いです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/erikarvidsson/lists/tc39&quot; title=&quot;@ErikArvidsson/TC39 on Twitter&quot;&gt;@ErikArvidsson/TC39 on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現在、Editorの&lt;a href=&quot;https://twitter.com/bterlson&quot; title=&quot;@bterlson&quot;&gt;@bterlson&lt;/a&gt;さんと&lt;a href=&quot;https://twitter.com/rwaldron&quot; title=&quot;@rwaldron&quot;&gt;@rwaldron&lt;/a&gt;さんを見ておくといいかもしれません。&lt;/p&gt;

&lt;h3 id=&quot;tc39-meeting-notes&quot;&gt;TC39 Meeting Notes&lt;/h3&gt;

&lt;p&gt;ミーティングの内容は後日GitHubに公開されます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/agendas&quot; title=&quot;tc39/agendas: TC39 meeting agendas&quot;&gt;tc39/agendas: TC39 meeting agendas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/tc39-notes&quot; title=&quot;rwaldron/tc39-notes&quot;&gt;rwaldron/tc39-notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ミーティングノートが公開されたら、毎回自分は読書会をやっているので興味がある人は一緒に読みましょう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tc39-mtg.doorkeeper.jp/&quot; title=&quot;TC39 MTG Notes MTG | Doorkeeper&quot;&gt;TC39 MTG Notes MTG | Doorkeeper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/search?f=tweets&amp;amp;vertical=default&amp;amp;q=%23TC39MTG&amp;amp;src=typd&quot; title=&quot;#TC39MTG&quot;&gt;#TC39MTG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;github&quot;&gt;GitHub&lt;/h3&gt;

&lt;p&gt;ECMAScriptの仕様はGitHubで管理されています。&lt;br&gt;
そのため実際に入る変更はIssueやPull Requestを見ていれば分かります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262&quot; title=&quot;tc39/ecma262&quot;&gt;tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;その他&quot;&gt;その他&lt;/h3&gt;

&lt;p&gt;その他公式ではないものとしてECMAScript周りについてよく扱うサイトとしては以下のようなものがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.2ality.com/&quot; title=&quot;②ality – JavaScript and more&quot;&gt;②ality – JavaScript and more&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://esnextnews.com/&quot; title=&quot;ES.next News: 5 ECMAScript.next links, every week&quot;&gt;ES.next News: 5 ECMAScript.next links, every week&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ecmascript-daily.github.io/&quot; title=&quot;ECMAScript Daily&quot;&gt;ECMAScript Daily&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/ecmascriptdaily&quot; title=&quot;@EcmascriptDaily&quot;&gt;@EcmascriptDaily&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;自分は&lt;a href=&quot;https://twitter.com/ecmascriptdaily&quot; title=&quot;@EcmascriptDaily&quot;&gt;@EcmascriptDaily&lt;/a&gt;にECMAScript周りの情報を投げてますが、&lt;br&gt;
興味がある人はフォローとかしてみるといいです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://realtime.jser.info/&quot; title=&quot;Realtime JSer.info&quot;&gt;Realtime JSer.info&lt;/a&gt;のような感じで随時更新されます。&lt;/p&gt;

&lt;h2 id=&quot;contributing&quot;&gt;Contributing&lt;/h2&gt;

&lt;p&gt;自分自身はあんまり仕様の議論に参加しようという意欲はないですが、&lt;br&gt;
ドキュメントは常に正しくあるべきという考えなのでその辺に対するコミットをしてます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tc39-mtg.doorkeeper.jp/&quot; title=&quot;TC39 MTG Notes MTG | Doorkeeper&quot;&gt;TC39 MTG Notes MTG | Doorkeeper&lt;/a&gt;後に毎回ミーティングノートの修正を送ったりしています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rwaldron/tc39-notes/graphs/contributors&quot;&gt;&lt;img src=&quot;https://monosnap.com/file/4lpqBjKwakv7cqo8xL7ULnGosabjS2.png&quot; alt=&quot;tc39 meeting notes&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;また、ProposalがStage 3ぐらいになるとそのProposalのリポジトリが&lt;a href=&quot;https://github.com/tc39&quot;&gt;github.com/tc39&lt;/a&gt;に移管されます。&lt;br&gt;
その時にURLがそのままだったりすることが多いので&lt;a href=&quot;https://github.com/tc39/Function-prototype-toString-revision/pull/5&quot;&gt;修正&lt;/a&gt;や&lt;a href=&quot;https://github.com/tc39/proposal-object-getownpropertydescriptors/commit/c0cf908c3601d398152932b58fa2416b577be504#commitcomment-15722017&quot;&gt;指摘&lt;/a&gt;を&lt;a href=&quot;https://github.com/tc39/ecma262/pull/335#discussion_r51220098&quot;&gt;して&lt;/a&gt;回るということをやったりしています。&lt;/p&gt;

&lt;p&gt;こういうのは気づけば誰でもできると思うので、コントリビュートしやすいと思います。&lt;br&gt;
&lt;a href=&quot;https://github.com/tc39/ecma262&quot; title=&quot;ecma262&quot;&gt;ecma262&lt;/a&gt;や&lt;a href=&quot;https://github.com/tc39/test262&quot; title=&quot;test262&quot;&gt;test262&lt;/a&gt;もEditorialだったり小さな変更なら直接IssueやPull Requestできるので、その辺を見てみると面白いのかもしれません。&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Feb 2016 18:34:00 +0900</pubDate>
        <link>http://jser.info/2016/02/01/es2016/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/01/es2016/</guid>
        
        <category>ECMAScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>メジャーブラウザのMath.random()のアルゴリズムがXorShift128+になった</title>
        <description>&lt;p&gt;JavaScriptで擬似乱数を返す&lt;code&gt;Math.random()&lt;/code&gt;のアルゴリズムが最近XorShift128+にシフトしています。&lt;br&gt;
&lt;a href=&quot;https://github.com/azu/browser-javascript-resource&quot;&gt;メジャーブラウザ&lt;/a&gt;のJavaScriptエンジンは全て変更されていたので、まとめておきます。&lt;/p&gt;

&lt;h2 id=&quot;chrome/v8&quot;&gt;Chrome/V8&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2015/12/theres-mathrandom-and-then-theres.html&quot; title=&quot;V8 JavaScript Engine: There&amp;#39;s Math.random(), and then there&amp;#39;s Math.random()&quot;&gt;V8 JavaScript Engine: There&amp;#39;s Math.random(), and then there&amp;#39;s Math.random()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2016/01/v8-release-49.html&quot; title=&quot;Chrome 49 Stable&quot;&gt;Chrome 49 Stable&lt;/a&gt;で入る予定。&lt;/p&gt;

&lt;h2 id=&quot;firefox/spidermonkey&quot;&gt;Firefox/SpiderMonkey&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=322529&quot; title=&quot;322529 – Upgrade Math.random() to the better XorShift128+ algorithm&quot;&gt;322529 – Upgrade Math.random() to the better XorShift128+ algorithm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webkit/javascriptcore&quot;&gt;WebKit/JavaScriptCore&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=151641&quot; title=&quot;Bug 151641 – Use a better RNG for Math.random()&quot;&gt;Bug 151641 – Use a better RNG for Math.random()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;msedge/chakracore&quot;&gt;MSEdge/ChakraCore&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/ChakraCore/pull/145&quot; title=&quot;Update Math.random to use xorshift128+ by suwc · Pull Request #145 · Microsoft/ChakraCore&quot;&gt;Update Math.random to use xorshift128+ by suwc · Pull Request #145 · Microsoft/ChakraCore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;アルゴリズム&quot;&gt;アルゴリズム&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jandemooij.nl/blog/2015/11/27/math-random-and-32-bit-precision/&quot; title=&quot;Math.random() and 32-bit precision&quot;&gt;Math.random() and 32-bit precision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.visvirial.com/articles/575&quot; title=&quot;Google Chromeが採用した、擬似乱数生成アルゴリズム「xorshift」の数理 – びりあるの研究ノート&quot;&gt;Google Chromeが採用した、擬似乱数生成アルゴリズム「xorshift」の数理 – びりあるの研究ノート&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;仕様&quot;&gt;仕様&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-math.random&quot; title=&quot;ECMAScript® 2016 Language Specification&quot;&gt;ECMAScript® 2016 Language Specification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Returns a Number value with positive sign, greater than or equal to 0 but less than 1, chosen randomly or pseudo randomly with approximately uniform distribution over that range, using an implementation-dependent algorithm or strategy. This function takes no arguments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;仕様では&amp;quot;実装依存のアルゴリズムで&amp;quot;と書いてあるので、特に&lt;code&gt;Math.random()&lt;/code&gt;のアルゴリズムは規定されていません。&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Jan 2016 11:32:00 +0900</pubDate>
        <link>http://jser.info/2016/01/27/math.random-xsfhit/</link>
        <guid isPermaLink="true">http://jser.info/2016/01/27/math.random-xsfhit/</guid>
        
        <category>JavaScript</category>
        
        <category>Browser</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>browser</category>
        
      </item>
    
      <item>
        <title>2016-01-26のJS: JavaScriptとOOP、Fetch with Stream、ES6チートシート</title>
        <description>&lt;p&gt;JSer.info #263 - &lt;a href=&quot;https://medium.com/@DmitrySoshnikov/oo-relationships-5020163ab162&quot; title=&quot;OO Relationships — Medium&quot;&gt;OO Relationships — Medium&lt;/a&gt;ではJavaScriptとオブジェクト指向プログラミングについて書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/awbjs&quot; title=&quot;Allen Wirfs-Brock&quot;&gt;Allen Wirfs-Brock&lt;/a&gt;さんの以下の発言が発端です(今も続いてる)&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;JS devs: do you use abstraction? What word do you use for “an open set of objects that share a common interface and implementation”?&lt;/p&gt;&amp;mdash; Allen Wirfs-Brock (@awbjs) &lt;a href=&quot;https://twitter.com/awbjs/status/689506114807857152&quot;&gt;January 19, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;JS Devs: What  do you call “an open set of objects that share a common interface and implementation”?&lt;/p&gt;&amp;mdash; Allen Wirfs-Brock (@awbjs) &lt;a href=&quot;https://twitter.com/awbjs/status/689513929546928128&quot;&gt;January 19, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;ES6で追加された&lt;code&gt;class&lt;/code&gt;を踏まえprototype-basedであるJavaScriptにおけるオブジェクト同士の関係性について書かれています。&lt;br&gt;
実践的な話というよりは概念的な話ですが興味深い内容になっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://jakearchibald.com/2016/streams-ftw/&quot; title=&quot;2016 - the year of web streams - JakeArchibald.com&quot;&gt;2016 - the year of web streams - JakeArchibald.com&lt;/a&gt;ではChromeでフラグ付きの&lt;a href=&quot;https://streams.spec.whatwg.org/&quot; title=&quot;Streams&quot;&gt;WHATWG Stream&lt;/a&gt;について紹介されています。&lt;/p&gt;

&lt;p&gt;また&lt;a href=&quot;https://fetch.spec.whatwg.org/&quot; title=&quot;Fetch&quot;&gt;Fetch API&lt;/a&gt;とStream APIを組み合わせて使うことで、&lt;br&gt;
データを取得しながら処理をすることで、表示までの動作がどのように変わるのかについて紹介されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://slides.com/drksephy/ecmascript-2015#/&quot; title=&quot;ECMAScript 2015 by David Leonard&quot;&gt;ECMAScript 2015 by David Leonard&lt;/a&gt;では&lt;a href=&quot;https://github.com/DrkSephy/es6-cheatsheet&quot; title=&quot;DrkSephy/es6-cheatsheet&quot;&gt;DrkSephy/es6-cheatsheet&lt;/a&gt;のチートシートを元にしたES6について紹介されています。&lt;/p&gt;

&lt;p&gt;ES6とES5を&lt;a href=&quot;http://es6-features.org/&quot;&gt;比較&lt;/a&gt;した内容で、具体的にどの部分が異なるのかが紹介されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img class=&#39;emoji&#39; title=&#39;:information_source:&#39; alt=&#39;:information_source:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/2139.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;&lt;/p&gt;

&lt;p&gt;Podcastやサイト紹介などをやっている&lt;a href=&quot;https://changelog.com/&quot; title=&quot;The Changelog - Open source moves fast. Keep up.&quot;&gt;The Changelog&lt;/a&gt;に&lt;a href=&quot;https://github.com/thechangelog/ping&quot; title=&quot;Ping&quot;&gt;Ping&lt;/a&gt;というリポジトリがあり、&lt;br&gt;
これと同じものがJSer.infoにもあったら利用したいかの意見を募集中です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thechangelog/ping&quot; title=&quot;Ping&quot;&gt;Ping&lt;/a&gt;は紹介して欲しい記事を書いたり、意見を書いたり、Changelogだとこの人をpodcastに呼んでほしいなどの要望を書くGitHub Issueです。&lt;br&gt;
これに関する意見などありましたらGitterに書いてください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gitter.im/jser/jser.info&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/jser/jser.info.png&quot; alt=&quot;Gitter chat&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2.9.0-·-jscs-dev/node-jscs&quot;&gt;Release v2.9.0 · jscs-dev/node-jscs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jscs-dev/node-jscs/releases/tag/v2.9.0&quot; title=&quot;Release v2.9.0 · jscs-dev/node-jscs&quot;&gt;github.com/jscs-dev/node-jscs/releases/tag/v2.9.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSCS v2.9.0リリース。&lt;br&gt;
&lt;code&gt;requireCapitalizedConstructors&lt;/code&gt;ルールの追加、ルールの更新、バグ修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v5.5.0-(stable)-|-node.js&quot;&gt;Node v5.5.0 (Stable) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v5.5.0/&quot; title=&quot;Node v5.5.0 (Stable) | Node.js&quot;&gt;nodejs.org/en/blog/release/v5.5.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v5.5.0リリース。&lt;br&gt;
REPLでも&lt;code&gt;--require&lt;/code&gt;が動作するように、&lt;code&gt;fs.createWriteStream&lt;/code&gt;で&lt;code&gt;autoClose&lt;/code&gt;オプションをサポートするなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-es2016-draft-2016-01-20-·-tc39/ecma262&quot;&gt;Release ES2016 Draft 2016-01-20 · tc39/ecma262&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases/tag/es2016-draft-20160120&quot; title=&quot;Release ES2016 Draft 2016-01-20 · tc39/ecma262&quot;&gt;github.com/tc39/ecma262/releases/tag/es2016-draft-20160120&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2016 Draft 2016-01-20リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;simulating-website-thumbnails-using-iframes-—-medium&quot;&gt;Simulating Website Thumbnails using Iframes — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@jamesfuthey/simulating-the-creation-of-website-thumbnail-screenshots-using-iframes-7145269891db&quot; title=&quot;Simulating Website Thumbnails using Iframes — Medium&quot;&gt;medium.com/@jamesfuthey/simulating-the-creation-of-website-thumbnail-screenshots-using-iframes-7145269891db&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;iframeを使ってサイトのサムネイル的な表示をする方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understand-promises-before-you-start-using-async/await-—-medium&quot;&gt;Understand promises before you start using async/await — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8&quot; title=&quot;Understand promises before you start using async/await — Medium&quot;&gt;medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/awaitを使う前にPromiseについて理解しようという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;oo-relationships-—-medium&quot;&gt;OO Relationships — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@DmitrySoshnikov/oo-relationships-5020163ab162&quot; title=&quot;OO Relationships — Medium&quot;&gt;medium.com/@DmitrySoshnikov/oo-relationships-5020163ab162&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;OOP&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptとオブジェクト指向プログラミングについて。&lt;br&gt;
static/dynamic dispatch、prototypeベース、縦/横の継承、&lt;br&gt;
class、mixin、traits、ダックタイピング、compositionなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2016---the-year-of-web-streams---jakearchibald.com&quot;&gt;2016 - the year of web streams - JakeArchibald.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jakearchibald.com/2016/streams-ftw/&quot; title=&quot;2016 - the year of web streams - JakeArchibald.com&quot;&gt;jakearchibald.com/2016/streams-ftw/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fetch with Streamについて。&lt;br&gt;
readable stream、transform streamを使ったMPEG to GIFの例&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascriptのコードを分解してよく使われてる機能を分析する-|-web-scratch&quot;&gt;JavaScriptのコードを分解してよく使われてる機能を分析する | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/01/22/es-usage-rate/&quot; title=&quot;JavaScriptのコードを分解してよく使われてる機能を分析する | Web Scratch&quot;&gt;efcl.info/2016/01/22/es-usage-rate/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;コードをパースして機能ごとの出現回数を調べるツールを書いたという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rollup.js---rollupがちょうどいい感じ---qiita&quot;&gt;rollup.js - Rollupがちょうどいい感じ - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/cognitom/items/e3ac0da00241f427dad6&quot; title=&quot;rollup.js - Rollupがちょうどいい感じ - Qiita&quot;&gt;qiita.com/cognitom/items/e3ac0da00241f427dad6&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Bundlerであるrollup.jsについて。&lt;br&gt;
x to ES6をしてから変換する話、Tree Shaking、基本的な使い方や設定について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cycle.js-fundamentals---course-by-@andrestaltz-@eggheadio&quot;&gt;Cycle.js Fundamentals - Course by @andrestaltz @eggheadio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://egghead.io/series/cycle-js-fundamentals&quot; title=&quot;Cycle.js Fundamentals - Course by @andrestaltz @eggheadio&quot;&gt;egghead.io/series/cycle-js-fundamentals&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Cycle.js作者によるCycle.jsとRxJSについてのスクリーンキャスト。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-2015-by-david-leonard&quot;&gt;ECMAScript 2015 by David Leonard&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://slides.com/drksephy/ecmascript-2015#/&quot; title=&quot;ECMAScript 2015 by David Leonard&quot;&gt;slides.com/drksephy/ecmascript-2015#/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES5でのややこしい書き方、それをES6で書いた場合にどうなるかなどについて書かれたスライド。&lt;br&gt;
アノテーションでどの部分が違うのかがわかりやすく表示されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DrkSephy/es6-cheatsheet&quot; title=&quot;DrkSephy/es6-cheatsheet&quot;&gt;DrkSephy/es6-cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;drksephy/es6-cheatsheet&quot;&gt;DrkSephy/es6-cheatsheet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/DrkSephy/es6-cheatsheet&quot; title=&quot;DrkSephy/es6-cheatsheet&quot;&gt;github.com/DrkSephy/es6-cheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6チートシート。&lt;br&gt;
ES5での書き方とES6での書き方を比較してる形&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pa11y---your-automated-accessibility-testing-pal&quot;&gt;Pa11y - Your automated accessibility testing pal&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://pa11y.org/&quot; title=&quot;Pa11y - Your automated accessibility testing pal&quot;&gt;pa11y.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;アクセシビリティ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;アクセシビリティチェック as a Service。&lt;br&gt;
毎日実行し結果を集計し、ダッシュボードで見ることが出来る。&lt;br&gt;
またCLIからチェックすることも出来る&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;umbrella-js&quot;&gt;Umbrella JS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://umbrellajs.com/&quot; title=&quot;Umbrella JS&quot;&gt;umbrellajs.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQueryのようなDOM操作やAjax周りの機能を提供する小さなライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stomita/clipboard-hook&quot;&gt;stomita/clipboard-hook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stomita/clipboard-hook&quot; title=&quot;stomita/clipboard-hook&quot;&gt;github.com/stomita/clipboard-hook&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;クリップボード&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;要素ごとのイベントを移譲することで、全体としての&lt;code&gt;cut&lt;/code&gt;/&lt;code&gt;copy&lt;/code&gt;/&lt;code&gt;paste&lt;/code&gt;イベントに対するhookを書けるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jam3/devtool:-runs-node.js-programs-through-chromium-devtools&quot;&gt;Jam3/devtool: runs Node.js programs through Chromium DevTools&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Jam3/devtool&quot; title=&quot;Jam3/devtool: runs Node.js programs through Chromium DevTools&quot;&gt;github.com/Jam3/devtool&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Electron上でNode.jsを実行し開発者ツールでデバッグ出来るツール。&lt;br&gt;
コマンドラインでNode.jsのファイルを指定するだけで実行できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;skerit/janeway:-a-curses-based-console-for-node.js&quot;&gt;skerit/janeway: A curses-based console for node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/skerit/janeway&quot; title=&quot;skerit/janeway: A curses-based console for node.js&quot;&gt;github.com/skerit/janeway&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;curses/blessedベースのJavaScript REPL。&lt;br&gt;
ブラウザの開発者ツールのようにインタラクティブな動作を目的としている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-master---o&amp;#x27;reilly-media&quot;&gt;JavaScript Master - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/9780994346933.do&quot; title=&quot;JavaScript Master - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/9780994346933.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年3月発売&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 26 Jan 2016 18:18:00 +0900</pubDate>
        <link>http://jser.info/2016/01/26/oop-fetch-stream-es6-cheatsheet/</link>
        <guid isPermaLink="true">http://jser.info/2016/01/26/oop-fetch-stream-es6-cheatsheet/</guid>
        
        <category>OOP</category>
        
        <category>Fetch</category>
        
        <category>JavaScript</category>
        
        <category>ES6</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
  </channel>
</rss>
