<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>http://jser.info/</link>
    <atom:link href="http://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sat, 11 Jun 2016 12:17:16 +0900</pubDate>
    <lastBuildDate>Sat, 11 Jun 2016 12:17:16 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>2016-06-07のJS: Shadow DOM v1、React近況、JavaScriptのプラグイン設計本</title>
        <description>&lt;p&gt;JSer.info #282 - &lt;a href=&quot;http://hayato.io/2016/shadowdomv1/&quot; title=&quot;What&amp;amp;#39;s New in Shadow DOM v1 (by examples) — hayato.io&quot;&gt;What&amp;#39;s New in Shadow DOM v1 (by examples) — hayato.io&lt;/a&gt;という記事では、Shadow DOM仕様の策定者でもある&lt;a href=&quot;https://twitter.com/shadow_hayato&quot; title=&quot;@shadow_hayato&quot;&gt;@shadow_hayato&lt;/a&gt;さんよるShadow DOM v0とv1の違いについて解説されています。&lt;/p&gt;

&lt;p&gt;closed shadow rootという概念の追加や、v1では&lt;code&gt;/deep/&lt;/code&gt;や&lt;code&gt;::shadow&lt;/code&gt;は利用できなくなり、&lt;br&gt;
slot(&lt;code&gt;::slotted&lt;/code&gt;)を利用する点など色々な違いがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/webcomponents/blob/gh-pages/proposals/Shadow-DOM-Cascade-Order-in-v1.md&quot; title=&quot;webcomponents/Shadow-DOM-Cascade-Order-in-v1.md at gh-pages · w3c/webcomponents&quot;&gt;webcomponents/Shadow-DOM-Cascade-Order-in-v1.md at gh-pages · w3c/webcomponents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;コード例を中心に解説されているので、Shadow DOMに興味がある人は見ておくといいです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.react-europe.org/&quot; title=&quot;ReactEurope&quot;&gt;ReactEurope&lt;/a&gt;が開催され、その動画が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCorlLn2oZfgOJ-FUcF2eZ1A/feed&quot; title=&quot;ReactEurope - YouTube&quot;&gt;ReactEurope - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、&lt;a href=&quot;https://speakerdeck.com/koba04/the-state-of-react-dot-js-2016&quot; title=&quot;The state of React.js 2016 // Speaker Deck&quot;&gt;The state of React.js 2016 // Speaker Deck&lt;/a&gt;というスライドではここ半年ぐらいのReactの変化などについてまとめられています。&lt;/p&gt;

&lt;p&gt;Reactの動向はReact Coreチームのミーティングノートが公開されているので、こちらも合わせて参照するといいです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/core-notes&quot; title=&quot;reactjs/core-notes: Weekly meeting notes from the React core team&quot;&gt;reactjs/core-notes: Weekly meeting notes from the React core team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/JavaScript-Plugin-Architecture&quot; title=&quot;JavaScript Plugin Architecture&quot;&gt;JavaScript Plugin Architecture&lt;/a&gt;という電子書籍では、JavaScriptのライブラリやツールにおけるプラグイン設計について書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2016/06/06/JavaScript-Plugin-Architecture/&quot; title=&quot;JavaScript Plugin Architectureというプラグイン設計について学ぶ無料の電子書籍を書いた | Web Scratch&quot;&gt;JavaScript Plugin Architectureというプラグイン設計について学ぶ無料の電子書籍を書いた | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現時点では、&lt;a href=&quot;https://azu.gitbooks.io/javascript-plugin-architecture/content/ja/jQuery/&quot;&gt;jQuery&lt;/a&gt;、&lt;a href=&quot;https://azu.gitbooks.io/javascript-plugin-architecture/content/ja/ESLint/&quot;&gt;ESLint&lt;/a&gt;、&lt;a href=&quot;https://azu.gitbooks.io/javascript-plugin-architecture/content/ja/connect/&quot;&gt;Connect&lt;/a&gt;、&lt;a href=&quot;https://azu.gitbooks.io/javascript-plugin-architecture/content/ja/gulp/&quot;&gt;gulp&lt;/a&gt;、&lt;a href=&quot;https://azu.gitbooks.io/javascript-plugin-architecture/content/ja/Redux/&quot;&gt;Redux&lt;/a&gt;のプラグインについてそれぞれプラグインの仕組み自体を実装しつつ解説した内容が書かれています。&lt;/p&gt;

&lt;p&gt;全部まとめて読むというよりは気になったものをパッと見るリファレンス的な感じになっています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ECMAScript便り〆&lt;/h1&gt;

&lt;p&gt;5月に行われた&lt;a href=&quot;https://github.com/rwaldron/tc39-notes&quot; title=&quot;TC39 Meeting&quot;&gt;TC39 Meeting&lt;/a&gt;の記録が公開されたので、主要なできごとを簡単に書いておきます。&lt;br&gt;
詳しくは&lt;a href=&quot;https://github.com/rwaldron/tc39-notes/tree/master/es7/2016-05&quot; title=&quot;tc39-notes/es7/2016-05 at master · rwaldron/tc39-notes&quot;&gt;ミーティングノート&lt;/a&gt;を読んでください&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/2016/05/13/tc39-proposals-tracking-ecmascript-proposals&quot;&gt;tc39/proposals: Tracking ECMAScript Proposals | ECMAScript Daily&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;今までProposalは&lt;a href=&quot;https://github.com/tc39/ecma262&quot; title=&quot;tc39/ecma262&quot;&gt;tc39/ecma262&lt;/a&gt;にまとめがありましたが、単独のリポジトリに移動しました&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/2016/06/07/arrive-tc39-meeting-notes-for-2016-05&quot;&gt;Arrive TC39 meeting notes for 2016-05 | ECMAScript Daily&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;2016年5月のミーティングノートが公開されました&lt;/li&gt;
&lt;li&gt;6月中旬にはECMAScript 2016の正式リリースが控えています。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/2016/05/25/stage-0-ljharb-proposal-promise-finally-ecmascript-proposal-specs-and-reference-implementation-for-promise-prototype-finally&quot;&gt;[Stage 0] ljharb/proposal-promise-finally: ECMAScript Proposal, specs, and reference implementation for Promise.prototype.finally | ECMAScript Daily&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Promise#finally&lt;/code&gt; のProposalがStage 0になりました&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/2016/05/25/stage-4-per-may-2016-tc39-consensus-string-padstart-padend-is-now-stage-4-by-ljharb-pull-request-581-tc39-ecma262&quot;&gt;[Stage 4] Per May 2016 TC39 consensus, String#{padStart,padEnd} is now stage 4! by ljharb · Pull Request #581 · tc39/ecma262 | ECMAScript Daily&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/2016/05/25/stage-4-per-may-2016-tc39-consensus-object-getownpropertydescriptors-is-now-stage-4-by-ljharb-pull-request-582-tc39-ecma262&quot;&gt;[Stage 4] Per May 2016 TC39 consensus, Object.getOwnPropertyDescriptors is now stage 4! by ljharb · Pull Request #582 · tc39/ecma262 | ECMAScript Daily&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;String#{padStart,padEnd}&lt;/code&gt;と&lt;code&gt;Object.getOwnPropertyDescriptors&lt;/code&gt;がStage 4となりES2017に入る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/2016/05/26/cancelable-promises&quot;&gt;Cancelable promises | ECMAScript Daily&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Promiseのキャンセル方法としてCancelTokenと&lt;code&gt;Promise#cancel&lt;/code&gt;の2種類が提案され、議論が開始された&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zenparsing/es-cancel-token&quot;&gt;zenparsing/es-cancel-token: Cancel Tokens for ECMAScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ES Observableにも関わってくるので、&lt;a href=&quot;https://github.com/zenparsing/es-observable/pull/97&quot; title=&quot;Remove forEach and add &amp;amp;#34;subscribe&amp;amp;#34; overload by zenparsing · Pull Request #97 · zenparsing/es-observable&quot;&gt;Remove forEach and add &amp;quot;subscribe&amp;quot; overload by zenparsing · Pull Request #97 · zenparsing/es-observable&lt;/a&gt;も参照。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/domenic/cancelable-promise&quot;&gt;domenic/cancelable-promise: Cancelable promises proposal for JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-release-5.2&quot;&gt;V8 JavaScript Engine: Release 5.2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/06/release-52.html&quot; title=&quot;V8 JavaScript Engine: Release 5.2&quot;&gt;v8project.blogspot.com/2016/06/release-52.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8 5.2リリース。&lt;br&gt;
 Exponentiation operator &lt;code&gt;**&lt;/code&gt;のサポート、&lt;code&gt;Array.isArray&lt;/code&gt;、&lt;code&gt;in&lt;/code&gt; operator、&lt;code&gt;Function#bind&lt;/code&gt;のパフォーマンス改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;getting-started-with-tdd-in-react---semaphore&quot;&gt;Getting Started with TDD in React - Semaphore&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://semaphoreci.com/community/tutorials/getting-started-with-tdd-in-react&quot; title=&quot;Getting Started with TDD in React - Semaphore&quot;&gt;semaphoreci.com/community/tutorials/getting-started-with-tdd-in-react&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Enzymeを使ったReact Componentのテストについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#x27;s-new-in-shadow-dom-v1-(by-examples)-—-hayato.io&quot;&gt;What&amp;#x27;s New in Shadow DOM v1 (by examples) — hayato.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://hayato.io/2016/shadowdomv1/&quot; title=&quot;What&amp;#39;s New in Shadow DOM v1 (by examples) — hayato.io&quot;&gt;hayato.io/2016/shadowdomv1/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Shadow DOM v0とv1の違いについて。&lt;br&gt;
&lt;a href=&quot;https://twitter.com/shadow_hayato&quot; title=&quot;@shadow_hayato&quot;&gt;@shadow_hayato&lt;/a&gt;さん(仕様策定者)によるコード例を元にした解説。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/BUGxw_Yx5Lo&quot; title=&quot;Shadow DOM v1: Status updates - Google グループ&quot;&gt;Shadow DOM v1: Status updates - Google グループ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/webcomponents/issues?utf8=%E2%9C%93&amp;amp;q=is%3Aissue+is%3Aopen+label%3Av1+label%3Ashadow-dom&quot; title=&quot;Issues · w3c/webcomponents&quot;&gt;Issues · w3c/webcomponents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromeのヘッドレスブラウザがやってくる。というわけで試してみた。---qiita&quot;&gt;Chromeのヘッドレスブラウザがやってくる。というわけで試してみた。 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/devneko/items/51f2e114a7e0b3389435&quot; title=&quot;Chromeのヘッドレスブラウザがやってくる。というわけで試してみた。 - Qiita&quot;&gt;qiita.com/devneko/items/51f2e114a7e0b3389435&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chromeのヘッドレスブラウザについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/list?q=label:Proj-Headless&quot; title=&quot;Issues - chromium - An open-source project to help move the web forward. - Monorail&quot;&gt;Issues - chromium - An open-source project to help move the web forward. - Monorail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;infinite-collections-with-es6-generators---advanced-web-machinery&quot;&gt;Infinite collections with ES6 generators - Advanced Web Machinery&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://advancedweb.hu/2016/05/31/infinite-collections-with-es6-generators/&quot; title=&quot;Infinite collections with ES6 generators - Advanced Web Machinery&quot;&gt;advancedweb.hu/2016/05/31/infinite-collections-with-es6-generators/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Iteratorを使った無限リストについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sashee/gentoo&quot; title=&quot;sashee/gentoo: Tools for ES6 generators&quot;&gt;sashee/gentoo: Tools for ES6 generators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-we-chose-mobx-over-redux-for-spectacle-editor&quot;&gt;Why we chose MobX over Redux for Spectacle Editor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://formidable.com/blog/2016/06/02/why-we-chose-mobx-over-redux-for-spectacle-editor/&quot; title=&quot;Why we chose MobX over Redux for Spectacle Editor&quot;&gt;formidable.com/blog/2016/06/02/why-we-chose-mobx-over-redux-for-spectacle-editor/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reduxとかと同じくアプリケーションのStateを管理するMobXの特徴についての紹介&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mobxjs/mobx&quot; title=&quot;mobxjs/mobx: Simple, scalable state management.&quot;&gt;mobxjs/mobx: Simple, scalable state management.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;creating-a-living-style-guide:-a-case-study-–-smashing-magazine&quot;&gt;Creating A Living Style Guide: A Case Study – Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/05/creating-a-living-style-guide-case-study/&quot; title=&quot;Creating A Living Style Guide: A Case Study – Smashing Magazine&quot;&gt;www.smashingmagazine.com/2016/05/creating-a-living-style-guide-case-study/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;スタイルガイドのケーススタディ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;improving-your-css-with-parker-–-css-wizardry-–-css,-oocss,-front-end-architecture,-performance-and-more,-by-harry-roberts&quot;&gt;Improving Your CSS with Parker – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://csswizardry.com/2016/06/improving-your-css-with-parker/&quot; title=&quot;Improving Your CSS with Parker – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts&quot;&gt;csswizardry.com/2016/06/improving-your-css-with-parker/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSの解析ツールであるParkerについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/katiefenn/parker/&quot; title=&quot;katiefenn/parker: Stylesheet analysis tool.&quot;&gt;katiefenn/parker: Stylesheet analysis tool.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpackのdllバンドルを使ってビルドを速くする---qiita&quot;&gt;webpackのDLLバンドルを使ってビルドを速くする - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/pirosikick/items/c77db84dbed4c447a6fe&quot; title=&quot;webpackのDLLバンドルを使ってビルドを速くする - Qiita&quot;&gt;qiita.com/pirosikick/items/c77db84dbed4c447a6fe&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackのビルド速度の改善について。&lt;br&gt;
vendarライブラリだけ別にビルドし読み込んで使うDLLバンドル、&lt;code&gt;cacheDirectory&lt;/code&gt;、&lt;code&gt;externals&lt;/code&gt;との違いについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-react.js-2016-//-speaker-deck&quot;&gt;The state of React.js 2016 // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/koba04/the-state-of-react-dot-js-2016&quot; title=&quot;The state of React.js 2016 // Speaker Deck&quot;&gt;speakerdeck.com/koba04/the-state-of-react-dot-js-2016&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactの最近の変更や今後の変更、非推奨になる予定の機能についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=C8bMahvTkHA&quot; title=&quot;第65回 HTML5とか勉強会 ー React最新情報 - YouTube&quot;&gt;第65回 HTML5とか勉強会 ー React最新情報 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reacteurope-2016---day-1---youtube&quot;&gt;ReactEurope 2016 - Day 1 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCorlLn2oZfgOJ-FUcF2eZ1A&quot; title=&quot;ReactEurope 2016 - Day 1 - YouTube&quot;&gt;www.youtube.com/channel/UCorlLn2oZfgOJ-FUcF2eZ1A&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactEurope 2016の動画まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;building-react-applications-with-idiomatic-redux---course-by-@dan_abramov-@eggheadio&quot;&gt;Building React Applications with Idiomatic Redux - Course by @dan_abramov @eggheadio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://egghead.io/courses/building-react-applications-with-idiomatic-redux&quot; title=&quot;Building React Applications with Idiomatic Redux - Course by @dan\_abramov @eggheadio&quot;&gt;egghead.io/courses/building-react-applications-with-idiomatic-redux&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Redux作者によるReduxでアプリケーションを作るスクリーンキャスト&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=uvAXVMwHJXU&quot; title=&quot;Dan Abramov - The Redux Journey at react-europe 2016 - YouTube&quot;&gt;Dan Abramov - The Redux Journey at react-europe 2016 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;next-vue.js-2.0-//-speaker-deck&quot;&gt;Next Vue.js 2.0 // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/kazupon/next-vue-dot-js-2-dot-0&quot; title=&quot;Next Vue.js 2.0 // Speaker Deck&quot;&gt;speakerdeck.com/kazupon/next-vue-dot-js-2-dot-0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue.js 2.0のレンダリングフローについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flow-vs-typescript&quot;&gt;Flow vs TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://djcordhose.github.io/flow-vs-typescript/2016_hhjs.html#/&quot; title=&quot;Flow vs TypeScript&quot;&gt;djcordhose.github.io/flow-vs-typescript/2016_hhjs.html#/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptとFlowTypeの型指定の比較についてのスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hyperdev&quot;&gt;HyperDev&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hyperdev.com/&quot; title=&quot;HyperDev&quot;&gt;hyperdev.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;サーバも書けるJSFiddle的なサービス。&lt;br&gt;
Node.jsでサーバ側、HTML/CSS/JSなフロントも一緒に書けるエディタサービス&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-hyperpolyglot&quot;&gt;Front-end Hyperpolyglot&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jeffcarp.github.io/frontend-hyperpolyglot/&quot; title=&quot;Front-end Hyperpolyglot&quot;&gt;jeffcarp.github.io/frontend-hyperpolyglot/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React/Angular1,2/Ember/Polymer/Vueのテンプレートの書き方比較&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://hyperpolyglot.org/&quot; title=&quot;Programming Languages - Hyperpolyglot&quot;&gt;Programming Languages - Hyperpolyglot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;epoberezkin/ajv:-the-fastest-json-schema-validator.-supports-v5-proposals&quot;&gt;epoberezkin/ajv: The fastest JSON schema Validator. Supports v5 proposals&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/epoberezkin/ajv&quot; title=&quot;epoberezkin/ajv: The fastest JSON schema Validator. Supports v5 proposals&quot;&gt;github.com/epoberezkin/ajv&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSON Schema validatorライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mjb-code6/skyport:-add-offline-functionality-to-your-web-app&quot;&gt;MJB-code6/SkyPort: Add offline functionality to your web app&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MJB-code6/SkyPort&quot; title=&quot;MJB-code6/SkyPort: Add offline functionality to your web app&quot;&gt;github.com/MJB-code6/SkyPort&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Service Workerを使ったオフラインモードを実現するライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;frend-—-a-collection-of-accessible,-modern-front-end-components.&quot;&gt;Frend — A collection of accessible, modern front-end components.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://frend.co/&quot; title=&quot;Frend — A collection of accessible, modern front-end components.&quot;&gt;frend.co/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WAI-ARIA&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AccessibleなDOM UIを実現するためのJavaScriptライブラリ。CSSフレームワークのように特定のクラスを付けた要素にWAI-ARIAの属性を付加していく。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechrome/lighthouse:-auditing-and-performance-metrics-for-progressive-web-apps&quot;&gt;GoogleChrome/lighthouse: auditing and performance metrics for Progressive Web Apps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse&quot; title=&quot;GoogleChrome/lighthouse: auditing and performance metrics for Progressive Web Apps&quot;&gt;github.com/GoogleChrome/lighthouse&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Service Workerを使ってのオフライン対応の有無、Speed IndexなどのロードパフォーマンスなどProgressive Web Appsに関する計測ツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-plugin-architectureというプラグイン設計について学ぶ無料の電子書籍を書いた-|-web-scratch&quot;&gt;JavaScript Plugin Architectureというプラグイン設計について学ぶ無料の電子書籍を書いた | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/06/06/JavaScript-Plugin-Architecture/&quot; title=&quot;JavaScript Plugin Architectureというプラグイン設計について学ぶ無料の電子書籍を書いた | Web Scratch&quot;&gt;efcl.info/2016/06/06/JavaScript-Plugin-Architecture/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ebook&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのプラグイン設計のケーススタディ本。&lt;br&gt;
jQuery、ESLint、Connect、gulp、Reduxなどのプラグインの仕組みを実装しながら学ぶ電子書籍&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/JavaScript-Plugin-Architecture&quot; title=&quot;azu/JavaScript-Plugin-Architecture: JavaScriptプラグインアーキテクチャの本&quot;&gt;azu/JavaScript-Plugin-Architecture: JavaScriptプラグインアーキテクチャの本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 07 Jun 2016 09:40:00 +0900</pubDate>
        <link>http://jser.info/2016/06/07/shadow-dom-v1reactjavascript/</link>
        <guid isPermaLink="true">http://jser.info/2016/06/07/shadow-dom-v1reactjavascript/</guid>
        
        <category>WebComponent</category>
        
        <category>React</category>
        
        <category>JavaScript</category>
        
        <category>plguin</category>
        
        <category>book</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-05-30のJS: 初めてのnpm publish、Node.jsでのメモリリークデバッグ</title>
        <description>&lt;p&gt;JSer.info #281 - &lt;a href=&quot;https://eladnava.com/publishing-your-first-package-to-npm/&quot;&gt;Publishing Your First Package to npm&lt;/a&gt;という記事では、npmにパッケージを公開する流れが紹介されています。&lt;/p&gt;

&lt;p&gt;まだ&lt;code&gt;npm publish&lt;/code&gt;したことがない人はチュートリアルを見ながらやってみるといいかもしれません。&lt;br&gt;
グローバルな名前空間を使うのに気が引ける場合はScoped Modulesとして公開してみるといいかもしれません。&lt;br&gt;
(&lt;code&gt;package.json&lt;/code&gt;の&lt;code&gt;name&lt;/code&gt;を&lt;code&gt;@&amp;lt;npmユーザ名&amp;gt;/&amp;lt;パッケージ名&lt;/code&gt;とするだけです)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/04/30/npm-namespace/&quot;&gt;npmで名前空間を持ったモジュールを公開する方法(scoped modules) | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://postd.cc/simple-guide-to-finding-a-javascript-memory-leak-in-node-js/&quot;&gt;Node.jsでのJavaScriptメモリリークを発見するための簡単ガイド | プログラミング | POSTD&lt;/a&gt;は&lt;a href=&quot;http://www.alexkras.com/simple-guide-to-finding-a-javascript-memory-leak-in-node-js/&quot; title=&quot;Simple Guide to Finding a JavaScript Memory Leak in Node.js&quot;&gt;Simple Guide to Finding a JavaScript Memory Leak in Node.js&lt;/a&gt;の翻訳記事ですが、Node.jsでのメモリリークの見つけ方や確認方法についてです。&lt;/p&gt;

&lt;p&gt;JavaScriptライブラリはブラウザ向けでもNode.jsで動くように書くことが多い(テスト楽)ので、&lt;br&gt;
Node.js向けの方法ですが適応できる範囲は結構広いので知っておくといいことが多いです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;最近まさに&lt;code&gt;global.gc()&lt;/code&gt;と&lt;code&gt;process.memoryUsage()&lt;/code&gt;を使ってメモリリークのテストをブラウザ向けのライブラリでやりました&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/almin/almin/pull/33&quot; title=&quot;perf(test): add memory leak testing by azu · Pull Request #33 · almin/almin&quot;&gt;perf(test): add memory leak testing by azu · Pull Request #33 · almin/almin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GCとHeapダンプの取り方はブラウザの開発者ツールでも同様の事ができます。&lt;br&gt;
また、Node.jsをChromeの開発者ツールでリモートデバッグする機能がPull Requestされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/6792&quot;&gt;Add v8_inspector support by ofrobots · Pull Request #6792 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=N1swY14jiKc&quot;&gt;V8, modern JavaScript, and beyond - Google I/O 2016 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deco---react-native-ide&quot;&gt;Deco - React Native IDE&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.decosoftware.com/may-2016-update&quot; title=&quot;Deco - React Native IDE&quot;&gt;www.decosoftware.com/may-2016-update&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Native IDEであるDecoがオープンソースとしてリリースされた&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.11.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.11.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/05/eslint-v2.11.0-released&quot; title=&quot;ESLint v2.11.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/05/eslint-v2.11.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint v2.11.0リリース。&lt;br&gt;
JSCS互換のルールの追加、&lt;code&gt;obj.hasOwnProperty&lt;/code&gt;の利用に関するルールの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/979bee6cd462f135f217&quot; title=&quot;ESLint v2.11.0 - Qiita&quot;&gt;ESLint v2.11.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://esdiscuss.org/topic/suggestion-object-hasownproperty&quot; title=&quot;Suggestion: Object.hasOwnProperty&quot;&gt;Suggestion: Object.hasOwnProperty&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-5-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 5 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6415/release-notes-for-safari-technology-preview-5/&quot; title=&quot;Release Notes for Safari Technology Preview 5 | WebKit&quot;&gt;webkit.org/blog/6415/release-notes-for-safari-technology-preview-5/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 5リリース。&lt;br&gt;
&lt;code&gt;NodeList&lt;/code&gt;がiterableに、&lt;code&gt;window.scroll&lt;/code&gt;が&lt;code&gt;ScrollToOptions&lt;/code&gt;をサポート、sourceMappingURLが相対パスを扱えない問題を修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;publishing-your-first-package-to-npm&quot;&gt;Publishing Your First Package to npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://eladnava.com/publishing-your-first-package-to-npm/&quot; title=&quot;Publishing Your First Package to npm&quot;&gt;eladnava.com/publishing-your-first-package-to-npm/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npmでパッケージを公開するまでの流れを書いたチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fullstack-react-:-react-tutorial:-cloning-yelp&quot;&gt;Fullstack React : React Tutorial: Cloning Yelp&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.fullstackreact.com/articles/react-tutorial-cloning-yelp/&quot; title=&quot;Fullstack React : React Tutorial: Cloning Yelp&quot;&gt;www.fullstackreact.com/articles/react-tutorial-cloning-yelp/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;YelpのクローンをReactで作るチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;intersectionobserverを使ってlazyload-imageを書き直した---1000ch.net&quot;&gt;IntersectionObserverを使ってlazyload-imageを書き直した - 1000ch.net&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://1000ch.net/posts/2016/intersection-observer-lazyload.html&quot; title=&quot;IntersectionObserverを使ってlazyload-imageを書き直した - 1000ch.net&quot;&gt;1000ch.net/posts/2016/intersection-observer-lazyload.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;を使った画像の遅延ロードの実装について。&lt;br&gt;
fallbackはただの&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;として動作する&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;[翻訳]-airbnb-react/jsx-style-guide---qiita&quot;&gt;[翻訳] Airbnb React/JSX Style Guide - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/koukun/items/e64762e407b8dd5e0247&quot; title=&quot;\[翻訳\] Airbnb React/JSX Style Guide - Qiita&quot;&gt;qiita.com/koukun/items/e64762e407b8dd5e0247&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Airbnb React/JSXのコーディングスタイルガイドの翻訳&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rxjs-の代わりに-xstream-を使う---qiita&quot;&gt;RxJS の代わりに xstream を使う - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/masakielastic/items/f34f5b297abee0e80ddc&quot; title=&quot;RxJS の代わりに xstream を使う - Qiita&quot;&gt;qiita.com/masakielastic/items/f34f5b297abee0e80ddc&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;RxライクなStreamライブラリであるxstreamについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/staltz/xstream&quot; title=&quot;staltz/xstream: An extremely intuitive, small, and fast functional reactive stream library for JavaScript&quot;&gt;staltz/xstream: An extremely intuitive, small, and fast functional reactive stream library for JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react/redux-introduction-//-speaker-deck&quot;&gt;React/Redux Introduction // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/adwd/redux-introduction&quot; title=&quot;React/Redux Introduction // Speaker Deck&quot;&gt;speakerdeck.com/adwd/redux-introduction&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React/ReduxでTodo的アプリを作る話。&lt;br&gt;
チュートリアル的な内容のスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;implementing-a-stepping-debugger-in-javascript&quot;&gt;Implementing a Stepping Debugger in JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jlongster.com/Implementing-Stepping-Debugger-JavaScript&quot; title=&quot;Implementing a Stepping Debugger in JavaScript&quot;&gt;jlongster.com/Implementing-Stepping-Debugger-JavaScript&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptをステップ実行できるエディタをどうやって実装するか。&lt;br&gt;
regeneratorとステートマシーン、コールスタックの実装、ブレークポイントの対応など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jlongster/unwinder&quot; title=&quot;jlongster/unwinder: An implementation of continuations in JavaScript&quot;&gt;jlongster/unwinder: An implementation of continuations in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testing-your-style-with-eslint-and-mocha&quot;&gt;Testing Your Style With ESLint and Mocha&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://robots.thoughtbot.com/testing-your-style-with-eslint-and-mocha&quot; title=&quot;Testing Your Style With ESLint and Mocha&quot;&gt;robots.thoughtbot.com/testing-your-style-with-eslint-and-mocha&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLintをMochaのテストとして動かす話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;npm-scripts-でクロスプラットフォームに環境変数を参照するための-npm-を作成してみた-–-アカベコマイリ&quot;&gt;npm-scripts でクロスプラットフォームに環境変数を参照するための npm を作成してみた – アカベコマイリ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://akabeko.me/blog/2016/05/cross-conf-env-1-0-release/&quot; title=&quot;npm-scripts でクロスプラットフォームに環境変数を参照するための npm を作成してみた – アカベコマイリ&quot;&gt;akabeko.me/blog/2016/05/cross-conf-env-1-0-release/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;の&lt;code&gt;config&lt;/code&gt; fieldに環境変数を定義して、それをクロスプラットフォームで利用できるようにするツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-asts-by-building-your-own-babel-plugin&quot;&gt;Understanding ASTs by Building Your Own Babel Plugin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/understanding-asts-building-babel-plugin/&quot; title=&quot;Understanding ASTs by Building Your Own Babel Plugin&quot;&gt;www.sitepoint.com/understanding-asts-building-babel-plugin/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babelプラグインを書きながらASTについて学ぶチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-react-server---@redfin&quot;&gt;Announcing React Server - @Redfin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.redfin.com/blog/2016/05/announcing-react-server.html&quot; title=&quot;Announcing React Server - @Redfin&quot;&gt;www.redfin.com/blog/2016/05/announcing-react-server.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;サーバー&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactのサーバサイドレンダリングを行うためのフレームワーク&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-conf-london-2016---youtube&quot;&gt;Node Conf London 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL0CdgOSSGlBYnHAl_DZoy9BWvdVQjNKE2&quot; title=&quot;Node Conf London 2016 - YouTube&quot;&gt;www.youtube.com/playlist?list=PL0CdgOSSGlBYnHAl_DZoy9BWvdVQjNKE2&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node Conf London 2016 の動画まとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://london.nodeconf.com/&quot; title=&quot;NodeConf London 2016&quot;&gt;NodeConf London 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsconfuy-2016---youtube&quot;&gt;JSConfUY 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/user/jsconfuy&quot; title=&quot;JSConfUY 2016 - YouTube&quot;&gt;www.youtube.com/user/jsconfuy&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSConf Uruguay 2016の動画まとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jsconf.uy/&quot; title=&quot;JSConf Uruguay 2016 - Montevideo, April 15th-16th&quot;&gt;JSConf Uruguay 2016 - Montevideo, April 15th-16th&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tonyganch/gonzales-pe:-css-parser-with-support-of-preprocessors&quot;&gt;tonyganch/gonzales-pe: CSS parser with support of preprocessors&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tonyganch/gonzales-pe&quot; title=&quot;tonyganch/gonzales-pe: CSS parser with support of preprocessors&quot;&gt;github.com/tonyganch/gonzales-pe&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS Parserライブラリ。&lt;br&gt;
CSS/less/Sassをサポートしてる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;quorrajs&quot;&gt;QuorraJS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://quorrajs.org/&quot; title=&quot;QuorraJS&quot;&gt;quorrajs.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;LaravelインスパイアなNode.jsフレームワーク&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@quorrajs/we-are-just-getting-started-f6593e4ae06b&quot; title=&quot;Introducing QuorraJS — Medium&quot;&gt;Introducing QuorraJS — Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;alm-tools-for-typescript&quot;&gt;ALM Tools for TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://alm.tools/&quot; title=&quot;ALM Tools for TypeScript&quot;&gt;alm.tools/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ブラウザで動くTypeScriptエディタ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;初めてのthree.js-第2版-:-jos-dirksen,-あんどうやすし-:-本-:-amazon.co.jp&quot;&gt;初めてのThree.js 第2版 : Jos Dirksen, あんどうやすし : 本 : Amazon.co.jp&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.jp/%E5%88%9D%E3%82%81%E3%81%A6%E3%81%AEThree-js-%E7%AC%AC2%E7%89%88-Jos-Dirksen/dp/4873117704&quot; title=&quot;初めてのThree.js 第2版 : Jos Dirksen, あんどうやすし : 本 : Amazon.co.jp&quot;&gt;www.amazon.co.jp/%E5%88%9D%E3%82%81%E3%81%A6%E3%81%AEThree-js-%E7%AC%AC2%E7%89%88-Jos-Dirksen/dp/4873117704&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年7月25日発売&lt;br&gt;
Three.js本&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 30 May 2016 20:41:00 +0900</pubDate>
        <link>http://jser.info/2016/05/30/npm-publishnodejs/</link>
        <guid isPermaLink="true">http://jser.info/2016/05/30/npm-publishnodejs/</guid>
        
        <category>npm</category>
        
        <category>V8</category>
        
        <category>Node.js</category>
        
        <category>memory</category>
        
        <category>debug</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-05-23: MSEdgeがES6 Modulesをサポート、jQuery 3.0 RCリリース</title>
        <description>&lt;p&gt;JSer.info #280 - MSEdgeの新しいビルドが公開され、&lt;code&gt;&amp;lt;script type=&amp;quot;module&amp;quot;&amp;gt;&lt;/code&gt;でのES6 modulesをフラグ付きでサポートしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/05/17/es6-modules-and-beyond/&quot;&gt;Previewing ES6 Modules and more from ES2015, ES2016 and beyond | Microsoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://browser.hatenablog.com/entry/2016/05/22/220131&quot; title=&quot;Microsoft Edge で Modules を使ってみる - Browser&quot;&gt;Microsoft Edge で Modules を使ってみる - Browser&lt;/a&gt;でも書かれていますが、まだサポートは限定的です。&lt;/p&gt;

&lt;p&gt;他のブラウザも実装中で、&lt;a href=&quot;https://github.com/whatwg/loader&quot;&gt;仕様もまだ議論中&lt;/a&gt;なところは多いですが、Moduleが一歩進んだ感じです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5365692190687232&quot; title=&quot;Modules (ES6) - Chrome Platform Status&quot;&gt;Modules (ES6) - Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、MSEdgeはES2016で入る &lt;code&gt;**&lt;/code&gt; と &lt;code&gt;Array.prototype.includes&lt;/code&gt;のサポート、ES2017で入る予定の&lt;code&gt;Object.values&lt;/code&gt;や&lt;code&gt;Object.entries&lt;/code&gt;などの実装を開始しています。&lt;/p&gt;

&lt;p&gt;ECMAScriptの部分に関してはオープンソースのChakraCoreリポジトリの方で実装されるので、以下のリポジトリを見ておくと実装状況がわかると思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/ChakraCore&quot; title=&quot;Microsoft/ChakraCore: ChakraCore is the core part of the Chakra Javascript engine that powers Microsoft Edge&quot;&gt;Microsoft/ChakraCore: ChakraCore is the core part of the Chakra Javascript engine that powers Microsoft Edge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ECMAScriptのProposalの場所は以下に変更されたので合わせて参照するといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposals&quot; title=&quot;tc39/proposals: Tracking ECMAScript Proposals&quot;&gt;tc39/proposals: Tracking ECMAScript Proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;TC39, the standards body that works on the ECMAScript language, has a new GitHub-driven process and yearly release cadence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;記事中でGitHub-drivenとありますが、ChakraCoreのIssueに&lt;a href=&quot;https://github.com/Microsoft/ChakraCore/issues/796&quot;&gt;WebKitの人&lt;/a&gt;がいたり、&lt;a href=&quot;https://github.com/Microsoft/ChakraCore/pull/475&quot;&gt;Proposal仕様を書いた人&lt;/a&gt;がいたり、それらに対して&lt;a href=&quot;https://github.com/tc39/proposal-ptc-syntax/issues/7&quot;&gt;ECMAScriptのリポジトリからリンク&lt;/a&gt;があってリファレンスリンクが見えたりするので面白いです。&lt;/p&gt;

&lt;p&gt;V8チームが書いた記事も合わせてみると、仕様策定から実装プロセスへの変化が見られるかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2016/04/es6-es7-and-beyond.html&quot; title=&quot;V8 JavaScript Engine: ES6, ES7, and beyond&quot;&gt;V8 JavaScript Engine: ES6, ES7, and beyond&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jquery.com/2016/05/20/jquery-3-0-release-candidate-released/&quot;&gt;jQuery 3.0 RC&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;jQuery 3.xはIE9+サポートとなり、1.xと2.xから3.xに一本化されます。&lt;br&gt;
過去のバージョンからのアップグレード方法については以下のドキュメントにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jquery.com/upgrade-guide/3.0/&quot; title=&quot;jQuery Core 3.0 Upgrade Guide | jQuery&quot;&gt;jQuery Core 3.0 Upgrade Guide | jQuery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;previewing-es6-modules-and-more-from-es2015,-es2016-and-beyond-|-microsoft-edge-dev-blog&quot;&gt;Previewing ES6 Modules and more from ES2015, ES2016 and beyond | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/05/17/es6-modules-and-beyond/&quot; title=&quot;Previewing ES6 Modules and more from ES2015, ES2016 and beyond | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2016/05/17/es6-modules-and-beyond/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MSEdge build 14342リリース。&lt;br&gt;
ES6 modulesを扱える&lt;code&gt;&amp;lt;script type=&amp;quot;module&amp;quot;&amp;gt;&lt;/code&gt;をフラグ付きでサポート、ES2016/2017の新しい機能である&lt;code&gt;**&lt;/code&gt;、&lt;code&gt;Object.values&lt;/code&gt;、&lt;code&gt;Object.entries&lt;/code&gt;、&lt;code&gt;String#pad*&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://browser.hatenablog.com/entry/2016/05/22/220131&quot; title=&quot;Microsoft Edge で Modules を使ってみる - Browser&quot;&gt;Microsoft Edge で Modules を使ってみる - Browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v15.1.0-·-facebook/react&quot;&gt;Release v15.1.0 · facebook/react&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/react/releases/tag/v15.1.0&quot; title=&quot;Release v15.1.0 · facebook/react&quot;&gt;github.com/facebook/react/releases/tag/v15.1.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React v15.1.0リリース。&lt;br&gt;
Chromeの&lt;code&gt;Object.assign&lt;/code&gt;に順序バグがあるため対応するpolyfillをアップデート、react-addons-perfが書き直された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react/pull/6046&quot; title=&quot;Add new ReactPerf by gaearon · Pull Request #6046 · facebook/react&quot;&gt;Add new ReactPerf by gaearon · Pull Request #6046 · facebook/react&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/object-assign/pull/32&quot; title=&quot;Add feature test against buggy V8 versions by spicyj · Pull Request #32 · sindresorhus/object-assign&quot;&gt;Add feature test against buggy V8 versions by spicyj · Pull Request #32 · sindresorhus/object-assign&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v6.2.0-(current)-|-node.js&quot;&gt;Node v6.2.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.2.0/&quot; title=&quot;Node v6.2.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v6.2.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node v6.2.0リリース。&lt;br&gt;
&lt;code&gt;--no-deprecation&lt;/code&gt;をランタイムに設定できる &lt;code&gt;process.noDeprecation = true;&lt;/code&gt; が用意されるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.9.0-·-babel/babel&quot;&gt;Release v6.9.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.9.0&quot; title=&quot;Release v6.9.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.9.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel v6.9.0リリース。&lt;br&gt;
core-jsのアップデート、&lt;code&gt;systemGlobal&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases&quot; title=&quot;Releases · zloirock/core-js&quot;&gt;Releases · zloirock/core-js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-3.0-release-candidate…released!-|-official-jquery-blog&quot;&gt;jQuery 3.0 Release Candidate…Released! | Official jQuery Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jquery.com/2016/05/20/jquery-3-0-release-candidate-released/&quot; title=&quot;jQuery 3.0 Release Candidate…Released! | Official jQuery Blog&quot;&gt;blog.jquery.com/2016/05/20/jquery-3-0-release-candidate-released/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery 3.0 RCリリース&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;refactoring-a-javascript-video-store&quot;&gt;Refactoring a javascript video store&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://martinfowler.com/articles/refactoring-video-store-js/&quot; title=&quot;Refactoring a javascript video store&quot;&gt;martinfowler.com/articles/refactoring-video-store-js/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファクタリング&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;マーティン・ファウラーによるJavaScript(ES2015)のリファクタリング&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;iterators-and-generators-in-javascript-|-kenneth-truyers&quot;&gt;Iterators and Generators in Javascript | Kenneth Truyers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kenneth-truyers.net/2016/05/20/iterators-and-generators-in-javascript/&quot; title=&quot;Iterators and Generators in Javascript | Kenneth Truyers&quot;&gt;www.kenneth-truyers.net/2016/05/20/iterators-and-generators-in-javascript/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Iterator/Iterable/Generatorについての簡潔なまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-make-accessible-web-components-—-a-brief-guide&quot;&gt;How to Make Accessible Web Components — a Brief Guide&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/accessible-web-components/&quot; title=&quot;How to Make Accessible Web Components — a Brief Guide&quot;&gt;www.sitepoint.com/accessible-web-components/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Custom Elementで作った要素をAccessibleに実装するチュートリアル。&lt;br&gt;
キーボード対応、WAI-ARIA、ハイコントラストモードでの確認など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-7-cross-browser-testing-tools-you-need-in-2016&quot;&gt;The 7 Cross-Browser Testing Tools You Need in 2016&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/the-7-cross-browser-testing-tools-you-need-in-2016/&quot; title=&quot;The 7 Cross-Browser Testing Tools You Need in 2016&quot;&gt;www.sitepoint.com/the-7-cross-browser-testing-tools-you-need-in-2016/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;テスト用のクロスブラウザを扱えるサービスのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ここがすごいぞ！-stylelint！---qiita&quot;&gt;ここがすごいぞ！ stylelint！ - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/inuscript/items/ff4f6972c988afbec3a8&quot; title=&quot;ここがすごいぞ！ stylelint！ - Qiita&quot;&gt;qiita.com/inuscript/items/ff4f6972c988afbec3a8&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSのLintをするstylelintについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;step-by-stepで始めるkarma---qiita&quot;&gt;step by stepで始めるKarma - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/howdy39/items/b9d704e7f84053924da3&quot; title=&quot;step by stepで始めるKarma - Qiita&quot;&gt;qiita.com/howdy39/items/b9d704e7f84053924da3&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;karmaの導入チュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;six-nifty-es6-tricks&quot;&gt;Six nifty ES6 tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2016/05/six-nifty-es6-tricks.html&quot; title=&quot;Six nifty ES6 tricks&quot;&gt;www.2ality.com/2016/05/six-nifty-es6-tricks.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6の少しテクニカルな使い方&lt;br&gt;
デフォルト引数を使った必須引数のチェック、for of + &lt;code&gt;Object.entries&lt;/code&gt;、サロゲートペア、配列の入れ方、template literal、mixinなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learn-redux-video-tutorial-course&quot;&gt;Learn Redux Video Tutorial Course&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://learnredux.com/&quot; title=&quot;Learn Redux Video Tutorial Course&quot;&gt;learnredux.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reduxを使ったウェブアプリ開発に関するスクリーンキャスト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-and-chrome-at-google-i/o-2016---youtube&quot;&gt;Web and Chrome at Google I/O 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/user/ChromeDevelopers&quot; title=&quot;Web and Chrome at Google I/O 2016 - YouTube&quot;&gt;www.youtube.com/user/ChromeDevelopers&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Google I/O 2016の動画まとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://events.google.com/io2016/&quot; title=&quot;Google I/O 2016&quot;&gt;Google I/O 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-performance-tooling---google-i/o-2016---youtube&quot;&gt;Web Performance Tooling - Google I/O 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=iMqi55rcR00&quot; title=&quot;Web Performance Tooling - Google I/O 2016 - YouTube&quot;&gt;www.youtube.com/watch?v=iMqi55rcR00&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome開発者ツールのパフォーマンス周りの使い方や見かたについて。&lt;br&gt;
ケーススタディ毎にどの部分が遅いのかを見つけて、開発者ツールで本当にそれが原因なのかを確認したり、俯瞰の仕方についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;instant-loading:-building-offline-first-progressive-web-apps---google-i/o-2016---youtube&quot;&gt;Instant Loading: Building offline-first Progressive Web Apps - Google I/O 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=cmGr0RszHc8&quot; title=&quot;Instant Loading: Building offline-first Progressive Web Apps - Google I/O 2016 - YouTube&quot;&gt;www.youtube.com/watch?v=cmGr0RszHc8&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ServiceWorkerを使ったオフラインファーストについての発表。&lt;br&gt;
電波状態が悪いケースを想定した動作、IndexedDBを使ったデータの保存など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pazguille/offline-first&quot; title=&quot;pazguille/offline-first: Everything you need to know to create offline-first web apps.&quot;&gt;pazguille/offline-first: Everything you need to know to create offline-first web apps.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lerna-·-a-tool-for-managing-javascript-projects-with-multiple-packages.&quot;&gt;Lerna · A tool for managing JavaScript projects with multiple packages.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://lernajs.io/&quot; title=&quot;Lerna · A tool for managing JavaScript projects with multiple packages.&quot;&gt;lernajs.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babelで使われてるmonorepoを管理するツールであるLernaの公式サイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;brigand/react-mixin:-mixins-in-react-with-es6-style-classes&quot;&gt;brigand/react-mixin: mixins in react with es6 style classes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/brigand/react-mixin&quot; title=&quot;brigand/react-mixin: mixins in react with es6 style classes&quot;&gt;github.com/brigand/react-mixin&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentに対してES6 Classesでmixinをするライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yoshuawuyts/choo:---framework-for-creating-sturdy-web-applications&quot;&gt;yoshuawuyts/choo: - framework for creating sturdy web applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/yoshuawuyts/choo&quot; title=&quot;yoshuawuyts/choo: - framework for creating sturdy web applications&quot;&gt;github.com/yoshuawuyts/choo&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;小さなモジュールを組み合わせたReduxライクな仕組みを持つフレームワーク。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;maxogden/yo-yo:-a-tiny-library-for-building-modular-ui-components-using-dom-diffing-and-es6-tagged-template-literals&quot;&gt;maxogden/yo-yo: A tiny library for building modular UI components using DOM diffing and ES6 tagged template literals&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/maxogden/yo-yo&quot; title=&quot;maxogden/yo-yo: A tiny library for building modular UI components using DOM diffing and ES6 tagged template literals&quot;&gt;github.com/maxogden/yo-yo&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;https://www.npmjs.com/package/morphdom をベースにtagged template literalsを使ったViewライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wssgcg1213/babel-plugin-inline-replace-varibles:-babel-plugin-to-inline-replace-varibles&quot;&gt;wssgcg1213/babel-plugin-inline-replace-varibles: babel plugin to inline replace varibles&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wssgcg1213/babel-plugin-inline-replace-varibles&quot; title=&quot;wssgcg1213/babel-plugin-inline-replace-varibles: babel plugin to inline replace varibles&quot;&gt;github.com/wssgcg1213/babel-plugin-inline-replace-varibles&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babelで文字列に値をインライン展開するプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;exploring-es2016…-by-axel-rauschmayer-[leanpub-pdf/ipad/kindle]&quot;&gt;Exploring ES2016… by Axel Rauschmayer [Leanpub PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/exploring-es2016-es2017&quot; title=&quot;Exploring ES2016… by Axel Rauschmayer \[Leanpub PDF/iPad/Kindle\]&quot;&gt;leanpub.com/exploring-es2016-es2017&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Exploring ES6のES2016/2017対応版&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 23 May 2016 19:45:00 +0900</pubDate>
        <link>http://jser.info/2016/05/23/msedgees6-modulesjquery-30-rcgoogle-io/</link>
        <guid isPermaLink="true">http://jser.info/2016/05/23/msedgees6-modulesjquery-30-rcgoogle-io/</guid>
        
        <category>MSEdge</category>
        
        <category>modules</category>
        
        <category>jQuery</category>
        
        <category>Google</category>
        
        <category>動画</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-05-16のJS: Electron 1.0、ブレークポイントの使い方、Bublé</title>
        <description>&lt;p&gt;JSer.info #279 - ChromiumとNode.jsをベースとしたデスクトップアプリ開発環境である&lt;a href=&quot;http://electron.atom.io/blog/2016/05/11/electron-1-0&quot; title=&quot;Electron 1.0&quot;&gt;Electron 1.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;本体は非推奨なメソッドの削除が中心となっています。&lt;br&gt;
合わせて開発者ツールの強化やデモ、テストツールが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://electron.atom.io/devtron/&quot;&gt;Devtron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/electron/electron-api-demos&quot;&gt;electron/electron-api-demos: Explore the Electron APIs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://electron.atom.io/spectron/&quot;&gt;Spectron&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/nekoneko-wanwan/items/02aed17773833c3ad3b2&quot; title=&quot;ブレークポイントを使ったJavaScriptデバッグを整理してみた【再入門】 - Qiita&quot;&gt;ブレークポイントを使ったJavaScriptデバッグを整理してみた【再入門】 - Qiita&lt;/a&gt;という記事ではChrome開発者ツールでのブレークポイントの使い方について解説されています。&lt;/p&gt;

&lt;p&gt;コードに対するブレークポイントからDOM、XHRなど色々なブレーク方法をスクリーンショット共に解説されているので分かりやすいです。&lt;/p&gt;

&lt;p&gt;公式サイトも合わせて見るといいかもしれません&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/devtools&quot; title=&quot;Chrome DevTools Overview - Google Chrome&quot;&gt;Chrome DevTools Overview - Google Chrome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://buble.surge.sh/guide/&quot; title=&quot;Bublé – the blazing fast, batteries-included ES2015 compiler&quot;&gt;Bublé – the blazing fast, batteries-included ES2015 compiler&lt;/a&gt;は、ES2015のコードをES5へ変換することを目的としたTranspilerツールです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/&quot; title=&quot;Babel&quot;&gt;Babel&lt;/a&gt;とは異なる点としては以下のような点があります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2016/03/06/ast-first-step/&quot; title=&quot;AST&quot;&gt;AST&lt;/a&gt;を変換してASTを生成するわけではなく、ASTから&lt;a href=&quot;https://github.com/Rich-Harris/magic-string&quot; title=&quot;magic-string&quot;&gt;magic-string&lt;/a&gt;を使い直接コードを生成しています

&lt;ul&gt;
&lt;li&gt;ASTから直接コードを吐き出すので高速な変換ができます&lt;/li&gt;
&lt;li&gt;一方、中間フォーマットがないためプラグインのような拡張は難しいです&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Babel 6.xのようにプラグイン式ではなく、ビルトインで変換するパターンが入っています&lt;/li&gt;
&lt;li&gt;ECMAScriptの仕様準拠が目的ではない点

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/&quot; title=&quot;Babel&quot;&gt;Babel&lt;/a&gt;はECMAScriptへのできるだけ準拠した挙動になるように変換します&lt;/li&gt;
&lt;li&gt;&lt;code&gt;loose&lt;/code&gt;オプションを指定することで、ラフな変換をするようにできますがBubléはこちらがデフォルトとなります&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;変換できる機能が意図的に限定されています

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;import/export&lt;/code&gt;やComputed propertiesなどの変換はできません&lt;/li&gt;
&lt;li&gt;恐らく同作者の&lt;a href=&quot;https://github.com/rollup/rollup&quot; title=&quot;rollup&quot;&gt;rollup&lt;/a&gt;と合わせ使うようなデザインになっています&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Babelとは構造や目的も異なるので、興味がある人はためしてみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electron-1.0&quot;&gt;Electron 1.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://electron.atom.io/blog/2016/05/11/electron-1-0&quot; title=&quot;Electron 1.0&quot;&gt;electron.atom.io/blog/2016/05/11/electron-1-0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Electron 1.0リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.10.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.10.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/05/eslint-v2.10.0-released&quot; title=&quot;ESLint v2.10.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/05/eslint-v2.10.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint v2.10.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/5df2d679283d0a84b296&quot; title=&quot;ESLint v2.10.0 - Qiita&quot;&gt;ESLint v2.10.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-4-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 4 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6210/release-notes-for-safari-technology-preview-4/&quot; title=&quot;Release Notes for Safari Technology Preview 4 | WebKit&quot;&gt;webkit.org/blog/6210/release-notes-for-safari-technology-preview-4/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 4リリース。&lt;br&gt;
&lt;code&gt;String.prototype.localeCompare&lt;/code&gt;の実装、object literalでも&lt;code&gt;super()&lt;/code&gt;が呼べるように、&lt;code&gt;var log = console.log&lt;/code&gt;が可能になるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ブレークポイントを使ったjavascriptデバッグを整理してみた【再入門】---qiita&quot;&gt;ブレークポイントを使ったJavaScriptデバッグを整理してみた【再入門】 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/nekoneko-wanwan/items/02aed17773833c3ad3b2&quot; title=&quot;ブレークポイントを使ったJavaScriptデバッグを整理してみた【再入門】 - Qiita&quot;&gt;qiita.com/nekoneko-wanwan/items/02aed17773833c3ad3b2&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome開発者ツールのブレークポイントの使い方や各種ブレークポイントについて。&lt;br&gt;
画像と共に項目が解説されているので分かりやすい。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;するするさせたい：サイボウズ採用情報のアニメーション（その1）---fragmentary&quot;&gt;するするさせたい：サイボウズ採用情報のアニメーション（その1） - fragmentary&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://myakura.hatenablog.com/entry/2016/05/12/083000&quot; title=&quot;するするさせたい：サイボウズ採用情報のアニメーション（その1） - fragmentary&quot;&gt;myakura.hatenablog.com/entry/2016/05/12/083000&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSアニメーションのパフォーマンス問題を見つけ方と解決方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-ultimate-guide-to-css-pseudo-classes-and-pseudo-elements-–-smashing-magazine&quot;&gt;An Ultimate Guide To CSS Pseudo-Classes And Pseudo-Elements – Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/05/an-ultimate-guide-to-css-pseudo-classes-and-pseudo-elements/&quot; title=&quot;An Ultimate Guide To CSS Pseudo-Classes And Pseudo-Elements – Smashing Magazine&quot;&gt;www.smashingmagazine.com/2016/05/an-ultimate-guide-to-css-pseudo-classes-and-pseudo-elements/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSの擬似要素と擬似クラスの網羅的な解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;get-to-know-the-page-visibility-api-|-scotch&quot;&gt;Get to Know the Page Visibility API | Scotch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://scotch.io/tutorials/get-to-know-the-page-visibility-api&quot; title=&quot;Get to Know the Page Visibility API | Scotch&quot;&gt;scotch.io/tutorials/get-to-know-the-page-visibility-api&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Page Visibility APIの使い所や使い方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ちゃんと使い分けてる?-dependenciesいろいろ。---qiita&quot;&gt;ちゃんと使い分けてる? dependenciesいろいろ。 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/cognitom/items/acc3ffcbca4c56cf2b95&quot; title=&quot;ちゃんと使い分けてる? dependenciesいろいろ。 - Qiita&quot;&gt;qiita.com/cognitom/items/acc3ffcbca4c56cf2b95&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npmのdependenciesの種類についての解説。&lt;br&gt;
- dependencies&lt;br&gt;
- devDependencies&lt;br&gt;
- peerDependencies&lt;br&gt;
- optionalDependencies&lt;br&gt;
- bundledDependencies&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;runtastic/flow-guide:-our-definitive-guide-for-using-flow-static-javascript-type-checker-(https://flowtype.org)&quot;&gt;runtastic/flow-guide: Our definitive guide for using Flow static JavaScript type checker (https://flowtype.org)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/runtastic/flow-guide&quot; title=&quot;runtastic/flow-guide: Our definitive guide for using Flow static JavaScript type checker (https://flowtype.org)&quot;&gt;github.com/runtastic/flow-guide&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Flowの導入チュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redux-observable-—-medium&quot;&gt;redux-observable — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@benlesh/redux-observable-ec0b00d2eb52&quot; title=&quot;redux-observable — Medium&quot;&gt;medium.com/@benlesh/redux-observable-ec0b00d2eb52&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Netflixで使ってる&lt;code&gt;redux-observable&lt;/code&gt;について。&lt;br&gt;
なぜ&lt;code&gt;redux-&lt;/code&gt;なのか? - ReduxはReact周りでよく知られているパターンであり、既に様々なRedux関連ツールが存在するからであるという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/blesh/redux-observable&quot; title=&quot;blesh/redux-observable: RxJS middleware for Redux&quot;&gt;blesh/redux-observable: RxJS middleware for Redux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;streamlining-the-sign-in-flow-using-credential-management-api-|-web-updates---google-developers&quot;&gt;Streamlining the Sign-in Flow Using Credential Management API | Web Updates - Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/04/credential-management-api&quot; title=&quot;Streamlining the Sign-in Flow Using Credential Management API | Web Updates - Google Developers&quot;&gt;developers.google.com/web/updates/2016/04/credential-management-api&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Credential Management APIについて。&lt;br&gt;
自動サインインを実装しながら使い方について学ぶチュートリアル&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/04/credential-management-api?hl=ja&quot; title=&quot;Credential Management API を使ったサインインフローの効率化 | Web Updates - Google Developers&quot;&gt;Credential Management API を使ったサインインフローの効率化 | Web Updates - Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;about-document.ready&quot;&gt;About document.ready&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.webreflection.co.uk/blog/2016/05/10/document.ready&quot; title=&quot;About document.ready&quot;&gt;www.webreflection.co.uk/blog/2016/05/10/document.ready&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promiseを返す&lt;code&gt;document.ready&lt;/code&gt;をどう実装するかという話。&lt;br&gt;
&lt;code&gt;document.readyState&lt;/code&gt;と&lt;code&gt;DOMContentLoaded&lt;/code&gt;について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ng-conf-2016---youtube&quot;&gt;ng-conf 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLOETEcp3DkCq788xapkP_OU-78jhTf68j&quot; title=&quot;ng-conf 2016 - YouTube&quot;&gt;www.youtube.com/playlist?list=PLOETEcp3DkCq788xapkP_OU-78jhTf68j&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ng-conf 2016の動画一覧&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ng-conf.org/#/&quot; title=&quot;ng-conf May 4th - 6th 2016 - The World&amp;amp;#x27;s Original Angular Conference&quot;&gt;ng-conf May 4th - 6th 2016 - The World&amp;#x27;s Original Angular Conference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-make-your-webpack-builds-10x-faster&quot;&gt;How to make your Webpack builds 10x faster&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/trueter/how-to-make-your-webpack-builds-10x-faster&quot; title=&quot;How to make your Webpack builds 10x faster&quot;&gt;www.slideshare.net/trueter/how-to-make-your-webpack-builds-10x-faster&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackのビルド速度改善についてのスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tc39/proposals:-tracking-ecmascript-proposals&quot;&gt;tc39/proposals: Tracking ECMAScript Proposals&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/proposals&quot; title=&quot;tc39/proposals: Tracking ECMAScript Proposals&quot;&gt;github.com/tc39/proposals&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptのProposalまとめリポジトリ。&lt;br&gt;
Active/InActive/Finished/Stage 0のProposalが一覧できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bublé-–-the-blazing-fast,-batteries-included-es2015-compiler&quot;&gt;Bublé – the blazing fast, batteries-included ES2015 compiler&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://buble.surge.sh/guide/&quot; title=&quot;Bublé – the blazing fast, batteries-included ES2015 compiler&quot;&gt;buble.surge.sh/guide/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;BabelのようにES2015のコードをES5に変換するツール。&lt;br&gt;
設定なしで動作し、サポートしたいブラウザバージョンを指定することで変換内容を選択できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;garbles/why-did-you-update:-puts-your-console-on-blast-when-react-is-making-unnecessary-updates.&quot;&gt;garbles/why-did-you-update: Puts your console on blast when React is making unnecessary updates.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/garbles/why-did-you-update&quot; title=&quot;garbles/why-did-you-update: Puts your console on blast when React is making unnecessary updates.&quot;&gt;github.com/garbles/why-did-you-update&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactで&lt;code&gt;props&lt;/code&gt;の中身が一致する場合にも、renderが呼ばれている事を検知してコンソールに表示するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;leo/args:-minimal-toolkit-for-building-clis&quot;&gt;leo/args: Minimal toolkit for building CLIs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/leo/args&quot; title=&quot;leo/args: Minimal toolkit for building CLIs&quot;&gt;github.com/leo/args&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;minimistを使った引数処理、ヘルプ表示、サブコマンドなどに対応したライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;florian/x18n:-a-sane-javascript-internationalisation-library&quot;&gt;florian/x18n: A sane JavaScript internationalisation library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/florian/x18n&quot; title=&quot;florian/x18n: A sane JavaScript internationalisation library&quot;&gt;github.com/florian/x18n&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;r18n gem互換記法が使えるi18nライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;documentationjs/globals-docs:-documentation-uris-for-javascript-globals.&quot;&gt;documentationjs/globals-docs: Documentation URIs for JavaScript globals.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/documentationjs/globals-docs&quot; title=&quot;documentationjs/globals-docs: Documentation URIs for JavaScript globals.&quot;&gt;github.com/documentationjs/globals-docs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Mozilla&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの型やオブジェクトを渡すと、対応するMDNのドキュメントURLを返してくれるライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 16 May 2016 19:36:00 +0900</pubDate>
        <link>http://jser.info/2016/05/16/electron-10buble/</link>
        <guid isPermaLink="true">http://jser.info/2016/05/16/electron-10buble/</guid>
        
        <category>Electron</category>
        
        <category>Chrome</category>
        
        <category>debug</category>
        
        <category>Babel</category>
        
        <category>ES2015</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-05-10のJS: Angular 2 RC、Firefox開発者ツールの新機能、クロージャーの解説</title>
        <description>&lt;p&gt;JSer.info #278 - Angular2 RC1がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/2.0.0-rc.1/CHANGELOG.md&quot;&gt;angular/CHANGELOG.md at 2.0.0-rc.1 · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;長い間betaでしたが、RCでは一つの大きな&lt;a href=&quot;https://www.npmjs.com/package/angular2&quot; title=&quot;angular2&quot;&gt;angular2&lt;/a&gt;というパッケージではなく、&lt;code&gt;@angular/core&lt;/code&gt;のようなscoped packagesに分割されています。&lt;/p&gt;

&lt;p&gt;以下の記事にどのような名前空間の変更があったのかわかりやすくまとまっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ng2-info.github.io/2016/05/09/angular-2-rc-1/&quot; title=&quot;Angular 2 RCリリースについて | Angular2 Info&quot;&gt;Angular 2 RCリリースについて | Angular2 Info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/04/developer-edition-48-firebug-features-editable-storage-inspector-improvements-and-more/&quot; title=&quot;Developer Edition 48 – Firebug features, editable storage, inspector improvements and more… ★ Mozilla Hacks – the Web developer blog&quot;&gt;Developer Edition 48 – Firebug features, editable storage, inspector improvements and more… ★ Mozilla Hacks – the Web developer blog&lt;/a&gt;という記事では&lt;a href=&quot;https://www.mozilla.org/ja/firefox/developer/&quot; title=&quot;Firefox Developer Edition&quot;&gt;Firefox Developer Edition&lt;/a&gt; 48に入った新しい開発者ツールの機能について書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.mozilla.jp/2016/05/developer-edition-48-firebug-features-editable-storage-inspector-improvements-and-more/&quot; title=&quot;Developer Edition 48 – Firebug 由来の機能、ストレージの編集、インスペクタの改良、etc | Mozilla Developer Street (modest)&quot;&gt;Developer Edition 48 – Firebug 由来の機能、ストレージの編集、インスペクタの改良、etc | Mozilla Developer Street (modest)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Firebug由来のDOMパネルが追加されたり、メモリパネルにツリーマップ表示が表示されたりデバッグに便利な機能が増えています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.freecodecamp.com/lets-learn-javascript-closures-66feb44f6a44&quot; title=&quot;Let’s Learn JavaScript Closures — Free Code Camp&quot;&gt;Let’s Learn JavaScript Closures — Free Code Camp&lt;/a&gt;という記事では&amp;quot;JavaScriptのクロージャー&amp;quot;について詳細に解説されています。&lt;/p&gt;

&lt;p&gt;ECMAScriptの仕様ではLexical EnvironmentやRealmという用語がクロージャーの仕組みに関係していますが、これらの用語にも触れながらどういう仕組みで成り立っているのかが解説されています。&lt;/p&gt;

&lt;p&gt;記事ではクロージャーのみについてですが、この仕組みがわかっているとArrow Functionが宣言しているスコープの&lt;code&gt;this&lt;/code&gt;を引き継ぐように見えるのかが、理解しやすくなるかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.4.0---2016.05.08-·-zloirock/core-js&quot;&gt;Release 2.4.0 - 2016.05.08 · zloirock/core-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases/tag/v2.4.0&quot; title=&quot;Release 2.4.0 - 2016.05.08 · zloirock/core-js&quot;&gt;github.com/zloirock/core-js/releases/tag/v2.4.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;core-js 2.4.0リリース。&lt;br&gt;
Stage 1 Proposalの&lt;code&gt;Observable&lt;/code&gt;を追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-9.0.0-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at 9.0.0 · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/9.0.0/Changelog.md&quot; title=&quot;jsdom/Changelog.md at 9.0.0 · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/9.0.0/Changelog.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;libre&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdom 9.0.0リリース。&lt;br&gt;
mutation eventsの削除し今後MutationObserverを追加する予定。&lt;br&gt;
&lt;code&gt;DOMTokenList#replace&lt;/code&gt;、&lt;code&gt;DOMTokenList#contains&lt;/code&gt;、XHRの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v6.1.0-(current)-|-node.js&quot;&gt;Node v6.1.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.1.0/&quot; title=&quot;Node v6.1.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v6.1.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node v6.1.0リリース。&lt;br&gt;
&lt;code&gt;deepEqual()/deepStrictEqual()&lt;/code&gt;が循環参照してるオブジェクトを扱えるように、&lt;code&gt;process.cpuUsage()&lt;/code&gt;の追加、&lt;code&gt;util.inspect()&lt;/code&gt;にオプションを追加するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dev.opera-—-what’s-new-in-chromium-50-and-opera-37&quot;&gt;Dev.Opera — What’s new in Chromium 50 and Opera 37&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.opera.com/blog/opera-37/&quot; title=&quot;Dev.Opera — What’s new in Chromium 50 and Opera 37&quot;&gt;dev.opera.com/blog/opera-37/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Opera&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Opera 37 (based on Chromium 50)リリース。&lt;br&gt;
&lt;code&gt;/regexp/u&lt;/code&gt;、well-known symbols、preload link、&lt;code&gt;DomTokenList#supports&lt;/code&gt;、非推奨or削除するメソッドの更新など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/03/domtokenlist-validation-added-in-chrome-50&quot; title=&quot;DOMTokenList Validation Added in Chrome 50 | Web Updates - Google Developers&quot;&gt;DOMTokenList Validation Added in Chrome 50 | Web Updates - Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular/changelog.md-at-2.0.0-rc.1-·-angular/angular&quot;&gt;angular/CHANGELOG.md at 2.0.0-rc.1 · angular/angular&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/2.0.0-rc.1/CHANGELOG.md&quot; title=&quot;angular/CHANGELOG.md at 2.0.0-rc.1 · angular/angular&quot;&gt;github.com/angular/angular/blob/2.0.0-rc.1/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Angular2 RCリリース。&lt;br&gt;
Scoped Packagesを使うように変更、Offline Compilerを使ったstaticな方式とbootstrap時に処理する方式の両方をサポート、名前空間の変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ng2-info.github.io/2016/05/09/angular-2-rc-1/&quot; title=&quot;Angular 2 RCリリースについて | Angular2 Info&quot;&gt;Angular 2 RCリリースについて | Angular2 Info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-taste-of-javascript’s-new-parallel-primitives-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;A Taste of JavaScript’s New Parallel Primitives ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/05/a-taste-of-javascripts-new-parallel-primitives/&quot; title=&quot;A Taste of JavaScript’s New Parallel Primitives ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/05/a-taste-of-javascripts-new-parallel-primitives/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SharedArrayBufferについて。&lt;br&gt;
WebWorkerでのメモリを共有した並列処理について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecmascript_sharedmem&quot; title=&quot;tc39/ecmascript\_sharedmem: Shared memory and atomics for ECMAscript&quot;&gt;tc39/ecmascript_sharedmem: Shared memory and atomics for ECMAscript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-global-css-property-usage-on-microsoft-edge-dev-|-microsoft-edge-dev-blog&quot;&gt;Introducing Global CSS Property Usage on Microsoft Edge Dev | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/04/11/css-usage-platform-data/&quot; title=&quot;Introducing Global CSS Property Usage on Microsoft Edge Dev | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2016/04/11/css-usage-platform-data/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MSEdgeとChromeでクロールしたCSSプロパティの使用率の統計情報が見れるGlobal CSS Property Usageについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/usage/&quot; title=&quot;View usage statistics and common patterns for APIs on the web platform.&quot;&gt;View usage statistics and common patterns for APIs on the web platform.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MicrosoftEdge/css-usage&quot; title=&quot;MicrosoftEdge/css-usage: This script is used within our Bing and Interop crawlers to determine the properties used on a page and generalized values that could have been used.&quot;&gt;MicrosoftEdge/css-usage: This script is used within our Bing and Interop crawlers to determine the properties used on a page and generalized values that could have been used.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developer-edition-48-–-firebug-features,-editable-storage,-inspector-improvements-and-more…-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Developer Edition 48 – Firebug features, editable storage, inspector improvements and more… ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/04/developer-edition-48-firebug-features-editable-storage-inspector-improvements-and-more/&quot; title=&quot;Developer Edition 48 – Firebug features, editable storage, inspector improvements and more… ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/04/developer-edition-48-firebug-features-editable-storage-inspector-improvements-and-more/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 48の開発者ツールについて。&lt;br&gt;
Firebug由来のDOMパネル、コンソール機能の追加、localStorageなどの編集機能、メモリ使用量の表示改善しGCされてないオブジェクトを見つけやすくなるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.mozilla.jp/2016/05/developer-edition-48-firebug-features-editable-storage-inspector-improvements-and-more/&quot; title=&quot;Developer Edition 48 – Firebug 由来の機能、ストレージの編集、インスペクタの改良、etc | Mozilla Developer Street (modest)&quot;&gt;Developer Edition 48 – Firebug 由来の機能、ストレージの編集、インスペクタの改良、etc | Mozilla Developer Street (modest)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;custom-elementsはes6のclass記法で定義可能になりそうです---qiita&quot;&gt;Custom elementsはES6のclass記法で定義可能になりそうです - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/yoichiro@github/items/fdb8372bd8a68c754dc3&quot; title=&quot;Custom elementsはES6のclass記法で定義可能になりそうです - Qiita&quot;&gt;qiita.com/yoichiro@github/items/fdb8372bd8a68c754dc3&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Custom Elementsの仕様が大幅にアップデートされて、classを継承した形で新しい要素を定義できるようになる仕様について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/webcomponents/pull/405&quot; title=&quot;Large custom element spec rewrite to implement some F2F decisions by domenic · Pull Request #405 · w3c/webcomponents&quot;&gt;Large custom element spec rewrite to implement some F2F decisions by domenic · Pull Request #405 · w3c/webcomponents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;let’s-learn-javascript-closures-—-free-code-camp&quot;&gt;Let’s Learn JavaScript Closures — Free Code Camp&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.freecodecamp.com/lets-learn-javascript-closures-66feb44f6a44&quot; title=&quot;Let’s Learn JavaScript Closures — Free Code Camp&quot;&gt;medium.freecodecamp.com/lets-learn-javascript-closures-66feb44f6a44&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのクロージャーについて詳しい解説。&lt;br&gt;
Enviroment、RealmなどのECMAScriptの言語仕様に触れながら、どのような仕組みになっているかを解説してる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;intersectionobserver’s-coming-into-view-|-web-updates---google-developers&quot;&gt;IntersectionObserver’s Coming into View | Web Updates - Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/04/intersectionobserver&quot; title=&quot;IntersectionObserver’s Coming into View | Web Updates - Google Developers&quot;&gt;developers.google.com/web/updates/2016/04/intersectionobserver&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 51で入るIntersectionObserverについての解説記事。&lt;br&gt;
要素がviewport内に表示されたら発火するイベントを設定できる。(発火するしきい値も指定できる)&lt;br&gt;
また、rootに対する&lt;code&gt;ClientRect&lt;/code&gt;の情報なども取得でき、lazyloadや無限リストなどの実装に利用できる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;forward-4-web-summit---youtube&quot;&gt;Forward 4 Web Summit - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=57MmZtd03ks&amp;amp;amp;list=PLndbWGuLoHebKI8krCzJU88Rf3TwhNZvH&amp;amp;amp;index=17&quot; title=&quot;Forward 4 Web Summit - YouTube&quot;&gt;www.youtube.com/watch?v=57MmZtd03ks&amp;amp;list=PLndbWGuLoHebKI8krCzJU88Rf3TwhNZvH&amp;amp;index=17&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Forward 4 Web Summitの動画一覧&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://forwardjs.com/&quot; title=&quot;Forward - Web Technology Summits, Workshops and Online Content&quot;&gt;Forward - Web Technology Summits, Workshops and Online Content&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;maintainablecss---an-approach-to-writing-modular,-scalable-and-maintainable-css-|-by-adam-silver&quot;&gt;MaintainableCSS - an approach to writing modular, scalable and maintainable CSS | By Adam Silver&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://maintainablecss.com/&quot; title=&quot;MaintainableCSS - an approach to writing modular, scalable and maintainable CSS | By Adam Silver&quot;&gt;maintainablecss.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;メンテナンスしやすいCSSについて書かれたサイト。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;outbrain/postit:-an-elegant-wrapper-for-postmessage&quot;&gt;outbrain/postit: An elegant wrapper for postMessage&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/outbrain/postit&quot; title=&quot;outbrain/postit: An elegant wrapper for postMessage&quot;&gt;github.com/outbrain/postit&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;postMessageのラッパーライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;twada/universal-deep-strict-equal:-a-port-of-node-v6&amp;#x27;s-internal-_deepequal-function-in-a-universal-style&quot;&gt;twada/universal-deep-strict-equal: A port of Node v6&amp;#x27;s internal _deepEqual function in a universal style&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/twada/universal-deep-strict-equal&quot; title=&quot;twada/universal-deep-strict-equal: A port of Node v6&amp;#39;s internal \_deepEqual function in a universal style&quot;&gt;github.com/twada/universal-deep-strict-equal&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ブラウザでも動作する&lt;code&gt;deepStrictEqual&lt;/code&gt;の実装ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bbc/videocontext:-an-experimental-html5-&amp;amp;-webgl-video-composition-and-rendering-api.&quot;&gt;bbc/VideoContext: An experimental HTML5 &amp;amp; WebGL video composition and rendering API.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bbc/VideoContext&quot; title=&quot;bbc/VideoContext: An experimental HTML5 &amp;amp; WebGL video composition and rendering API.&quot;&gt;github.com/bbc/VideoContext&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;API&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Audio APIのような形でVideoを処理できるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;edenspiekermann/iframify:-replace-a-node-with-an-iframe-version-of-itself&quot;&gt;edenspiekermann/iframify: Replace a node with an iframe version of itself&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/edenspiekermann/iframify&quot; title=&quot;edenspiekermann/iframify: Replace a node with an iframe version of itself&quot;&gt;github.com/edenspiekermann/iframify&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;DOM要素をiframe内に同じものを作って入れ替えるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;perflint/perflint:-perflint-is-a-tool-to-identify-unexpected-performance-levels-of-a-website&quot;&gt;perflint/perflint: Perflint is a tool to identify unexpected performance levels of a Website&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/perflint/perflint&quot; title=&quot;perflint/perflint: Perflint is a tool to identify unexpected performance levels of a Website&quot;&gt;github.com/perflint/perflint&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebPageTestのCLIフロントエンド。&lt;br&gt;
よくみるLint風の結果表示をしてくれる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;service-worker-development-cookbook,-sean-amarasinghe,-ebook---amazon.com&quot;&gt;Service Worker Development Cookbook, Sean Amarasinghe, eBook - Amazon.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Service-Worker-Development-Cookbook-Amarasinghe-ebook/dp/B01F3LATMY&quot; title=&quot;Service Worker Development Cookbook, Sean Amarasinghe, eBook - Amazon.com&quot;&gt;www.amazon.com/Service-Worker-Development-Cookbook-Amarasinghe-ebook/dp/B01F3LATMY&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年11月4日発売&lt;br&gt;
Service Workerについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 10 May 2016 22:16:00 +0900</pubDate>
        <link>http://jser.info/2016/05/10/angular2-firefox48-dev/</link>
        <guid isPermaLink="true">http://jser.info/2016/05/10/angular2-firefox48-dev/</guid>
        
        <category>Angular</category>
        
        <category>Firefox</category>
        
        <category>debug</category>
        
        <category>JavaScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-05-03のJS: Node.js 6.0.0、GitHub Fetch 1.0.0、-webkit- prefixのポリシー</title>
        <description>&lt;p&gt;JSer.info #277 - &lt;a href=&quot;https://nodejs.org/en/blog/release/v6.0.0/&quot;&gt;Node v6.0.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2016/04/27/110027&quot; title=&quot;Node.js v6.0 (Current) がリリースされました。 - from scratch&quot;&gt;Node.js v6.0 (Current) がリリースされました。 - from scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;6.xは&lt;a href=&quot;https://medium.com/@nodesource/essential-steps-long-term-support-for-node-js-8ecf7514dbd&quot; title=&quot;long term support (LTS)&quot;&gt;long term support (LTS)&lt;/a&gt;となるバージョンなので、LTSではない5.xを使っている人はアップデートが推奨されています。&lt;br&gt;
4.xはLTSなので、2017年4月までサポートされます。&lt;/p&gt;

&lt;p&gt;6.0.0では&lt;a href=&quot;https://nodejs.org/en/blog/release/v5.10.0/&quot; title=&quot;Node v5.10.0&quot;&gt;Node v5.10.0&lt;/a&gt;にもバックポートされたBuffer APIの変更や、&lt;br&gt;
&lt;a href=&quot;http://v8project.blogspot.jp/2016/03/v8-release-50.html&quot;&gt;V8 5.0&lt;/a&gt;へのアップデートにより、ES6の93％(Moduleを除く)が利用できるようになっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://fetch.spec.whatwg.org/&quot; title=&quot;Fetch API&quot;&gt;Fetch API&lt;/a&gt;のpolyfillである&lt;a href=&quot;https://github.com/github/fetch&quot; title=&quot;github/fetch&quot;&gt;github/fetch&lt;/a&gt; 1.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/github/fetch/releases/tag/v1.0.0&quot;&gt;Release Fetch 1.0.0 · github/fetch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IE9のサポートが終了され、&lt;code&gt;URLSearchParams&lt;/code&gt;のサポートの追加などがされています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6131/updating-our-prefixing-policy/&quot;&gt;Updating Our Prefixing Policy | WebKit&lt;/a&gt;という記事では、WebKit/Safariの実験的prefixに関するポリシーの変更が書かれています。&lt;/p&gt;

&lt;p&gt;詳細は以下に書かれていますが、今後は新しい機能を導入する際はChromeやFirefoxのようにランタイムフラグ制に変更されます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/feature-policy/&quot; title=&quot;Feature Policy | WebKit&quot;&gt;Feature Policy | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今まで、&lt;code&gt;-webkit-&lt;/code&gt; prefixで新機能を導入し、それがあまりにもウェブサイトで使われた結果、ブラウザの実装から&lt;code&gt;-webkit-&lt;/code&gt;を無くすとBreak the webとなる問題が多く発生していました。&lt;br&gt;
&lt;code&gt;-webkit-transform-3d&lt;/code&gt;のように&lt;a href=&quot;https://miketaylr.com/posts/2016/01/at-media-webkit-transform-three-dee.html&quot;&gt;互換仕様としてウェブ標準に&lt;code&gt;-webkit&lt;/code&gt; prefix&lt;/a&gt;が存在します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.otsukare.info/2016/01/04/webkit-resolved-fixed&quot; title=&quot;Webkit! RESOLVED FIXED - otsukare&quot;&gt;Webkit! RESOLVED FIXED - otsukare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そのため、ブラウザの設定から有効にしないと新しい機能が利用できない&lt;strong&gt;runtime flags&lt;/strong&gt;へと変更されました。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v6.0.0-(current)-|-node.js&quot;&gt;Node v6.0.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.0.0/&quot; title=&quot;Node v6.0.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v6.0.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 6.0.0(LTS)リリース。&lt;br&gt;
v8のアップデートを含むため、Native addonは&lt;code&gt;npm rebuid&lt;/code&gt;での再ビルドが必要。&lt;br&gt;
Buffer APIが新しくなり、古いAPIは非推奨へ、&lt;code&gt;worker.suicide&lt;/code&gt;は&lt;code&gt;worker.exitedAfterDisconnect&lt;/code&gt;に変更、&lt;code&gt;querystring.parse()&lt;/code&gt;が返すオブジェクトは&lt;code&gt;Object.prototype&lt;/code&gt;を継承しないようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2016/04/27/110027&quot; title=&quot;Node.js v6.0 (Current) がリリースされました。 - from scratch&quot;&gt;Node.js v6.0 (Current) がリリースされました。 - from scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-51-beta:-credential-management-api-and-reducing-the-overhead-of-offscreen-rendering&quot;&gt;Chromium Blog: Chrome 51 Beta: Credential Management API and reducing the overhead of offscreen rendering&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.chromium.org/2016/04/chrome-51-beta-credential-management.html&quot; title=&quot;Chromium Blog: Chrome 51 Beta: Credential Management API and reducing the overhead of offscreen rendering&quot;&gt;blog.chromium.org/2016/04/chrome-51-beta-credential-management.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 51 Betaリリース。&lt;br&gt;
Credential Management APIのサポート。&lt;br&gt;
offscreenの場合、crosss originのframeにおいては&lt;code&gt;requestAnimationFrame()&lt;/code&gt;が呼ばれないように、Intersection Observer 、&lt;code&gt;passive&lt;/code&gt;イベントオプション、V8 5.1へのアップデートなど。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2016/04/v8-release-51.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.1&quot;&gt;V8 JavaScript Engine: V8 Release 5.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/IntersectionObserver/blob/gh-pages/explainer.md&quot; title=&quot;IntersectionObserver/explainer.md at gh-pages · WICG/IntersectionObserver&quot;&gt;IntersectionObserver/explainer.md at gh-pages · WICG/IntersectionObserver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1Dd4qi1b_iX-OCZpelvXxizjq6dDJ76XNtk37SZEoTYQ/pub&quot; title=&quot;Throttling Blink&amp;amp;#x27;s rendering pipeline for hidden content&quot;&gt;Throttling Blink&amp;#x27;s rendering pipeline for hidden content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1jMuvRYWptZfP5zpvWmPJPRL-iowtgBVX45rSvew0VH4/edit&quot; title=&quot;Power usage impact of render pipeline throttling - Google ドキュメント&quot;&gt;Power usage impact of render pipeline throttling - Google ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.8.0-·-babel/babel&quot;&gt;Release v6.8.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.8.0&quot; title=&quot;Release v6.8.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.8.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel v6.8.0リリース。&lt;br&gt;
Babel自体がBabel 6でTranspileするようになり、runtimeが5に依存していた問題が修正された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-fetch-1.0.0-·-github/fetch&quot;&gt;Release Fetch 1.0.0 · github/fetch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/github/fetch/releases/tag/v1.0.0&quot; title=&quot;Release Fetch 1.0.0 · github/fetch&quot;&gt;github.com/github/fetch/releases/tag/v1.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;htto&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fetch APIのpolyfillであるGitHub Fetch 1.0.0リリース。&lt;br&gt;
IE9のサポートを終了、&lt;code&gt;timeout&lt;/code&gt;イベントをハンドルするように、&lt;code&gt;URLSearchParams&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.9.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.9.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/04/eslint-v2.9.0-released&quot; title=&quot;ESLint v2.9.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/04/eslint-v2.9.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint v2.9.0リリース。&lt;br&gt;
Autofix &lt;code&gt;--fix&lt;/code&gt; オプションの改善。&lt;br&gt;
今までは一度のパスで適応できないものは諦めていたが、複数回のパスで修正を適応を試みるようになった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/1d377b67465664009ad5&quot; title=&quot;ESLint v2.9.0 - Qiita&quot;&gt;ESLint v2.9.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-slimerjs-0.10.0-·-laurentj/slimerjs&quot;&gt;Release SlimerJS 0.10.0 · laurentj/slimerjs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/laurentj/slimerjs/releases/tag/0.10.0&quot; title=&quot;Release SlimerJS 0.10.0 · laurentj/slimerjs&quot;&gt;github.com/laurentj/slimerjs/releases/tag/0.10.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox版のPhantomJS APIの互換実装であるSlimerJS 0.10.0リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-3-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 3 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6143/release-notes-for-safari-technology-preview-3/&quot; title=&quot;Release Notes for Safari Technology Preview 3 | WebKit&quot;&gt;webkit.org/blog/6143/release-notes-for-safari-technology-preview-3/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 3リリース。&lt;br&gt;
&lt;code&gt;Symbol.isConcatSpreadable&lt;/code&gt;などのwell-known Symbol実装の追加、&lt;br&gt;
&lt;code&gt;:host()&lt;/code&gt;擬似クラス、IndexedDBが&lt;code&gt;Blob&lt;/code&gt;をサポート、&lt;code&gt;Crypto&lt;/code&gt;、CSP周りの仕様準拠度の向上など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;scroll-linked-effects---mozilla-|-mdn&quot;&gt;Scroll-linked effects - Mozilla | MDN&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects&quot; title=&quot;Scroll-linked effects - Mozilla | MDN&quot;&gt;developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;onscroll&lt;/code&gt;にhookして同期的に位置を変更する処理に対しては警告メッセージが出るようになった。&lt;br&gt;
その場合の対処法についてのドキュメント&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/docs/2016/scroll-linked-positioning-effects-may-not-work-well-with-async-scrolling-console-warns/&quot; title=&quot;スクロール連動位置合わせは非同期スクロールと相性が悪い場合があり、コンソールに警告が表示されます | Firefox サイト互換性情報&quot;&gt;スクロール連動位置合わせは非同期スクロールと相性が悪い場合があり、コンソールに警告が表示されます | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-vue.js-2.0-—-the-vue-point-—-medium&quot;&gt;Announcing Vue.js 2.0 — The Vue Point — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/the-vue-point/announcing-vue-js-2-0-8af1bde7ab9&quot; title=&quot;Announcing Vue.js 2.0 — The Vue Point — Medium&quot;&gt;medium.com/the-vue-point/announcing-vue-js-2-0-8af1bde7ab9&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue.js 2.0のパブリックプレビュー版リリース。&lt;br&gt;
SnabbdomベースのVirtua lDOM実装の追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/paldepind/snabbdom&quot; title=&quot;paldepind/snabbdom: A virtual DOM library with focus on simplicity, modularity, powerful features and performance.&quot;&gt;paldepind/snabbdom: A virtual DOM library with focus on simplicity, modularity, powerful features and performance.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;updating-our-prefixing-policy-|-webkit&quot;&gt;Updating Our Prefixing Policy | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6131/updating-our-prefixing-policy/&quot; title=&quot;Updating Our Prefixing Policy | WebKit&quot;&gt;webkit.org/blog/6131/updating-our-prefixing-policy/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari/WebKitは新しい機能などは今後Vendor prefixではなく、フラグのON/OFFを追加していくようにするポリシーの変更について。&lt;br&gt;
&lt;code&gt;-webkit-&lt;/code&gt; prefixがあまりに使われてしまい、後方互換性のためにprefixが標準仕様となってしまった歴史などもあるため&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/feature-policy/&quot; title=&quot;Feature Policy | WebKit&quot;&gt;Feature Policy | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-make-your-react-apps-15x-faster-–-reactjs-news&quot;&gt;How to Make Your React Apps 15x Faster – ReactJS News&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactjsnews.com/how-to-make-your-react-apps-10x-faster&quot; title=&quot;How to Make Your React Apps 15x Faster – ReactJS News&quot;&gt;reactjsnews.com/how-to-make-your-react-apps-10x-faster&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設定&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactはデバッグ向けのコードが大量に入っているため、production(&lt;code&gt;NODE_ENV=production&lt;/code&gt;)ビルドや機械的に最適化できるBabelプラグインを導入するだけでも速度が大分変わるという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/thejameskyle/babel-react-optimize&quot; title=&quot;thejameskyle/babel-react-optimize: A Babel preset and plugins for optimizing React code.&quot;&gt;thejameskyle/babel-react-optimize: A Babel preset and plugins for optimizing React code.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-es6,-es7,-and-beyond&quot;&gt;V8 JavaScript Engine: ES6, ES7, and beyond&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/04/es6-es7-and-beyond.html&quot; title=&quot;V8 JavaScript Engine: ES6, ES7, and beyond&quot;&gt;v8project.blogspot.com/2016/04/es6-es7-and-beyond.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8が既存のウェブとの互換性を持ちつつ次期ECMAScriptの仕様を実装しているかのプロセスについて。&lt;br&gt;
ES6の実装が完了する前にドラフトバージョンを実装することで見つけられる後方互換性の問題がある話。&lt;br&gt;
またECMAScriptという複雑な言語仕様のtest suiteであるtest262について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;npmで同じライブラリの複数バージョンをインストールして使う方法-|-web-scratch&quot;&gt;npmで同じライブラリの複数バージョンをインストールして使う方法 | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/05/02/npm-package-mixed-multiple-versions-demo/&quot; title=&quot;npmで同じライブラリの複数バージョンをインストールして使う方法 | Web Scratch&quot;&gt;efcl.info/2016/05/02/npm-package-mixed-multiple-versions-demo/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tips&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;一つのプロジェクト内に同名ライブラリの複数バージョンをインストールして扱う方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-look-at-es6-maps---barbarian-meets-coding&quot;&gt;A look at ES6 Maps - Barbarian Meets Coding&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.barbarianmeetscoding.com/blog/2016/04/27/a-look-at-es6-maps&quot; title=&quot;A look at ES6 Maps - Barbarian Meets Coding&quot;&gt;www.barbarianmeetscoding.com/blog/2016/04/27/a-look-at-es6-maps&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6 Mapについての解説。&lt;br&gt;
データ構造としてのMap、Iterableについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;turbocharged-javascript-refactoring-with-codemods-—-airbnb-engineering-&amp;amp;-data-science-—-medium&quot;&gt;Turbocharged JavaScript refactoring with codemods — Airbnb Engineering &amp;amp; Data Science — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/airbnb-engineering/turbocharged-javascript-refactoring-with-codemods-b0cae8b326b9&quot; title=&quot;Turbocharged JavaScript refactoring with codemods — Airbnb Engineering &amp;amp; Data Science — Medium&quot;&gt;medium.com/airbnb-engineering/turbocharged-javascript-refactoring-with-codemods-b0cae8b326b9&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;codemodを使ったリファクタリングについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;almin.js-|-javascriptアーキテクチャ&quot;&gt;Almin.js | JavaScriptアーキテクチャ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://azu.github.io/slide/2016/child_process_sushi/almin-javascript-architecture.html&quot; title=&quot;Almin.js | JavaScriptアーキテクチャ&quot;&gt;azu.github.io/slide/2016/child_process_sushi/almin-javascript-architecture.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/almin/almin&quot; title=&quot;Almin.js&quot;&gt;Almin.js&lt;/a&gt;の設計の概念的な話やパターンについて。&lt;br&gt;
FluxやCQRSといったパターンにおいて、ドメインモデルをどうやったら考えて実装できるようになるかという話。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;diffee-checker&quot;&gt;Diffee Checker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://una.im/diffee/&quot; title=&quot;Diffee Checker&quot;&gt;una.im/diffee/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS blend modesを使いiframe同士の描画結果の差分を表示するデモ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;galooshi/import-js:-a-tool-to-simplify-importing-js-modules&quot;&gt;Galooshi/import-js: A tool to simplify importing JS modules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Galooshi/import-js&quot; title=&quot;Galooshi/import-js: A tool to simplify importing JS modules&quot;&gt;github.com/Galooshi/import-js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;指定した関数名から、該当するモジュールのimport文を自動的に探索して追加できるツール。&lt;br&gt;
各種エディタ連携などもある&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ericholiveira/studio:-a-nodejs-framework-to-create-decoupled-and-scalable-applications&quot;&gt;ericholiveira/studio: A nodejs framework to create decoupled and scalable applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ericholiveira/studio&quot; title=&quot;ericholiveira/studio: A nodejs framework to create decoupled and scalable applications&quot;&gt;github.com/ericholiveira/studio&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ActorモデルインスパイアなNode.jsのフレームワーク&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flickr/yakbak:-record-and-playback-http-responses&quot;&gt;flickr/yakbak: Record and playback HTTP responses&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/flickr/yakbak&quot; title=&quot;flickr/yakbak: Record and playback HTTP responses&quot;&gt;github.com/flickr/yakbak&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ProxyとしてHTTPリクエストとレスポンスを記録し、リプレイしたレスポンスを返すことができるNode.jsライブラリ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://code.flickr.net/2016/04/25/introducing-yakbak-record-and-playback-http-interactions-in-nodejs/&quot; title=&quot;Introducing yakbak: Record and playback HTTP interactions in NodeJS | code.flickr.com&quot;&gt;Introducing yakbak: Record and playback HTTP interactions in NodeJS | code.flickr.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jeromeetienne/babel-plugin-jsdoced:-babel-plugin-which-use-jsdoc-to-implement-strong-typing-in-javascript&quot;&gt;jeromeetienne/babel-plugin-jsdoced: babel plugin which use jsdoc to implement strong typing in javascript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jeromeetienne/babel-plugin-jsdoced&quot; title=&quot;jeromeetienne/babel-plugin-jsdoced: babel plugin which use jsdoc to implement strong typing in javascript&quot;&gt;github.com/jeromeetienne/babel-plugin-jsdoced&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JSDoc&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdoced.jsを使いJSDocからランタイムassertを追加するBabelプラグイン。&lt;br&gt;
jsdoc-to-assertと似てるが、返り値のチェックやProxy APIを使ってプロパティの代入もチェックしている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jsdocedjs.org/&quot; title=&quot;jsdoced.js - test your code with jsdoc&quot;&gt;jsdoced.js - test your code with jsdoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2016/03/25/jsdoc-to-assert/&quot; title=&quot;JSDocをランタイムassertに変換するBabelプラグインを書いた | Web Scratch&quot;&gt;JSDocをランタイムassertに変換するBabelプラグインを書いた | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 03 May 2016 22:50:00 +0900</pubDate>
        <link>http://jser.info/2016/05/03/nodejs-600github-fetch-100-webkit-prefix/</link>
        <guid isPermaLink="true">http://jser.info/2016/05/03/nodejs-600github-fetch-100-webkit-prefix/</guid>
        
        <category>Node.js</category>
        
        <category>Fetch</category>
        
        <category>WebKit</category>
        
        <category>polyfill</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-04-26のJS: core-js 2.3.0、addEventListenerの第3引数、ウェブ関連仕様の翻訳</title>
        <description>&lt;p&gt;JSer.info #276 - &lt;a href=&quot;https://babeljs.io/docs/plugins/transform-runtime/&quot;&gt;Babelのruntime&lt;/a&gt;でも利用されているcore-js 2.3.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases/tag/v2.3.0&quot; title=&quot;Release 2.3.0 - 2016.04.24 · zloirock/core-js&quot;&gt;Release 2.3.0 - 2016.04.24 · zloirock/core-js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;3月にあったTC39のミーティング内容を反映した変更が多く、ProposalのStageの移動などが中心です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/tc39-notes/tree/master/es7/2016-03&quot; title=&quot;tc39-notes/es7/2016-03 at master · rwaldron/tc39-notes&quot;&gt;tc39-notes/es7/2016-03 at master · rwaldron/tc39-notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.webreflection.co.uk/blog/2016/04/17/new-dom4-standards&quot; title=&quot;DOM Listener: capture, passive, and once&quot;&gt;DOM Listener: capture, passive, and once&lt;/a&gt;という記事では、最近WHATWG HTMLに追加された &lt;code&gt;node.addEventListener(type, handler, {capture: true}&lt;/code&gt; などの第三引数である&lt;code&gt;EventListenerOptions&lt;/code&gt;について解説されています。&lt;/p&gt;

&lt;p&gt;仕様や実装状況については以下を参照するのが良いと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/feature/5718574840676352&quot; title=&quot;addEventListener/removeEventListener EventListenerOptions API - Chrome Platform Status&quot;&gt;addEventListener/removeEventListener EventListenerOptions API - Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WICG/EventListenerOptions&quot; title=&quot;WICG/EventListenerOptions: An extension to the DOM event pattern to allow authors to disable support for preventDefault&quot;&gt;WICG/EventListenerOptions: An extension to the DOM event pattern to allow authors to disable support for preventDefault&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まだ、仕様も議論中ではあるようでですが、Chromeには一部実装されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.chromium.org/p/chromium/issues/detail?id=543685&quot; title=&quot;Issue 543685 - chromium - Implement addEventListener(type, listener, EventListenerOptions); - Monorail&quot;&gt;Issue 543685 - chromium - Implement addEventListener(type, listener, EventListenerOptions); - Monorail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;上記のような &lt;code&gt;addEventListener&lt;/code&gt; といった既存のDOM APIに対する変更はWHATWGの方に大抵追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://takenspc.hatenablog.com/entry/2015/12/03/235927&quot; title=&quot;WHATWG版とW3C版がある仕様たち - Unreviewed&quot;&gt;WHATWG版とW3C版がある仕様たち - Unreviewed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;今もHTMLの仕様に関して&lt;a href=&quot;http://momdo.hatenablog.jp/entry/20160415/1460722489&quot;&gt;ゴタゴタ&lt;/a&gt;がありますが…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そうした&lt;a href=&quot;https://github.com/whatwg/&quot; title=&quot;WHATWG&quot;&gt;WHATWG&lt;/a&gt;にあるLiving Standardな仕様を多く翻訳している&lt;a href=&quot;http://www.hcn.zaq.ne.jp/___/WEB/&quot;&gt;www.hcn.zaq.ne.jp/___/WEB/&lt;/a&gt;がGitHubに移行しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://triple-underscore.github.io/&quot; title=&quot;ウェブ関連仕様 日本語訳&quot;&gt;ウェブ関連仕様 日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、WHATWGの一部仕様では本家から翻訳へのリンクが追加されるようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/triple-underscore/triple-underscore.github.io/issues/1&quot; title=&quot;WHATWG translations · Issue #1 · triple-underscore/triple-underscore.github.io&quot;&gt;WHATWG translations · Issue #1 · triple-underscore/triple-underscore.github.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;同様のLiving Standardの仕様書の翻訳としては、&lt;a href=&quot;https://twitter.com/momdo_&quot; title=&quot;@momdo_&quot;&gt;@momdo_&lt;/a&gt;さんがやっている&lt;a href=&quot;https://momdo.github.io/html/&quot; title=&quot;HTML Standard 日本語訳&quot;&gt;HTML Standard 日本語訳&lt;/a&gt;があります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://momdo.github.io/html/&quot; title=&quot;HTML Standard 日本語訳&quot;&gt;HTML Standard 日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/momdo/momdo.github.io/wiki/html&quot; title=&quot;html · momdo/momdo.github.io Wiki&quot;&gt;html · momdo/momdo.github.io Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WHATWG Living Standardというだけあって&lt;a href=&quot;https://github.com/whatwg/html/commits/master&quot;&gt;常に更新されている&lt;/a&gt;ので、本当に最新を参照したい場合は本家を見るべきですが、まとめて読みたい場合などは翻訳も参照してみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-release:-2.9.2&quot;&gt;New Release: 2.9.2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jshint.com/blog/2016-04-19/release-2-9-2/&quot; title=&quot;New Release: 2.9.2&quot;&gt;jshint.com/blog/2016-04-19/release-2-9-2/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSHint 2.9.2リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3.5.0-·-reactjs/redux&quot;&gt;Release v3.5.0 · reactjs/redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reactjs/redux/releases/tag/v3.5.0&quot; title=&quot;Release v3.5.0 · reactjs/redux&quot;&gt;github.com/reactjs/redux/releases/tag/v3.5.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Redux 3.5.0リリース&lt;br&gt;
ES.nextのStage 1 Proposalであるes obvervableに対応。&lt;br&gt;
&lt;code&gt;Symbol.observable&lt;/code&gt;を実装を追加&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.3.0---2016.04.24-·-zloirock/core-js&quot;&gt;Release 2.3.0 - 2016.04.24 · zloirock/core-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases/tag/v2.3.0&quot; title=&quot;Release 2.3.0 - 2016.04.24 · zloirock/core-js&quot;&gt;github.com/zloirock/core-js/releases/tag/v2.3.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;core-js 2.3.0リリース。&lt;br&gt;
&lt;code&gt;global.asap&lt;/code&gt;、&lt;code&gt;Symbol.asyncIterator&lt;/code&gt;、&lt;code&gt;Symbol.observable&lt;/code&gt;の追加。&lt;br&gt;
&lt;code&gt;Map#toJSON&lt;/code&gt;、&lt;code&gt;Set#toJSON&lt;/code&gt;、&lt;code&gt;Error.isError&lt;/code&gt;の削除など。TC39ミーティング内容の反映が中心&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/tc39-notes/tree/master/es7/2016-03&quot; title=&quot;tc39-notes/es7/2016-03 at master · rwaldron/tc39-notes&quot;&gt;tc39-notes/es7/2016-03 at master · rwaldron/tc39-notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-5.1&quot;&gt;V8 JavaScript Engine: V8 Release 5.1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/04/v8-release-51.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.1&quot;&gt;v8project.blogspot.com/2016/04/v8-release-51.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8 5.1リリース。&lt;br&gt;
&lt;code&gt;Symbol.species&lt;/code&gt;、&lt;code&gt;Symbol.hasInstance&lt;/code&gt;、 Function nameの仕様追従、パフォーマンス/メモリ使用量の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-version-2.0.0-·-chartjs/chart.js&quot;&gt;Release Version 2.0.0 · chartjs/Chart.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/chartjs/Chart.js/releases/tag/v2.0.0&quot; title=&quot;Release Version 2.0.0 · chartjs/Chart.js&quot;&gt;github.com/chartjs/Chart.js/releases/tag/v2.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;グラフ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Canvasを使ったグラフライブラリのChart.js 2.0.0リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dom-listener:-capture,-passive,-and-once&quot;&gt;DOM Listener: capture, passive, and once&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.webreflection.co.uk/blog/2016/04/17/new-dom4-standards&quot; title=&quot;DOM Listener: capture, passive, and once&quot;&gt;www.webreflection.co.uk/blog/2016/04/17/new-dom4-standards&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;node.addEventListener(type, handler, EventListenerOptions)&lt;/code&gt; 第三引数に追加された&lt;code&gt;EventListenerOptions&lt;/code&gt;について。&lt;br&gt;
&lt;code&gt;passive&lt;/code&gt;と&lt;code&gt;capture&lt;/code&gt;の解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-do-i-update-to-gulp-4?---liquid-light&quot;&gt;How do I update to Gulp 4? - Liquid Light&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.liquidlight.co.uk/blog/article/how-do-i-update-to-gulp-4/&quot; title=&quot;How do I update to Gulp 4? - Liquid Light&quot;&gt;www.liquidlight.co.uk/blog/article/how-do-i-update-to-gulp-4/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;gulp&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;まだリリースはされてないが、gulp 4へのアップデートについて&lt;br&gt;
どのようにアップデートすればいいかが書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stylelint-|-css-tricks&quot;&gt;Stylelint | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/stylelint/&quot; title=&quot;Stylelint | CSS-Tricks&quot;&gt;css-tricks.com/stylelint/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSのLintツールであるStylelintについて。&lt;br&gt;
エディタとの連携、PostCSS、stylefmtについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;emilbjorklund/svg-weirdness:-a-repository-of-bugs-and-plain-weird-behavior-in-svg&quot;&gt;emilbjorklund/svg-weirdness: A repository of bugs and plain weird behavior in SVG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/emilbjorklund/svg-weirdness&quot; title=&quot;emilbjorklund/svg-weirdness: A repository of bugs and plain weird behavior in SVG&quot;&gt;github.com/emilbjorklund/svg-weirdness&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SVGのバグを集めたリポジトリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;中級者向け-service-worker-tutorial-|-blog.jxck.io&quot;&gt;中級者向け Service Worker Tutorial | blog.jxck.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2016-04-24/service-worker-tutorial.html&quot; title=&quot;中級者向け Service Worker Tutorial | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2016-04-24/service-worker-tutorial.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ServiceWorkerを使って開発する際に出てくる問題や挙動について解説しているスクリーンキャスト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;emberconf-2016---youtube&quot;&gt;EmberConf 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL4eq2DPpyBblc8aQAd516-jGMdAhEeUiW&quot; title=&quot;EmberConf 2016 - YouTube&quot;&gt;www.youtube.com/playlist?list=PL4eq2DPpyBblc8aQAd516-jGMdAhEeUiW&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;EmberConf 2016の動画まとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://emberconf.com/&quot; title=&quot;EmberConf 2016 - March 29 &amp;amp;amp; 30, Portland, OR.&quot;&gt;EmberConf 2016 - March 29 &amp;amp; 30, Portland, OR.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dev.opera-—-front-end-performance:-the-dark-side&quot;&gt;Dev.Opera — Front-End Performance: The Dark Side&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.opera.com/blog/timing-attacks/&quot; title=&quot;Dev.Opera — Front-End Performance: The Dark Side&quot;&gt;dev.opera.com/blog/timing-attacks/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;フロントエンドのパフォーマンスについての動画&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flexbox-patterns&quot;&gt;Flexbox Patterns&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.flexboxpatterns.com/home&quot; title=&quot;Flexbox Patterns&quot;&gt;www.flexboxpatterns.com/home&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Flexboxのパターン集&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ウェブ関連仕様-日本語訳&quot;&gt;ウェブ関連仕様 日本語訳&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://triple-underscore.github.io/&quot; title=&quot;ウェブ関連仕様 日本語訳&quot;&gt;triple-underscore.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WHATWGやW3Cなどの仕様書を翻訳しているサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;はじめてのプログレッシブ-ウェブアプリ&quot;&gt;はじめてのプログレッシブ ウェブアプリ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codelabs.developers.google.com/codelabs/your-first-pwapp-ja/&quot; title=&quot;はじめてのプログレッシブ ウェブアプリ&quot;&gt;codelabs.developers.google.com/codelabs/your-first-pwapp-ja/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ProgressiveWebApp&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;プログレッシブウェブアプリについて学ぶチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;evcohen/eslint-plugin-jsx-a11y:-static-ast-checker-for-a11y-rules-on-jsx-elements.&quot;&gt;evcohen/eslint-plugin-jsx-a11y: Static AST checker for a11y rules on JSX elements.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/evcohen/eslint-plugin-jsx-a11y&quot; title=&quot;evcohen/eslint-plugin-jsx-a11y: Static AST checker for a11y rules on JSX elements.&quot;&gt;github.com/evcohen/eslint-plugin-jsx-a11y&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSX要素のアクセシビリティをチェックするESLintルール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;victorbjelkholm/autochecker:-test-your-javascript-modules-simultaneously-in-32-different-versions-of-nodejs&quot;&gt;VictorBjelkholm/autochecker: Test your JavaScript modules simultaneously in 32 different versions of NodeJS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/VictorBjelkholm/autochecker&quot; title=&quot;VictorBjelkholm/autochecker: Test your JavaScript modules simultaneously in 32 different versions of NodeJS&quot;&gt;github.com/VictorBjelkholm/autochecker&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsの複数のバージョンでテストするツール。 matrix test&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;staltz/xstream:-an-extremely-intuitive,-small,-and-fast-functional-reactive-stream-library-for-javascript&quot;&gt;staltz/xstream: An extremely intuitive, small, and fast functional reactive stream library for JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/staltz/xstream&quot; title=&quot;staltz/xstream: An extremely intuitive, small, and fast functional reactive stream library for JavaScript&quot;&gt;github.com/staltz/xstream&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Hot onlyなRxJSライクなStreamライブラリ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://staltz.com/why-we-built-xstream.html&quot; title=&quot;André Staltz - Why we built xstream&quot;&gt;André Staltz - Why we built xstream&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jonathanewerner/webpack-validator:-validates-your-webpack-config-with-joi&quot;&gt;jonathanewerner/webpack-validator: Validates your webpack config with Joi&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jonathanewerner/webpack-validator&quot; title=&quot;jonathanewerner/webpack-validator: Validates your webpack config with Joi&quot;&gt;github.com/jonathanewerner/webpack-validator&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackの設定ファイルのバリデーションツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack/memory-fs:-a-simple-in-memory-filesystem.-holds-data-in-a-javascript-object.&quot;&gt;webpack/memory-fs: A simple in-memory filesystem. Holds data in a javascript object.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/memory-fs&quot; title=&quot;webpack/memory-fs: A simple in-memory filesystem. Holds data in a javascript object.&quot;&gt;github.com/webpack/memory-fs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;memory上で読み書きするfsモジュール&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 26 Apr 2016 20:25:00 +0900</pubDate>
        <link>http://jser.info/2016/04/26/core-js-230addeventlistener3/</link>
        <guid isPermaLink="true">http://jser.info/2016/04/26/core-js-230addeventlistener3/</guid>
        
        <category>ECMAScript</category>
        
        <category>DOM</category>
        
        <category>W3C</category>
        
        <category>WHATWG</category>
        
        <category>Spec</category>
        
        <category>Translation</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-04-18のJS: JSCS 3.0とESLintへのマージ、SVG アイコン</title>
        <description>&lt;p&gt;JSer.info #275 - JavaScriptのコードスタイルチェッカーであるJSCS 3.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jscs-dev/node-jscs/releases/tag/v3.0.0&quot; title=&quot;Release 3.0.0 · jscs-dev/node-jscs&quot;&gt;Release 3.0.0 · jscs-dev/node-jscs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;プラグイン開発者向けの非互換性がありますが、他は&lt;code&gt;yandex&lt;/code&gt; presetの削除、ルールの追加となっています。&lt;/p&gt;

&lt;p&gt;また、JSCSは3.xで新規開発が終了し、JSCSチームはESLintチームに入るようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@markelog/jscs-end-of-the-line-bc9bf0b3fdb2&quot;&gt;JSCS — end of the line — Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/blog/2016/04/welcoming-jscs-to-eslint&quot; title=&quot;Welcoming JSCS To ESLint - ESLint - Pluggable JavaScript linter&quot;&gt;Welcoming JSCS To ESLint - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今後三ヶ月を目処にJSCSのバグ修正なども終了し、その間に、&lt;a href=&quot;https://github.com/eslint/eslint/milestones/JSCS%20Compatibility&quot;&gt;ESLintにはJSCS互換/移行のサポート&lt;/a&gt;を用意していく予定となっています。&lt;br&gt;
(そのため、JSCSからESLintに移行する場合は少し待ったほうがいいかもしれません)&lt;/p&gt;

&lt;p&gt;JSCSチームがESLintに入った理由として、コミュニティ/Issueの管理コストや&lt;a href=&quot;https://github.com/cst/cst&quot; title=&quot;CST&quot;&gt;CST&lt;/a&gt;の開発に注力したかったなどが挙げられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://habrahabr.ru/post/281635/&quot; title=&quot;JSCS, CST и новое начало / Хабрахабр&quot;&gt;JSCS, CST и новое начало / Хабрахабр&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、同じ問題を解決するツールであったり、ESLintが今後AutoFix機能を改善していきたいというのも一つの理由なのかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/5329&quot; title=&quot;Fixing autofix · Issue #5329 · eslint/eslint&quot;&gt;Fixing autofix · Issue #5329 · eslint/eslint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://fvsch.com/code/svg-icons/how-to/&quot; title=&quot;How to work with SVG icons&quot;&gt;How to work with SVG icons&lt;/a&gt;という記事ではSVGアイコンについてかなり詳しく解説されています。&lt;/p&gt;

&lt;p&gt;SVG spriteの仕組みや作り方、ブラウザ間の動作の違い、CSSからSVGのスタイルを変更する方法など実践的な内容が書かれていて面白いです。&lt;br&gt;
また、インラインSVGと外部リソースのSVGの動作の違いやブラウザの挙動など、実際に使うとハマるであろう部分も補完されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-2-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 2 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6098/release-notes-for-safari-technology-preview-release-2/&quot; title=&quot;Release Notes for Safari Technology Preview 2 | WebKit&quot;&gt;webkit.org/blog/6098/release-notes-for-safari-technology-preview-release-2/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 2リリース。&lt;br&gt;
&lt;code&gt;String#padStart&lt;/code&gt;/&lt;code&gt;String#padEnd&lt;/code&gt;/の追加、&lt;code&gt;for (var i = 20 in b){ }&lt;/code&gt;がエラーとなるように。&lt;br&gt;
CSS media queryで&lt;code&gt;color-gamut&lt;/code&gt;の対応、TP1で間違って公開されてたFetch APIをデフォルトでは無効に、Web Inspectorの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.8.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.8.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/04/eslint-v2.8.0-released&quot; title=&quot;ESLint v2.8.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/04/eslint-v2.8.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint v2.8.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/8e7ca6f6ae402a494a6b&quot; title=&quot;ESLint v2.8.0 - Qiita&quot;&gt;ESLint v2.8.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-3.0.0-·-jscs-dev/node-jscs&quot;&gt;Release 3.0.0 · jscs-dev/node-jscs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jscs-dev/node-jscs/releases/tag/v3.0.0&quot; title=&quot;Release 3.0.0 · jscs-dev/node-jscs&quot;&gt;github.com/jscs-dev/node-jscs/releases/tag/v3.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSCS 3.0.0リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jest-11.0-·-jest&quot;&gt;Jest 11.0 · Jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/jest/blog/2016/04/12/jest-11.html&quot; title=&quot;Jest 11.0 · Jest&quot;&gt;facebook.github.io/jest/blog/2016/04/12/jest-11.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Jest 11.0リリース。&lt;br&gt;
0.10から11.0へのメジャーアップデート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.23.0-·-facebook/flow&quot;&gt;Release v0.23.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.23.0&quot; title=&quot;Release v0.23.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.23.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Flow v0.23.0リリース。&lt;br&gt;
&lt;code&gt;flow init&lt;/code&gt;で&lt;code&gt;.flowconfig&lt;/code&gt;を作る時のオプション追加やコメントを書けるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;welcoming-jscs-to-eslint---eslint---pluggable-javascript-linter&quot;&gt;Welcoming JSCS To ESLint - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/04/welcoming-jscs-to-eslint&quot; title=&quot;Welcoming JSCS To ESLint - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/04/welcoming-jscs-to-eslint&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSCS 3.0.0で新規開発は終了し、3ヶ月を目処にサポートも終了する。&lt;br&gt;
JSCSチームはESLintに入り、ESLintのAutofixを動かすためにも必要なCSTの開発を行う。&lt;br&gt;
ESLint側はJSCSからの移行/互換のサポートを予定している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/blog/2016/04/welcoming-jscs-to-eslint&quot; title=&quot;Welcoming JSCS To ESLint - ESLint - Pluggable JavaScript linter&quot;&gt;Welcoming JSCS To ESLint - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://habrahabr.ru/post/281635/&quot; title=&quot;JSCS, CST и новое начало / Хабрахабр&quot;&gt;JSCS, CST и новое начало / Хабрахабр&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-work-with-svg-icons&quot;&gt;How to work with SVG icons&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://fvsch.com/code/svg-icons/how-to/&quot; title=&quot;How to work with SVG icons&quot;&gt;fvsch.com/code/svg-icons/how-to/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;画像&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SVGアイコンについての実践的な解説。&lt;br&gt;
CSSスプライトのようにSVGスプライトを使う方法、インラインSVGと外部SVGを読み込み違いや対応ブラウザ/polyfillについてなど。&lt;br&gt;
またCSSからSVGのスタイルを変更する方法やSafariの問題などかなり詳細にまとまっている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-@apply-rule-(native-css-mixins)&quot;&gt;CSS @apply rule (native CSS mixins)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.gospodarets.com/css_apply_rule&quot; title=&quot;CSS @apply rule (native CSS mixins)&quot;&gt;blog.gospodarets.com/css_apply_rule&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSの&lt;code&gt;@aaply&lt;/code&gt; Proposalについての解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;power-assert-+-babel-as-a-development-tool-|-web-scratch&quot;&gt;power-assert + babel as a development tool | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/04/14/espower-babel-is-deprecated/&quot; title=&quot;power-assert + babel as a development tool | Web Scratch&quot;&gt;efcl.info/2016/04/14/espower-babel-is-deprecated/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;power-assert+babel+mochaの構成について。&lt;br&gt;
デバッグビルド時は情報量の多いassert、プロダクションビルド時はassertを取り除き、JSDocからランタイムassertをしてチェックする話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;christianalfoni---rxjs-the-smartest-dumbest-tool-ever&quot;&gt;christianalfoni - RxJs the smartest dumbest tool ever&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.christianalfoni.com/articles/2016_03_31_RxJs-the-smartest-dumbest-tool-ever&quot; title=&quot;christianalfoni - RxJs the smartest dumbest tool ever&quot;&gt;www.christianalfoni.com/articles/2016_03_31_RxJs-the-smartest-dumbest-tool-ever&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;RxJSはどのような問題を解決するのかという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;scalable-single-page-application-architecture-–-minko-gechev&amp;#x27;s-blog&quot;&gt;Scalable Single-Page Application Architecture – Minko Gechev&amp;#x27;s blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.mgechev.com/2016/04/10/scalable-javascript-single-page-app-angular2-application-architecture/&quot; title=&quot;Scalable Single-Page Application Architecture – Minko Gechev&amp;#39;s blog&quot;&gt;blog.mgechev.com/2016/04/10/scalable-javascript-single-page-app-angular2-application-architecture/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS2 + RxJSでCQRS+EventSourcing的なアプローチ。 DIでの依存解決、レイヤー間の隔離やasync serviceの動きが面白い。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;immutability-is-not-enough&quot;&gt;Immutability is not enough&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codewords.recurse.com/issues/six/immutability-is-not-enough&quot; title=&quot;Immutability is not enough&quot;&gt;codewords.recurse.com/issues/six/immutability-is-not-enough&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Immutable.jsを使ったStateの更新について。&lt;br&gt;
単純にStateをimmutableにして、単純に関数を逐次的に適応すると、前のStateを参照しない問題が起こりえる。&lt;br&gt;
また“lost update”の問題について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-storybookを用いたreactコンポーネント開発---hatena-developer-blog&quot;&gt;react-storybookを用いたReactコンポーネント開発 - Hatena Developer Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.hatenastaff.com/entry/2016/04/14/150000&quot; title=&quot;react-storybookを用いたReactコンポーネント開発 - Hatena Developer Blog&quot;&gt;developer.hatenastaff.com/entry/2016/04/14/150000&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentをストーリーにもとづき確認できるスタイルガイド的なreact-storybookについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;leveling-up-with-react:-redux-|-css-tricks&quot;&gt;Leveling Up with React: Redux | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/learning-react-redux/&quot; title=&quot;Leveling Up with React: Redux | CSS-Tricks&quot;&gt;css-tricks.com/learning-react-redux/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reduxにおけるデータフローなどをわかりやすく解説したチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;coffeescriptからes2015(es6)へ移行しました---ペパボテックブログ&quot;&gt;CoffeeScriptからES2015(ES6)へ移行しました - ペパボテックブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.pepabo.com/2016/04/13/coffeescript-transpiled-es/&quot; title=&quot;CoffeeScriptからES2015(ES6)へ移行しました - ペパボテックブログ&quot;&gt;tech.pepabo.com/2016/04/13/coffeescript-transpiled-es/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CoffeeScriptをdecafを使って変換し、JavaScriptに移行する話。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;【意訳】webpackの混乱ポイント---qiita&quot;&gt;【意訳】Webpackの混乱ポイント - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/chuck0523/items/caacbf4137642cb175ec&quot; title=&quot;【意訳】Webpackの混乱ポイント - Qiita&quot;&gt;qiita.com/chuck0523/items/caacbf4137642cb175ec&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&amp;quot;Webpack — The Confusing Parts&amp;quot;の翻訳。&lt;br&gt;
webpackの設定において混乱しやすいことについてまとめられている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;let&amp;#x27;s-learn-es6&quot;&gt;Let&amp;#x27;s Learn ES6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://letslearnes6.com/&quot; title=&quot;Let&amp;#39;s Learn ES6&quot;&gt;letslearnes6.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6について学ぶ動画シリーズのサイト&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL57atfCFqj2h5fpdZD-doGEIs0NZxeJTX&quot; title=&quot;Let&amp;amp;#x27;s Learn ES6 - YouTube&quot;&gt;Let&amp;#x27;s Learn ES6 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;makeitopen.com---open-source-learning&quot;&gt;Makeitopen.com - Open Source Learning&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://makeitopen.com/&quot; title=&quot;Makeitopen.com - Open Source Learning&quot;&gt;makeitopen.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React NativeでF8のアプリをどのように作っていったかの話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rich-harris-/-buble-·-gitlab&quot;&gt;Rich Harris / buble · GitLab&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gitlab.com/Rich-Harris/buble&quot; title=&quot;Rich Harris / buble · GitLab&quot;&gt;gitlab.com/Rich-Harris/buble&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;BabelのようなES2015のコードをES5に変換するツール。&lt;br&gt;
Babelのような拡張性や仕様への準拠よりも、変換速度を重視した作りになっている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thejameskyle/babel-react-optimize:-a-babel-preset-and-plugins-for-optimizing-react-code.&quot;&gt;thejameskyle/babel-react-optimize: A Babel preset and plugins for optimizing React code.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thejameskyle/babel-react-optimize&quot; title=&quot;thejameskyle/babel-react-optimize: A Babel preset and plugins for optimizing React code.&quot;&gt;github.com/thejameskyle/babel-react-optimize&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React(JSX)の最適化をするBabelプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;our-justified-layout-goes-open-source-|-code.flickr.com&quot;&gt;Our Justified Layout Goes Open Source | code.flickr.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://code.flickr.net/2016/04/05/our-justified-layout-goes-open-source/&quot; title=&quot;Our Justified Layout Goes Open Source | code.flickr.com&quot;&gt;code.flickr.net/2016/04/05/our-justified-layout-goes-open-source/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Flickerの画像をタイル的に敷き詰めるUIライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 18 Apr 2016 19:42:00 +0900</pubDate>
        <link>http://jser.info/2016/04/18/jscs-30eslintsvg/</link>
        <guid isPermaLink="true">http://jser.info/2016/04/18/jscs-30eslintsvg/</guid>
        
        <category>JSCS</category>
        
        <category>ESLint</category>
        
        <category>SVG</category>
        
        <category>CSS</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-04-11のJS: Grunt 1.0.0、React 15.0、ツールで学ぶJavaScript</title>
        <description>&lt;p&gt;JSer.info #274 - Grunt 1.0.0が正式リリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gruntjs.com/blog/2016-04-04-grunt-1.0.0-released&quot; title=&quot;Grunt 1.0.0 released - Grunt: The JavaScript Task Runner&quot;&gt;Grunt 1.0.0 released - Grunt: The JavaScript Task Runner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.publickey1.jp/blog/16/javascriptgrunt_1002.html&quot; title=&quot;JavaScript作業自動化ツール「Grunt 1.0.0」が登場。約2年もの開発停滞から復活 － Publickey&quot;&gt;JavaScript作業自動化ツール「Grunt 1.0.0」が登場。約2年もの開発停滞から復活 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.0.0 RC1からは依存パッケージのアップデートがされていますが、&lt;code&gt;grunt.util._&lt;/code&gt;で参照できるlodashが4.3.0に更新されています。&lt;br&gt;
&lt;code&gt;grunt.util._&lt;/code&gt;自体が非推奨であるため、以下のように自分でlodashをインストールして使うことが推奨されています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;lodash&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/04/07/react-v15.html&quot; title=&quot;React v15.0 | React&quot;&gt;React v15.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;幾つか問題があったため、既に&lt;a href=&quot;https://facebook.github.io/react/blog/2016/04/08/react-v15.0.1.html&quot; title=&quot;React v15.0.1&quot;&gt;React v15.0.1&lt;/a&gt;がリリースされていますが、基本的には0.14.xからは非推奨の警告メッセージがなければそのままアップグレードできるようです。&lt;/p&gt;

&lt;p&gt;0.14.xからの変更点は以下にまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/04/07/react-v15.html&quot; title=&quot;React v15.0 | React&quot;&gt;React v15.0 | React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.koba04.com/post/2016/03/09/react-js-v15-changes/&quot; title=&quot;React.js v15.0 changes - blog.koba04.com&quot;&gt;React.js v15.0 changes - blog.koba04.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Reactのコアチームのミーティングノートが公開されるようになっているので、今後どのような方針でやっていくのかなどが書かれているので気になる人は見るといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/core-notes&quot; title=&quot;reactjs/core-notes: Weekly meeting notes from the React core team&quot;&gt;reactjs/core-notes: Weekly meeting notes from the React core team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/tools-learn-javascript/&quot; title=&quot;Tools to Learn JavaScript By Doing -Telerik Developer Network&quot;&gt;Tools to Learn JavaScript By Doing -Telerik Developer Network&lt;/a&gt;という記事ではツールで学ぶJavaScriptについて書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://nodeschool.io/ja/&quot; title=&quot;NodeSchool&quot;&gt;NodeSchool&lt;/a&gt;や&lt;a href=&quot;https://github.com/rmurphey/js-assessment&quot; title=&quot;js-assessment&quot;&gt;js-assessment&lt;/a&gt;、&lt;a href=&quot;http://adventofcode.com/&quot; title=&quot;Advent of Code&quot;&gt;Advent of Code&lt;/a&gt;などの問題を解きながら学べるサイトやツールについて書かれています。&lt;/p&gt;

&lt;p&gt;ものすごく前に&lt;a href=&quot;http://efcl.info/2012/0414/res3059/&quot; title=&quot;テストで学ぶJavaScriptについて | Web Scratch&quot;&gt;テストで学ぶJavaScriptについて&lt;/a&gt;というのを書いてましたが、実際に解きながら学ぶと結構色々発見があり面白いと思います。&lt;/p&gt;

&lt;p&gt;この中だと&lt;a href=&quot;http://nodeschool.io/ja/&quot; title=&quot;NodeSchool&quot;&gt;NodeSchool&lt;/a&gt;の&lt;a href=&quot;http://nodeschool.io/ja/#workshopper-list&quot;&gt;workshopper&lt;/a&gt;は、ただのJavaScript文法だけではなく色々なライブラリやツールごとにあるので、見てみるとおもしろいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;grunt-1.0.0-released---grunt:-the-javascript-task-runner&quot;&gt;Grunt 1.0.0 released - Grunt: The JavaScript Task Runner&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gruntjs.com/blog/2016-04-04-grunt-1.0.0-released&quot; title=&quot;Grunt 1.0.0 released - Grunt: The JavaScript Task Runner&quot;&gt;gruntjs.com/blog/2016-04-04-grunt-1.0.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Grunt&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Grunt 1.0.0リリース。&lt;br&gt;
Gruntプラグインの&lt;code&gt;peerDependencies&lt;/code&gt;には&lt;code&gt;&amp;quot;grunt&amp;quot;: &amp;quot;&amp;gt;=0.4.0&amp;quot;&lt;/code&gt;を入れることを推奨してる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.0.0---rosebud-·-sboudrias/inquirer.js&quot;&gt;Release v1.0.0 - Rosebud · SBoudrias/Inquirer.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SBoudrias/Inquirer.js/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 - Rosebud · SBoudrias/Inquirer.js&quot;&gt;github.com/SBoudrias/Inquirer.js/releases/tag/v1.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ターミナルで選択肢などインタラクティブな動作を行うInquirer.js 1.0.0リリース。&lt;br&gt;
PromiseベースのAPIへ変更&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;normalize.css/changelog.md-at-4.0.0-·-necolas/normalize.css&quot;&gt;normalize.css/CHANGELOG.md at 4.0.0 · necolas/normalize.css&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/necolas/normalize.css/blob/4.0.0/CHANGELOG.md&quot; title=&quot;normalize.css/CHANGELOG.md at 4.0.0 · necolas/normalize.css&quot;&gt;github.com/necolas/normalize.css/blob/4.0.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;normalize.css 4.0.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hail2u.net/blog/webdesign/modularized-normalize-scss-v4.0.0.html&quot; title=&quot;Normalize.scss v4 - Weblog - Hail2u.net&quot;&gt;Normalize.scss v4 - Weblog - Hail2u.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;aws-lambda-supports-node.js-4.3&quot;&gt;AWS Lambda Supports Node.js 4.3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/about-aws/whats-new/2016/04/aws-lambda-supports-node-js-4-3/&quot; title=&quot;AWS Lambda Supports Node.js 4.3&quot;&gt;aws.amazon.com/about-aws/whats-new/2016/04/aws-lambda-supports-node-js-4-3/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AWS LambdaでNode.js 4.3をサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-8.3.0-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at 8.3.0 · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/8.3.0/Changelog.md&quot; title=&quot;jsdom/Changelog.md at 8.3.0 · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/8.3.0/Changelog.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdom 8.3.0リリース。&lt;br&gt;
Node Canvasを使った外部リソースを使った&lt;code&gt;img&lt;/code&gt;の処理を追加(optional)。&lt;br&gt;
&lt;code&gt;img.naturalWidth&lt;/code&gt;などの実データに基づく値を取れるようになっています。&lt;/p&gt;

&lt;p&gt;また、Page Visibility APIの基本的な実装を追加するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-v15.0-|-react&quot;&gt;React v15.0 | React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/04/07/react-v15.html&quot; title=&quot;React v15.0 | React&quot;&gt;facebook.github.io/react/blog/2016/04/07/react-v15.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React v15.0リリース。&lt;br&gt;
IE8のサポート終了、semverに準拠してアップデートするように変更。&lt;br&gt;
0.14で非推奨なメッセージがでてなければ、そのままアップデートして動作する。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tools-to-learn-javascript-by-doing--telerik-developer-network&quot;&gt;Tools to Learn JavaScript By Doing -Telerik Developer Network&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/tools-learn-javascript/&quot; title=&quot;Tools to Learn JavaScript By Doing -Telerik Developer Network&quot;&gt;developer.telerik.com/featured/tools-learn-javascript/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;js-assessment、NodeSchool、Advent of CodeなどJavaScriptを学べるインタラクティブ性のあるツールについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-the-microsoft-edge-platform-issue-tracker-|-microsoft-edge-dev-blog&quot;&gt;Introducing the Microsoft Edge Platform Issue Tracker | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/04/06/edgehtml-issue-tracker/&quot; title=&quot;Introducing the Microsoft Edge Platform Issue Tracker | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2016/04/06/edgehtml-issue-tracker/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MS EdgeのIssue Trackerがアップデートされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/browser-javascript-resource&quot; title=&quot;azu/browser-javascript-resource: Browser JavaScript Resource.&quot;&gt;azu/browser-javascript-resource: Browser JavaScript Resource.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webdriverioで始めるe2eテストとpageobject---qiita&quot;&gt;WebdriverIOで始めるE2EテストとPageObject - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/derui@github/items/9ee72c7533c9a57aa8d2&quot; title=&quot;WebdriverIOで始めるE2EテストとPageObject - Qiita&quot;&gt;qiita.com/derui@github/items/9ee72c7533c9a57aa8d2&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebdriverIOを使ったE2EテストをPageObjectパターンで実装する話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reactコンポーネントをnpmパッケージとして開発する---hatena-developer-blog&quot;&gt;Reactコンポーネントをnpmパッケージとして開発する - Hatena Developer Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.hatenastaff.com/entry/2016/04/09/180000&quot; title=&quot;Reactコンポーネントをnpmパッケージとして開発する - Hatena Developer Blog&quot;&gt;developer.hatenastaff.com/entry/2016/04/09/180000&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactコンポーネントをnpmでライブラリとして公開する方法とメリット/デメリットについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;streaming-template-literals---jakearchibald.com&quot;&gt;Streaming template literals - JakeArchibald.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jakearchibald.com/2016/streaming-template-literals/&quot; title=&quot;Streaming template literals - JakeArchibald.com&quot;&gt;jakearchibald.com/2016/streaming-template-literals/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Template LiteralとWHATWG Streamをあわせる方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-2-—-unit-testing-recipes-—-google-developer-experts-—-medium&quot;&gt;Angular 2 — Unit Testing recipes — Google Developer Experts — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/google-developer-experts/angular-2-unit-testing-with-jasmine-defe20421584&quot; title=&quot;Angular 2 — Unit Testing recipes — Google Developer Experts — Medium&quot;&gt;medium.com/google-developer-experts/angular-2-unit-testing-with-jasmine-defe20421584&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AnguarJS2でのテストパターン&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-to-flux-util-//-speaker-deck&quot;&gt;Introduction to flux-util // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/joere/introduction-to-flux-util&quot; title=&quot;Introduction to flux-util // Speaker Deck&quot;&gt;speakerdeck.com/joere/introduction-to-flux-util&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Facebookのflux utilについてのスライド。&lt;br&gt;
flux utilの機能や担当する役割について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react.run---beta&quot;&gt;React.run - Beta&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.react.run/&quot; title=&quot;React.run - Beta&quot;&gt;www.react.run/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentのコードを実行/共有できるJSFiddle的なサービス&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-edge-developer-resources&quot;&gt;Microsoft Edge Developer Resources&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.windows.com/en-us/microsoft-edge/platform/data/&quot; title=&quot;Microsoft Edge Developer Resources&quot;&gt;dev.windows.com/en-us/microsoft-edge/platform/data/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;統計&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MSEdgeのウェブサイトでのCSSプロパティの使用率やブラウザのAPIサポート率などのデータ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features&quot; title=&quot;Chrome Platform Status&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jdonaghue/es-search:-search-ecmascript-structurally&quot;&gt;jdonaghue/es-search: Search ECMAScript structurally&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jdonaghue/es-search&quot; title=&quot;jdonaghue/es-search: Search ECMAScript structurally&quot;&gt;github.com/jdonaghue/es-search&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;検索&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ASTベースでJavaScriptのコードから構造に一致する部分を検索するツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redfin/react-server:-react-server-monorepo&quot;&gt;redfin/react-server: React server monorepo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/redfin/react-server&quot; title=&quot;redfin/react-server: React server monorepo&quot;&gt;github.com/redfin/react-server&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;サーバー&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactを使ったexpress middlewareなどのサーバ関連の実装&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mohayonao/web-audio-engine:-pure-js-implementation-of-the-web-audio-api&quot;&gt;mohayonao/web-audio-engine: Pure JS implementation of the Web Audio API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mohayonao/web-audio-engine&quot; title=&quot;mohayonao/web-audio-engine: Pure JS implementation of the Web Audio API&quot;&gt;github.com/mohayonao/web-audio-engine&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Audio APIのPure JavaScript実装。&lt;br&gt;
PCM audioをNode Streamに吐くことができる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kenwheeler/cash:-an-absurdly-small-jquery-alternative-for-modern-browsers&quot;&gt;kenwheeler/cash: An absurdly small jQuery alternative for modern browsers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kenwheeler/cash&quot; title=&quot;kenwheeler/cash: An absurdly small jQuery alternative for modern browsers&quot;&gt;github.com/kenwheeler/cash&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery Alternativeなライブラリ。&lt;br&gt;
jQueryのDOM周りのメソッドを集めた感じ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;brigand/babel-plugin-flow-react-proptypes:-a-babel-plugin-to-generate-react-proptypes-definitions-from-flow-type-declarations.&quot;&gt;brigand/babel-plugin-flow-react-proptypes: A babel plugin to generate React PropTypes definitions from Flow type declarations.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/brigand/babel-plugin-flow-react-proptypes&quot; title=&quot;brigand/babel-plugin-flow-react-proptypes: A babel plugin to generate React PropTypes definitions from Flow type declarations.&quot;&gt;github.com/brigand/babel-plugin-flow-react-proptypes&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;FlowTypeでReactのpropTypesを書くと、JavaScriptのpropTypesに変換してくれるBabelプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;c58/marsdb:-marsdb-is-a-promise-based-lightweight-database-with-mongodb-query-syntax,-written-on-es6&quot;&gt;c58/marsdb: MarsDB is a Promise based lightweight database with MongoDB query syntax, written on ES6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/c58/marsdb&quot; title=&quot;c58/marsdb: MarsDB is a Promise based lightweight database with MongoDB query syntax, written on ES6&quot;&gt;github.com/c58/marsdb&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;minimongoのようなクライアントサイド向けのデータベースライブラリ。&lt;br&gt;
Adpterでバックエンドとなる保存方法を変更できるため、BrowserやElectron、Node.jsなどで動作する&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;plasmapower/assert-request:-assert-responses-to-http-requests-in-node.js&quot;&gt;PlasmaPower/assert-request: Assert responses to HTTP requests in Node.JS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/PlasmaPower/assert-request&quot; title=&quot;PlasmaPower/assert-request: Assert responses to HTTP requests in Node.JS&quot;&gt;github.com/PlasmaPower/assert-request&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでrequestに対してresponseのassertを行うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;amazon.com:-isomorphic-application-development-with-javascrip-ebook:-konstantin-tarkus:-kindle-store&quot;&gt;Amazon.com: Isomorphic Application Development with JavaScrip eBook: Konstantin Tarkus: Kindle Store&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Isomorphic-Application-Development-JavaScrip-Konstantin-ebook/dp/B01DWFRFVG&quot; title=&quot;Amazon.com: Isomorphic Application Development with JavaScrip eBook: Konstantin Tarkus: Kindle Store&quot;&gt;www.amazon.com/Isomorphic-Application-Development-JavaScrip-Konstantin-ebook/dp/B01DWFRFVG&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2017年2月4日発売&lt;br&gt;
Isomorphic JavaScriptについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 11 Apr 2016 20:00:00 +0900</pubDate>
        <link>http://jser.info/2016/04/11/grunt-100react-150javascript/</link>
        <guid isPermaLink="true">http://jser.info/2016/04/11/grunt-100react-150javascript/</guid>
        
        <category>Grunt</category>
        
        <category>React</category>
        
        <category>Tutorial</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-04-04のJS: Node.js 5.10.0、npm security fix、Safari Technology Preview</title>
        <description>&lt;p&gt;JSer.info #273 - &lt;a href=&quot;https://nodejs.org/en/blog/release/v5.10.0/&quot; title=&quot;Node v5.10.0 (Stable)&quot;&gt;Node v5.10.0 (Stable)&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;後述する&lt;a href=&quot;https://www.npmjs.com/&quot; title=&quot;npm&quot;&gt;npm&lt;/a&gt;のセキュリティ的な問題の修正がされたバージョンも含まれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jser.info/2016/03/17/react-webassembly-art-of-javascript/&quot; title=&quot;2016-03-17のJS&quot;&gt;2016-03-17のJS&lt;/a&gt;でも紹介していましたが、Node.js v6ではBuffer APIの変更が予定されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@jasnell/node-js-buffer-api-changes-3c21f1048f97#.qk7fmic6y&quot; title=&quot;Node.js Buffer API Changes — Medium&quot;&gt;Node.js Buffer API Changes — Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このAPIの変更と&lt;code&gt;--zero-fill-buffers&lt;/code&gt;コマンドラインオプションが、Node.js 5.10.0にもバックポートされています。&lt;/p&gt;

&lt;p&gt;また、主にNW.jsやElectron環境向けだと思いますが、&lt;code&gt;--no-browser-globals&lt;/code&gt;フラグで、&lt;br&gt;
以下のようなブラウザにグローバルとの互換APIを露出させないオプションが追加されいます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;setTimeout, clearTimeout, setInterval, clearInterval, setImmediate, clearImmediate
console
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.npmjs.org/post/142036323955/fixing-a-bearer-token-vulnerability&quot; title=&quot;The npm Blog — fixing a bearer token vulnerability&quot;&gt;The npm Blog — fixing a bearer token vulnerability&lt;/a&gt;では&lt;code&gt;npm &amp;lt; 2.15.1&lt;/code&gt; or &lt;code&gt;npm &amp;lt; 3.8.3&lt;/code&gt;にあった脆弱性について解説されています。&lt;/p&gt;

&lt;p&gt;npmのCLIで発生したリクエストにて、registry以外にもtoken情報を送信していたという問題で、&lt;a href=&quot;https://www.npmjs.com/settings/tokens&quot;&gt;既存のtokenはこちらから取り消せます&lt;/a&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://nodejs.org/en/blog/vulnerability/npm-tokens-leak-march-2016/&quot; title=&quot;npm security updates v2.15.1 and v3.8.3 | Node.js&quot;&gt;npm security updates v2.15.1 and v3.8.3 | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;該当コミット: &lt;a href=&quot;https://github.com/npm/npm/commit/f67ecad59e99a03e5aad8e93cd1a086ae087cb29&quot; title=&quot;config: only send token to registry hosts · npm/npm@f67ecad&quot;&gt;config: only send token to registry hosts · npm/npm@f67ecad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;npm 2.xと3.x それぞれアップデートされています。&lt;br&gt;
Node.js自体のアップデート または &lt;code&gt;npm i -g npm&lt;/code&gt;でアップデートする必要があります。&lt;/p&gt;

&lt;p&gt;Windowsの場合は&lt;a href=&quot;https://github.com/felixrieseberg/npm-windows-upgrade&quot; title=&quot;npm-windows-upgrade&quot;&gt;npm-windows-upgrade&lt;/a&gt;を使うことで&lt;code&gt;npm i -g npm&lt;/code&gt;と同様のことが行えます。&lt;/p&gt;

&lt;p&gt;npmは&lt;a href=&quot;http://blog.npmjs.org/post/141577284765/kik-left-pad-and-npm&quot; title=&quot;Azer&quot;&gt;AzerのKik問題&lt;/a&gt;を受けて、色々な変更や改善を最近行っているので合わせてチェックするとよいかと思います。&lt;/p&gt;

&lt;p&gt;簡単にまとめると&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/142077474335/npm-registry-is-now-fully-https&quot; title=&quot;The npm Blog — npm registry is now fully HTTPS!&quot;&gt;npm registry is now fully HTTPS!&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;registryの完全HTTPS化&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/141905368000/changes-to-npms-unpublish-policy&quot; title=&quot;The npm Blog — changes to npm’s unpublish policy&quot;&gt;changes to npm’s unpublish policy&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm unpublish&lt;/code&gt;ポリシーの変更&lt;/li&gt;
&lt;li&gt;publishして24時間以内なら、今まで通り&lt;code&gt;npm unpublish&lt;/code&gt;できる。&lt;/li&gt;
&lt;li&gt;それ以降は&lt;code&gt;support@npmjs.com&lt;/code&gt;へ連絡が必要&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;完全にunpublish(remove)されたモジュールは&lt;a href=&quot;https://github.com/npm/security-holder&quot; title=&quot;Security holding package&quot;&gt;Security holding package&lt;/a&gt;に置き換えるように変更

&lt;ul&gt;
&lt;li&gt;パッケージの名前空間の乗っとり防止の対策&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/141702881055/package-install-scripts-vulnerability&quot; title=&quot;The npm Blog — Package install scripts vulnerability&quot;&gt;Package install scripts vulnerability&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm install &amp;lt;module&amp;gt;&lt;/code&gt;した際に&lt;code&gt;postinstall&lt;/code&gt;で任意のスクリプトが実行できる問題と対策&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://teppeis.hatenablog.com/entry/2016/03/npm-vulnerability-and-open-source-trust&quot; title=&quot;npm install scriptの脆弱性とオープンソースと信頼 - teppeis blog&quot;&gt;npm install scriptの脆弱性とオープンソースと信頼 - teppeis blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/safari/technology-preview/&quot; title=&quot;Safari Technology Preview&quot;&gt;Safari Technology Preview&lt;/a&gt;が公開されています。&lt;br&gt;
2週間ごとに更新される開発者向けのバージョンで、&lt;a href=&quot;https://www.mozilla.org/ja/firefox/developer/&quot; title=&quot;Firefox Developer Edition — Mozilla&quot;&gt;Firefox Developer Edition&lt;/a&gt;やChrome Dev Channelのような感じです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/6017/introducing-safari-technology-preview/&quot; title=&quot;Introducing Safari Technology Preview | WebKit&quot;&gt;Introducing Safari Technology Preview | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Safari Technology Previewで問題を見つけたら、BugzillaやBug Reporterを使ってバグ報告することができます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/github/fetch/issues/303&quot; title=&quot;Fetch polyfill not working with Safari Technology Preview · Issue #303 · github/fetch&quot;&gt;Fetch polyfill not working with Safari Technology Preview · Issue #303 · github/fetch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/browser-javascript-resource&quot; title=&quot;azu/browser-javascript-resource: Browser JavaScript Resource.&quot;&gt;azu/browser-javascript-resource: Browser JavaScript Resource.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v5.10.0-(stable)-|-node.js&quot;&gt;Node v5.10.0 (Stable) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v5.10.0/&quot; title=&quot;Node v5.10.0 (Stable) | Node.js&quot;&gt;nodejs.org/en/blog/release/v5.10.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 5.10.0リリース。&lt;br&gt;
npmのセキュリティアップデートしたバージョンが含まれている。&lt;br&gt;
また、&lt;code&gt;Buffer(size)&lt;/code&gt;のallocation問題に対して&lt;code&gt;Buffer.alloc&lt;/code&gt;/&lt;code&gt;Buffer.allocUnsafe&lt;/code&gt;/&lt;code&gt;Buffer.from&lt;/code&gt;と&lt;code&gt;--zero-fill-buffers&lt;/code&gt;コマンドライン引数の追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/142036323955/fixing-a-bearer-token-vulnerability&quot; title=&quot;The npm Blog — fixing a bearer token vulnerability&quot;&gt;The npm Blog — fixing a bearer token vulnerability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linux.com/news/software/applications/893109-nodejs-buffer-api-changes&quot; title=&quot;Node.js Buffer API Changes | Linux.com&quot;&gt;Node.js Buffer API Changes | Linux.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-safari-technology-preview-|-webkit&quot;&gt;Introducing Safari Technology Preview | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6017/introducing-safari-technology-preview/&quot; title=&quot;Introducing Safari Technology Preview | WebKit&quot;&gt;webkit.org/blog/6017/introducing-safari-technology-preview/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safariの開発者プレビュー版が公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pixi.js-v4-arrives---goodboy™-—-goodboy™&quot;&gt;Pixi.JS v4 Arrives - Goodboy™ — Goodboy™&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.goodboydigital.com/pixi-js-v4/&quot; title=&quot;Pixi.JS v4 Arrives - Goodboy™ — Goodboy™&quot;&gt;www.goodboydigital.com/pixi-js-v4/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PixiJS v4 RCリリース。&lt;br&gt;
pixi-gl-coreというWebGL部分のコア実装を分離、RenderTextureのGCを任意のタイミングで走らせることが出来るように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pixijs/pixi-gl-core&quot; title=&quot;pixijs/pixi-gl-core: A set of tidy little pixi objects that make working with webGL simpler (WIP, will be moved to pixi group when ready)&quot;&gt;pixijs/pixi-gl-core: A set of tidy little pixi objects that make working with webGL simpler (WIP, will be moved to pixi group when ready)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-npm-blog-—-fixing-a-bearer-token-vulnerability&quot;&gt;The npm Blog — fixing a bearer token vulnerability&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.npmjs.org/post/142036323955/fixing-a-bearer-token-vulnerability&quot; title=&quot;The npm Blog — fixing a bearer token vulnerability&quot;&gt;blog.npmjs.org/post/142036323955/fixing-a-bearer-token-vulnerability&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npmにMITMできる脆弱性があったため2.xと3.xそれぞれセキュリティアップデートされている。&lt;br&gt;
&lt;code&gt;npm i -g&lt;/code&gt;または&lt;code&gt;npm-windows-upgrade&lt;/code&gt;を使うことで&lt;code&gt;npm&lt;/code&gt;自体をアップデートできる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/felixrieseberg/npm-windows-upgrade&quot; title=&quot;felixrieseberg/npm-windows-upgrade: Upgrade npm on Windows&quot;&gt;felixrieseberg/npm-windows-upgrade: Upgrade npm on Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack-2-tree-shaking-configuration-—-modus-create:-front-end-development-—-medium&quot;&gt;Webpack 2 Tree Shaking Configuration — Modus Create: Front End Development — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/modus-create-front-end-development/webpack-2-tree-shaking-configuration-9f1de90f3233&quot; title=&quot;Webpack 2 Tree Shaking Configuration — Modus Create: Front End Development — Medium&quot;&gt;medium.com/modus-create-front-end-development/webpack-2-tree-shaking-configuration-9f1de90f3233&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack 1から2へのマイグレーションについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-vs-angular2:-the-fight-rages-on-–-evojam-technology-blog&quot;&gt;React vs Angular2: The fight rages on – Evojam Technology Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.evojam.com/2016/03/31/react-vs-angular2-the-fight-rages-on/&quot; title=&quot;React vs Angular2: The fight rages on – Evojam Technology Blog&quot;&gt;tech.evojam.com/2016/03/31/react-vs-angular2-the-fight-rages-on/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactとAngularJS 2の比較&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;houdini:-maybe-the-most-exciting-development-in-css-you&amp;#x27;ve-never-heard-of-–-smashing-magazine&quot;&gt;Houdini: Maybe The Most Exciting Development In CSS You&amp;#x27;ve Never Heard Of – Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/03/houdini-maybe-the-most-exciting-development-in-css-youve-never-heard-of/&quot; title=&quot;Houdini: Maybe The Most Exciting Development In CSS You&amp;#39;ve Never Heard Of – Smashing Magazine&quot;&gt;www.smashingmagazine.com/2016/03/houdini-maybe-the-most-exciting-development-in-css-youve-never-heard-of/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;W3C task forceのHoudiniは何を解決するのが目的でどういうものなのかについての解説。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-javascript-event-loop:-explained&quot;&gt;The JavaScript Event Loop: Explained&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/&quot; title=&quot;The JavaScript Event Loop: Explained&quot;&gt;blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのイベントループについての解説、図解。&lt;br&gt;
DOM EventやWebWorkerについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#x27;s-new-in-typescript?-|-build-2016-|-channel-9&quot;&gt;What&amp;#x27;s New in TypeScript? | Build 2016 | Channel 9&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://channel9.msdn.com/Events/Build/2016/B881&quot; title=&quot;What&amp;#39;s New in TypeScript? | Build 2016 | Channel 9&quot;&gt;channel9.msdn.com/Events/Build/2016/B881&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;近年のTypeScriptのリリースについて。&lt;br&gt;
またnon-nullable typeやnpmとd.tsについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;let&amp;#x27;s-learn-es6---youtube&quot;&gt;Let&amp;#x27;s Learn ES6 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL57atfCFqj2h5fpdZD-doGEIs0NZxeJTX&quot; title=&quot;Let&amp;#39;s Learn ES6 - YouTube&quot;&gt;www.youtube.com/playlist?list=PL57atfCFqj2h5fpdZD-doGEIs0NZxeJTX&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6について学ぶスクリーンキャストの連載&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;buzinas/tslint-eslint-rules:-improve-your-tslint-with-the-missing-eslint-rules&quot;&gt;buzinas/tslint-eslint-rules: Improve your TSLint with the missing ESLint rules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/buzinas/tslint-eslint-rules&quot; title=&quot;buzinas/tslint-eslint-rules: Improve your TSLint with the missing ESLint rules&quot;&gt;github.com/buzinas/tslint-eslint-rules&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TSLint向けのESLintルール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;aadsm/jschardet:-character-encoding-auto-detection-in-javascript-(port-of-python&amp;#x27;s-chardet)&quot;&gt;aadsm/jschardet: Character encoding auto-detection in JavaScript (port of python&amp;#x27;s chardet)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aadsm/jschardet&quot; title=&quot;aadsm/jschardet: Character encoding auto-detection in JavaScript (port of python&amp;#39;s chardet)&quot;&gt;github.com/aadsm/jschardet&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;文字コード&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptで文字コード判定をするライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rbuckton/prex:-async-coordination-primitives-and-extensions-on-top-of-es6-promises&quot;&gt;rbuckton/prex: Async coordination primitives and extensions on top of ES6 Promises&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rbuckton/prex&quot; title=&quot;rbuckton/prex: Async coordination primitives and extensions on top of ES6 Promises&quot;&gt;github.com/rbuckton/prex&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promise周りの補助ライブラリ。&lt;br&gt;
Cancellation、Semaphore、SchedulingのAPIを提供してる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;liquidlabsgmbh/retractor:-expose-react-internals-for-e2e-testing&quot;&gt;LiquidLabsGmbH/retractor: Expose react internals for E2E testing&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/LiquidLabsGmbH/retractor&quot; title=&quot;LiquidLabsGmbH/retractor: Expose react internals for E2E testing&quot;&gt;github.com/LiquidLabsGmbH/retractor&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webdriver&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;selenium-webderiverにReact Elementoを受け取れる&lt;code&gt;findElement&lt;/code&gt;を拡張するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bfred-it/object-fit-images:-adds-support-to-object-fit-to-images-on-ie9,-ie10,-ie11,-edge-and-other-old-browsers.&quot;&gt;bfred-it/object-fit-images: Adds support to object-fit to images on IE9, IE10, IE11, Edge and other old browsers.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bfred-it/object-fit-images&quot; title=&quot;bfred-it/object-fit-images: Adds support to object-fit to images on IE9, IE10, IE11, Edge and other old browsers.&quot;&gt;github.com/bfred-it/object-fit-images&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;object-fit&lt;/code&gt;をIEでも動かすJavaScriptライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thejameskyle/the-super-tiny-compiler:-possibly-the-smallest-compiler-ever&quot;&gt;thejameskyle/the-super-tiny-compiler: Possibly the smallest compiler ever&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thejameskyle/the-super-tiny-compiler&quot; title=&quot;thejameskyle/the-super-tiny-compiler: Possibly the smallest compiler ever&quot;&gt;github.com/thejameskyle/the-super-tiny-compiler&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptで書かれた小さなCompiler/Transpilerの実装。&lt;br&gt;
コメントがしっかり付けられているのでコンパイルの作りについての学習する向け&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gajus/create-index:-creates-es6-./index.js-file-in-target-directories-that-imports-and-exports-all-sibling-files-and-directories.&quot;&gt;gajus/create-index: Creates ES6 ./index.js file in target directories that imports and exports all sibling files and directories.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gajus/create-index&quot; title=&quot;gajus/create-index: Creates ES6 ./index.js file in target directories that imports and exports all sibling files and directories.&quot;&gt;github.com/gajus/create-index&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ディレクトリを指定すると、そこにあるモジュールを&lt;code&gt;import&lt;/code&gt;した&lt;code&gt;index.js&lt;/code&gt;を作成してくれるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-starter-kit-∙-a-project-template-for-authoring-and-publishing-javascript-libraries&quot;&gt;Babel Starter Kit ∙ A project template for authoring and publishing JavaScript libraries&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kriasoft.com/babel-starter-kit/&quot; title=&quot;Babel Starter Kit ∙ A project template for authoring and publishing JavaScript libraries&quot;&gt;www.kriasoft.com/babel-starter-kit/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babelを使ったStarter Kit&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecss:-home-page&quot;&gt;ECSS: Home Page&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://ecss.io/&quot; title=&quot;ECSS: Home Page&quot;&gt;ecss.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECSS(Enduring CSS)についての書籍&lt;br&gt;
CSSの設計、考え方について扱ってる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://benfrain.com/enduring-css-writing-style-sheets-rapidly-changing-long-lived-projects/&quot; title=&quot;Enduring CSS: writing style sheets for rapidly changing, long-lived projects – Ben Frain&quot;&gt;Enduring CSS: writing style sheets for rapidly changing, long-lived projects – Ben Frain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 04 Apr 2016 19:46:00 +0900</pubDate>
        <link>http://jser.info/2016/04/04/nodejs-5100npm-security-fixsafari-technology-preview/</link>
        <guid isPermaLink="true">http://jser.info/2016/04/04/nodejs-5100npm-security-fixsafari-technology-preview/</guid>
        
        <category>Node.js</category>
        
        <category>npm</category>
        
        <category>security</category>
        
        <category>safari</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
  </channel>
</rss>
