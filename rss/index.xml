<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 06 Dec 2016 11:15:01 +0900</pubDate>
    <lastBuildDate>Tue, 06 Dec 2016 11:15:01 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>2016-12-06のJS: Ember.js 2.10、Front-End Tooling 2016アンケート、Svelte</title>
        <description>&lt;p&gt;JSer.info #308 - Ember.js &lt;a href=&quot;https://github.com/emberjs/ember.js/releases/tag/v2.10.0&quot; title=&quot;v2.10.0&quot;&gt;v2.10.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/11/30/ember-2-10-released.html&quot; title=&quot;Ember.js - Ember 2.10 and 2.11 Beta Released&quot;&gt;Ember.js - Ember 2.10 and 2.11 Beta Released&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ember.js 2.10では、&lt;a href=&quot;http://emberjs.com/blog/2016/07/29/announcing-the-glimmer-2-alpha.html&quot; title=&quot;Glimmer 2&quot;&gt;7月にα版が出ていたGlimmer 2&lt;/a&gt;が正規式に統合されています。これにより、パフォーマンスやファイルサイズが改善されています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;drop-in, completely backwards compatible upgrade for virtually all Ember.js users&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;特徴として、既存のものと後方互換性があるため、そのままアップグレードできるようになっています。&lt;/p&gt;

&lt;p&gt;合わせて次の記事も見てみるといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://madhatted.com/2016/11/30/5-things-to-know-about-ember-2-10-and-glimmer-2&quot; title=&quot;5 Things to Know About Ember 2.10 and Glimmer 2 :: madhatted.com&quot;&gt;5 Things to Know About Ember 2.10 and Glimmer 2 :: madhatted.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results&quot; title=&quot;The State of Front-End Tooling 2016 - Results&quot;&gt;The State of Front-End Tooling 2016 - Results&lt;/a&gt;では、フロントエンドのツールやライブラリなどに関するアンケート結果が公開されています。&lt;/p&gt;

&lt;p&gt;去年も行われているので、去年の結果との比較も掲載されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2015-results&quot; title=&quot;The State of Front-End Tooling – 2015&quot;&gt;The State of Front-End Tooling – 2015&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;次の項目についてそれぞれアンケート結果がまとめられています。&lt;br&gt;
認知度、利用率、満足度に関する結果が書かれています。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#experience-general&quot;&gt;General Front-end Experience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#knowledge-css&quot;&gt; CSS Knowledge Levels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#css-processors&quot;&gt;CSS Processor Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#css-processor-experience&quot;&gt;CSS Processor Experience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#css-naming&quot;&gt;CSS Naming Schemes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#css-linting&quot;&gt;CSS Linting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#css-tool-experience&quot;&gt;CSS Tool Experience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#css-methodologies&quot;&gt;CSS Methodologies and Naming Scheme Experience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#css-tool-usage&quot;&gt;CSS Tool Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#js-knowledge&quot;&gt;JavaScript Knowledge Levels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#js-task-runners&quot;&gt;Task Runners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#js-frameworks&quot;&gt;Knowledge of JavaScript Libraries and Frameworks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#js-framework-usage&quot;&gt;Most frequently used JS tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#js-framework-essential&quot;&gt;Most essential JS tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#js-bundlers&quot;&gt;JavaScript Module Bundlers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#js-transpilers&quot;&gt;JavaScript Transpilers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#js-linters&quot;&gt;JavaScript Linting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#js-testing&quot;&gt;JavaScript Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results#js-misc&quot;&gt;Miscellaneous Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://svelte.technology/&quot; title=&quot;Svelte&quot;&gt;Svelte&lt;/a&gt;というUIフレームワーク/ツールが公開されいます。&lt;br&gt;
作者は、&lt;a href=&quot;http://www.ractivejs.org/&quot; title=&quot;Ractive.js&quot;&gt;Ractive.js&lt;/a&gt;や&lt;a href=&quot;https://github.com/rollup/rollup&quot; title=&quot;rollup&quot;&gt;rollup&lt;/a&gt;の @Rich-Harris さんです。&lt;/p&gt;

&lt;p&gt;よくあるコンポーネント志向のフレームワークですが、特徴として&lt;a href=&quot;https://github.com/sveltejs/svelte-cli&quot; title=&quot;svelte-cli&quot;&gt;svelte-cli&lt;/a&gt;で変換すると、ただのDOM APIを使った単体のJavaScriptコードとなります。&lt;br&gt;
この単体のJavaScriptコード(&lt;em&gt;widget&lt;/em&gt;と呼ばれてます)は、単独で動作するため、別途ランタイムとなるコードをロードする必要がありません。&lt;/p&gt;

&lt;p&gt;HTML(テンプレート/JS/CSSを書いたもの)をjsファイルに変換すると、&lt;em&gt;widget&lt;/em&gt;のESモジュールが生成されます。&lt;br&gt;
この&lt;em&gt;widget&lt;/em&gt;を使ったJavaScriptをRollupやwebpackなどでビルドしてブラウザで表示します。&lt;/p&gt;

&lt;p&gt;オンライン&lt;a href=&quot;https://svelte.technology/repl/&quot;&gt;REPL&lt;/a&gt;を見てみるとどのような変換が行われているかを見ることができます。&lt;/p&gt;

&lt;p&gt;ポータブルなUIモジュールを作る場合などに、このような仕組みがあると役に立つような気がします。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---ember-2.10-and-2.11-beta-released&quot;&gt;Ember.js - Ember 2.10 and 2.11 Beta Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/11/30/ember-2-10-released.html&quot; title=&quot;Ember.js - Ember 2.10 and 2.11 Beta Released&quot;&gt;emberjs.com/blog/2016/11/30/ember-2-10-released.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Ember 2.10リリース。&lt;br&gt;
Glimmer 2を含んだ初のリリース。&lt;br&gt;
既存の仕組みと後方互換性を持っているため、そのままアップグレードが可能となっている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/07/29/announcing-the-glimmer-2-alpha.html&quot; title=&quot;Ember.js - Announcing The Glimmer 2 Alpha&quot;&gt;Ember.js - Announcing The Glimmer 2 Alpha&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-5.6&quot;&gt;V8 JavaScript Engine: V8 Release 5.6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/12/v8-release-56.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.6&quot;&gt;v8project.blogspot.com/2016/12/v8-release-56.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8 5.6リリース。&lt;br&gt;
ES2015のパフォーマンス改善、&lt;code&gt;String#padStart&lt;/code&gt;と&lt;code&gt;String#padEnd&lt;/code&gt;の実装など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-releases:-stable-channel-update-for-desktop&quot;&gt;Chrome Releases: Stable Channel Update for Desktop&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://googlechromereleases.blogspot.com/2016/12/stable-channel-update-for-desktop.html&quot; title=&quot;Chrome Releases: Stable Channel Update for Desktop&quot;&gt;googlechromereleases.blogspot.com/2016/12/stable-channel-update-for-desktop.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 55リリース。&lt;br&gt;
Pointer Event、async/await、Presistent Storageなど。&lt;br&gt;
HTML5 by Default(Flashのデフォルトブロック)はChrome 56に延期した。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=OC7tgJP1D4s&quot; title=&quot;Chrome 55: Async and Await, Pointer Events, Persistent Storage and more - YouTube&quot;&gt;Chrome 55: Async and Await, Pointer Events, Persistent Storage and more - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2016/10/chrome-55-beta-input-handling.html&quot; title=&quot;Chromium Blog: Chrome 55 Beta: Input handling improvements and async/await functions&quot;&gt;Chromium Blog: Chrome 55 Beta: Input handling improvements and async/await functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/forum/#!msg/chromium-dev/ad7Posd6cdI/5EEOduWiCwAJ&quot; title=&quot;(Update) Intent to Implement - HTML5 by Default - Google グループ&quot;&gt;(Update) Intent to Implement - HTML5 by Default - Google グループ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-front-end-tooling-2016---results---ashleynolan.co.uk---blog-and-portfolio-for-ashley-nolan&quot;&gt;The State of Front-End Tooling 2016 - Results - AshleyNolan.co.uk - Blog and Portfolio for Ashley Nolan&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results&quot; title=&quot;The State of Front-End Tooling 2016 - Results - AshleyNolan.co.uk - Blog and Portfolio for Ashley Nolan&quot;&gt;ashleynolan.co.uk/blog/frontend-tooling-survey-2016-results&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;フロントエンド周りのツールやライブラリについてのアンケート結果。&lt;br&gt;
昨年の結果との比較も掲載されている。&lt;br&gt;
PostCSSやnpm scripts利用が増えた、使っているJSライブラリやツールについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-developers:-watch-your-language!---web-standards---bocoup&quot;&gt;JavaScript Developers: Watch Your Language! - Web Standards - Bocoup&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bocoup.com/weblog/javascript-developers-watch-your-language&quot; title=&quot;JavaScript Developers: Watch Your Language! - Web Standards - Bocoup&quot;&gt;bocoup.com/weblog/javascript-developers-watch-your-language&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript ProposalのStageの解説。&lt;br&gt;
Stage段階のものは、Babelなどで簡単に扱えるけど危険性も含んでいるから、TC39での議論は注視する必要がある。&lt;br&gt;
Stage段階のものはExperimentalであることを理解して使おうという話。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;step-by-stepで始めるeslint---qiita&quot;&gt;Step by Stepで始めるESLint - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/howdy39/items/6e2c75861bc5a14b2acf&quot; title=&quot;Step by Stepで始めるESLint - Qiita&quot;&gt;qiita.com/howdy39/items/6e2c75861bc5a14b2acf&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLintの設定をステップ・バイ・ステップで行うチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;一から始めるjavascriptユニットテスト---hatena-developer-blog&quot;&gt;一から始めるJavaScriptユニットテスト - Hatena Developer Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.hatenastaff.com/entry/2016/12/05/102351&quot; title=&quot;一から始めるJavaScriptユニットテスト - Hatena Developer Blog&quot;&gt;developer.hatenastaff.com/entry/2016/12/05/102351&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MochaをNode.jsで動くユニットテストから、Karmaを使いブラウザで動かすDOMのテストするまでをPull Request毎に解説してる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;新しめのcss設計まとめ-〜2016年冬〜---qiita&quot;&gt;新しめのCSS設計まとめ 〜2016年冬〜 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/usagi-f/items/dc719a8fd18abcdee4df&quot; title=&quot;新しめのCSS設計まとめ 〜2016年冬〜 - Qiita&quot;&gt;qiita.com/usagi-f/items/dc719a8fd18abcdee4df&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSの色々なアーキテクチャについての紹介。&lt;br&gt;
OOCSS、BEM、SMACSS、APBCSS(Atomic Design)、MOCSS、ECSS、ITCSSなど。&lt;br&gt;
それぞれを簡単にまとめている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;houdini、それはcssの進化を促すプロジェクト---the-future-starts-today&quot;&gt;Houdini、それはCSSの進化を促すプロジェクト - The future starts today&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shibe97.hatenablog.com/entry/2016/12/05/083000&quot; title=&quot;Houdini、それはCSSの進化を促すプロジェクト - The future starts today&quot;&gt;shibe97.hatenablog.com/entry/2016/12/05/083000&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSのHoudiniについて。&lt;br&gt;
CSSの低レベルAPIにJavaScriptからアクセスできるようにする仕様で、現在どのような仕様が考えられているかについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;レガシーシステム上のjavascriptをモダンビルドにしていくwebpack利用実例---qiita&quot;&gt;レガシーシステム上のJavaScriptをモダンビルドにしていくwebpack利用実例 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/inuscript/items/97333a239c97094c39a6&quot; title=&quot;レガシーシステム上のJavaScriptをモダンビルドにしていくwebpack利用実例 - Qiita&quot;&gt;qiita.com/inuscript/items/97333a239c97094c39a6&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;モジュールではないコードや古いライブラリをどのように現代のツールに載せていくかについて。&lt;br&gt;
モジュール化やwebpackを使ったビルドなどの手法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react/redux…-where-do-you-start?-–-mofed-–-medium&quot;&gt;React/Redux… Where Do You Start? – MoFed – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/mofed/react-redux-where-do-you-start-500c98413d1f&quot; title=&quot;React/Redux… Where Do You Start? – MoFed – Medium&quot;&gt;medium.com/mofed/react-redux-where-do-you-start-500c98413d1f&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React(とRedux)をどこから始めるかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;8種類あるsvgスプライト-それぞれの特徴を比較してみた---週刊svg&quot;&gt;8種類あるSVGスプライト それぞれの特徴を比較してみた - 週刊SVG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://ssvvgg.net/post/153900731865/8%E7%A8%AE%E9%A1%9E%E3%81%82%E3%82%8Bsvg%E3%82%B9%E3%83%97%E3%83%A9%E3%82%A4%E3%83%88-%E3%81%9D%E3%82%8C%E3%81%9E%E3%82%8C%E3%81%AE%E7%89%B9%E5%BE%B4%E3%82%92%E6%AF%94%E8%BC%83%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F&quot; title=&quot;8種類あるSVGスプライト それぞれの特徴を比較してみた - 週刊SVG&quot;&gt;ssvvgg.net/post/153900731865/8%E7%A8%AE%E9%A1%9E%E3%81%82%E3%82%8Bsvg%E3%82%B9%E3%83%97%E3%83%A9%E3%82%A4%E3%83%88-%E3%81%9D%E3%82%8C%E3%81%9E%E3%82%8C%E3%81%AE%E7%89%B9%E5%BE%B4%E3%82%92%E6%AF%94%E8%BC%83%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SVGスプライトといわれるものがどうのようなものであるか、またその手法についてまとめられた記事&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yarn-vs.-npm@2-vs.-npm@3-//-speaker-deck&quot;&gt;yarn VS. npm@2 VS. npm@3 // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/pine613/yarn-vs-npm-at-2-vs-npm-at-3&quot; title=&quot;yarn VS. npm@2 VS. npm@3 // Speaker Deck&quot;&gt;speakerdeck.com/pine613/yarn-vs-npm-at-2-vs-npm-at-3&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;presentation&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npmとyarnの比較スライド。&lt;br&gt;
GitHub Star上位100を対象にインストール時間を比較し、yarnの方が常に早いという結果になったという話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dai-shi/es-beautifier:-ecmascript-beautifier-based-on-eslint&quot;&gt;dai-shi/es-beautifier: ECMAScript beautifier based on eslint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dai-shi/es-beautifier&quot; title=&quot;dai-shi/es-beautifier: ECMAScript beautifier based on eslint&quot;&gt;github.com/dai-shi/es-beautifier&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLintを使ったJavaScriptのフォーマッター&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gajus/babel-plugin-log-deprecated:-adds-a-console.warn-statement-to-the-functions-annotated-with-@deprecated-tag.&quot;&gt;gajus/babel-plugin-log-deprecated: Adds a console.warn statement to the functions annotated with @deprecated tag.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gajus/babel-plugin-log-deprecated&quot; title=&quot;gajus/babel-plugin-log-deprecated: Adds a console.warn statement to the functions annotated with @deprecated tag.&quot;&gt;github.com/gajus/babel-plugin-log-deprecated&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JSDoc&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSDocの&lt;code&gt;@depreacted&lt;/code&gt;タグを&lt;code&gt;console.warn&lt;/code&gt;に変換するBabel plugin&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wooorm/nspell:-📝-hunspell-compatible-spell-checker&quot;&gt;wooorm/nspell: 📝 Hunspell compatible spell-checker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wooorm/nspell&quot; title=&quot;wooorm/nspell: 📝 Hunspell compatible spell-checker&quot;&gt;github.com/wooorm/nspell&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;dictionary&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;スペルチェッカーの実装ライブラリ。&lt;br&gt;
hunspell形式の辞書をサポートしてる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;razrfalcon/svgcleaner:-svgcleaner-could-help-you-to-clean-up-your-svg-files-from-the-unnecessary-data.&quot;&gt;RazrFalcon/svgcleaner: svgcleaner could help you to clean up your SVG files from the unnecessary data.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/RazrFalcon/svgcleaner&quot; title=&quot;RazrFalcon/svgcleaner: svgcleaner could help you to clean up your SVG files from the unnecessary data.&quot;&gt;github.com/RazrFalcon/svgcleaner&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SVGから不要なデータを削除してファイルサイズを削減するツール。&lt;br&gt;
svgoに比べて高速に動作する&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;svelte-•-the-magical-disappearing-ui-framework&quot;&gt;Svelte • The magical disappearing UI framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://svelte.technology/&quot; title=&quot;Svelte • The magical disappearing UI framework&quot;&gt;svelte.technology/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vueなどに似た書き方をするコンパイル前提のUIフレームワーク。&lt;br&gt;
変換後はただのDOM APIを使ったJavaScriptになり、ランタイムとしてのライブラリ読み込みが不要となる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://svelte.technology/blog/frameworks-without-the-framework/&quot; title=&quot;Frameworks without the framework: why didn&amp;amp;amp;#39;t we think of this sooner? • Svelte&quot;&gt;Frameworks without the framework: why didn&amp;amp;#39;t we think of this sooner? • Svelte&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 06 Dec 2016 09:55:00 +0900</pubDate>
        <link>https://jser.info/2016/12/06/ember.js-2.10-front-end-tooling-2016-svelte/</link>
        <guid isPermaLink="true">https://jser.info/2016/12/06/ember.js-2.10-front-end-tooling-2016-svelte/</guid>
        
        <category>Ember</category>
        
        <category>Tools</category>
        
        <category>Framework</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-11-29のJS: Node.js v7.2.0、Yarnでオフラインインストール</title>
        <description>&lt;p&gt;JSer.info #307 - &lt;a href=&quot;https://nodejs.org/en/blog/release/v7.2.0/&quot; title=&quot;Node v7.2.0&quot;&gt;Node v7.2.0&lt;/a&gt;がリリースされました。&lt;br&gt;
Windows 10ユーザー向けにはセキュリティ修正も含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.2.0/&quot; title=&quot;Node v7.2.0 (Current) | Node.js&quot;&gt;Node v7.2.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/weekly-updates/weekly-update.2016-11-24/&quot; title=&quot;Weekly Update - November 24th, 2016 | Node.js&quot;&gt;Weekly Update - November 24th, 2016&lt;/a&gt;によると、Node.jsのコードカバレッジを見られる&lt;a href=&quot;https://coverage.nodejs.org/&quot; title=&quot;Node.js Nightly Code Coverage&quot;&gt;Node.js Nightly Code Coverage&lt;/a&gt;が追加されています。&lt;br&gt;
また、Node.js v7のベンチマークも含めた&lt;a href=&quot;https://benchmarking.nodejs.org/&quot; title=&quot;Node.js Benchmarks&quot;&gt;Node.js Benchmarks&lt;/a&gt;が公開されています。&lt;/p&gt;

&lt;p&gt;ベンチマークに興味がある人は&lt;a href=&quot;https://github.com/nodejs/benchmarking&quot; title=&quot;Benchmarking Work Group&quot;&gt;Benchmarking Work Group&lt;/a&gt;を見てみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/blog/2016/11/24/offline-mirror&quot; title=&quot;Running Yarn offline&quot;&gt;Running Yarn offline&lt;/a&gt;という記事では、Yarnを使ったオフラインインストールについて書かれています。&lt;/p&gt;

&lt;p&gt;Yarnでは&lt;code&gt;yarn.lock&lt;/code&gt;の&lt;code&gt;resolved&lt;/code&gt;フィールドで、そのモジュールの場所(URLやパス)を指定できます。つまり、この&lt;code&gt;resolved&lt;/code&gt;フィールドを相対パスにすれば、ローカルからモジュールを取ってきてオフラインインストールができる仕組みです。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.yarnrc&lt;/code&gt;の&lt;code&gt;yarn-offline-mirror&lt;/code&gt;の設定で、オフラインミラー用のモジュールの保存先を指定できるので、これを利用してプロジェクトの下にモジュールのキャッシュを保存する手法について書かれています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Many Facebook teams, including the React Native team, decided to check in their “Offline mirror”.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;この記事で興味深いところは、FacebookではこのOffline mirrorをバージョン管理下に含めて利用している点です。&lt;/p&gt;

&lt;p&gt;最近iOS(CocoaPodsとCarthageというパッケージ管理ツール)でも同様の議論があったので、プロジェクトにおける依存モジュールの扱い方は変化してきているのかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mono0926/items/636819c42e96a8c4e12d&quot; title=&quot;CocoaPods・Carthageでインストールした成果物はバージョン管理に含めるべきか？ - Qiita&quot;&gt;CocoaPods・Carthageでインストールした成果物はバージョン管理に含めるべきか？ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;お知らせ&quot;&gt;お知らせ&lt;/h2&gt;

&lt;p&gt;JSer.info 6周年と300回目記念イベントを2017年1月15日(日)にやる予定です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info/issues/89&quot; title=&quot;JSer.info 6周年 &amp;amp;amp;&amp;amp;amp; 300回目記念イベント @ 1月15日(日) · Issue #89 · jser/jser.info&quot;&gt;JSer.info 6周年 &amp;amp;&amp;amp; 300回目記念イベント @ 1月15日(日) · Issue #89 · jser/jser.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.connpass.com/event/24202/&quot; title=&quot;JSer.info 5周年記念イベント&quot;&gt;JSer.info 5周年記念イベント&lt;/a&gt;のようなイベントになると思いますが、まだ何やるかがしっかり決まってはいません。&lt;/p&gt;

&lt;p&gt;是非こういうことをやりたいということがあればIssueなどに書き込んでください。&lt;/p&gt;

&lt;p&gt;例) 死にゆくFlashに関する話をしたい など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info/issues/89&quot;&gt;https://github.com/jser/jser.info/issues/89&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;こういう発表したい事前予告もありです&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;イベントページ(まだない)での募集開始は12月中旬ぐらいを予定しています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2.1.0-·-vuejs/vue&quot;&gt;Release v2.1.0 · vuejs/vue&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue/releases/tag/v2.1.0&quot; title=&quot;Release v2.1.0 · vuejs/vue&quot;&gt;github.com/vuejs/vue/releases/tag/v2.1.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue.js 2.1.0リリース。&lt;br&gt;
Scoped Slots、&lt;code&gt;v-else-if&lt;/code&gt;、&lt;code&gt;dist&lt;/code&gt;以下のファイルの変更、JSX対応の改善、サーバサイドレンダリングの際に&lt;code&gt;process.env.VUE_ENV=server&lt;/code&gt;は不要になるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/yyx990803/faebe22e8763f5b17572b35ed96f52fe&quot; title=&quot;2.1.0.md&quot;&gt;2.1.0.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;ja&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;大変お待たせしました。Vue.js 2.0 公式ドキュメントの日本語サイトリリースしました！最新バージョン 2.1 まで対応しています。今回の翻訳プロジェクトにご協力頂いた方には大変感謝です！ありがとうございました！ &lt;a href=&quot;https://t.co/nCleWsMtft&quot;&gt;https://t.co/nCleWsMtft&lt;/a&gt; &lt;a href=&quot;https://twitter.com/hashtag/vuejs?src=hash&quot;&gt;#vuejs&lt;/a&gt;&lt;/p&gt;&amp;mdash; 🐤kazuya kawaguchi🐤 (@kazu_pon) &lt;a href=&quot;https://twitter.com/kazu_pon/status/801529603223273472&quot;&gt;2016年11月23日&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v3.11.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v3.11.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/11/eslint-v3.11.0-released&quot; title=&quot;ESLint v3.11.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/11/eslint-v3.11.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint v3.11.0リリース。&lt;br&gt;
&lt;code&gt;capitalized-comments&lt;/code&gt;、&lt;code&gt;require-await&lt;/code&gt;のルールを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7.2.0-(current)-|-node.js&quot;&gt;Node v7.2.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.2.0/&quot; title=&quot;Node v7.2.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v7.2.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node v7.2.0リリース。&lt;br&gt;
Windows向けのセキュリティリリース、&lt;code&gt;process.memoryUsage().external&lt;/code&gt;の追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/weekly-updates/weekly-update.2016-11-24/&quot; title=&quot;Weekly Update - November 24th, 2016 | Node.js&quot;&gt;Weekly Update - November 24th, 2016 | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-·-riot.js&quot;&gt;Release notes · Riot.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://riotjs.com/release-notes/#november-22-2016&quot; title=&quot;Release notes · Riot.js&quot;&gt;riotjs.com/release-notes/#november-22-2016&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Riot.js 3.0リリース&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/riot/riot/issues/1694&quot; title=&quot;Riot 3.0.0 roadmap · Issue #1694 · riot/riot&quot;&gt;Riot 3.0.0 roadmap · Issue #1694 · riot/riot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;running-yarn-offline-|-yarn&quot;&gt;Running Yarn offline | Yarn&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/blog/2016/11/24/offline-mirror&quot; title=&quot; Running Yarn offline | Yarn&quot;&gt;yarnpkg.com/blog/2016/11/24/offline-mirror&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;yarnをオフラインで使う方法や、オフラインのミラーをリポジトリに含める方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-css-pseudo-classes-work,-explained-with-code-and-lots-of-diagrams&quot;&gt;How CSS pseudo-classes work, explained with code and lots of diagrams&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.freecodecamp.com/explained-css-pseudo-classes-cef3c3177361&quot; title=&quot;How CSS pseudo-classes work, explained with code and lots of diagrams&quot;&gt;medium.freecodecamp.com/explained-css-pseudo-classes-cef3c3177361&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:*-of-type&lt;/code&gt;と&lt;code&gt;:*-child&lt;/code&gt;などの擬似クラスについての分かりやすい図解&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-iterators-and-generators-in-practice-–-zsolt-nagy&quot;&gt;ES6 Iterators and Generators in Practice – Zsolt Nagy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.zsoltnagy.eu/es6-iterators-and-generators-in-practice/&quot; title=&quot;ES6 Iterators and Generators in Practice – Zsolt Nagy&quot;&gt;www.zsoltnagy.eu/es6-iterators-and-generators-in-practice/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Iterator、Iterable、Generatorについて。&lt;br&gt;
サンプルコード中心でどのような挙動になるかを解説してる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dassur.ma-–-how-to-read-web-specs-part-iia-–-or:-ecmascript-symbols&quot;&gt;DasSur.ma – How to read web specs Part IIa – Or: ECMAScript Symbols&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dassur.ma/things/reading-specs-2/&quot; title=&quot;DasSur.ma – How to read web specs Part IIa – Or: ECMAScript Symbols&quot;&gt;dassur.ma/things/reading-specs-2/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptの仕様をどうやって読んでいくかについて。&lt;br&gt;
&lt;code&gt;@@iterator&lt;/code&gt;とは何か?というところから&lt;code&gt;Symbol&lt;/code&gt;の仕様を見ていく話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-2.0:-built-in-type-declarations-|-marius-schulz&quot;&gt;TypeScript 2.0: Built-In Type Declarations | Marius Schulz&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mariusschulz.com/2016/11/25/typescript-2-0-built-in-type-declarations&quot; title=&quot;TypeScript 2.0: Built-In Type Declarations | Marius Schulz&quot;&gt;blog.mariusschulz.com/2016/11/25/typescript-2-0-built-in-type-declarations&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.0のBuilt-In Typeについて。&lt;br&gt;
&lt;code&gt;--lib&lt;/code&gt;オプションで含めるビルトインのlibを指定できる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/compiler-options.html&quot; title=&quot;Compiler Options · TypeScript&quot;&gt;Compiler Options · TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-javascript-micro-templating-–-medium&quot;&gt;Understanding JavaScript Micro-Templating – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@zfrisch/understanding-javascript-micro-templating-f37a37b3b40e&quot; title=&quot;Understanding JavaScript Micro-Templating – Medium&quot;&gt;medium.com/@zfrisch/understanding-javascript-micro-templating-f37a37b3b40e&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;template&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;John Resig製の140bytesで動くMicro Templatingがどのような仕組みで動いているのかを見ていく記事。&lt;br&gt;
Functionコンストラクタ、正規表現など構成要素を丁寧に解説してる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ejohn.org/blog/javascript-micro-templating/&quot; title=&quot;John Resig - JavaScript Micro-Templating&quot;&gt;John Resig - JavaScript Micro-Templating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/Fedia/20d41d8533e0903f0123&quot; title=&quot;John Resig&amp;amp;amp;#39;s Micro-Templating in 140 bytes&quot;&gt;John Resig&amp;#39;s Micro-Templating in 140 bytes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-numbers-on-webpack-1-vs-2-–-medium&quot;&gt;The numbers on Webpack 1 vs 2 – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@u_glow/the-numbers-on-webpack-1-vs-2-7f457bb4658c&quot; title=&quot;The numbers on Webpack 1 vs 2 – Medium&quot;&gt;medium.com/@u_glow/the-numbers-on-webpack-1-vs-2-7f457bb4658c&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack 1.xと2.0βのビルドサイズやビルド時間(prod/dev)の比較&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;advanced-data-tables-in-react&quot;&gt;Advanced Data Tables in React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techblog.commercetools.com/advanced-data-tables-in-react-dbe33f8345ab&quot; title=&quot;Advanced Data Tables in React&quot;&gt;techblog.commercetools.com/advanced-data-tables-in-react-dbe33f8345ab&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactのgridライブラリの比較まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-introduction-to-mo.js-|-css-tricks&quot;&gt;An Introduction to mo.js | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/introduction-mo-js/&quot; title=&quot;An Introduction to mo.js | CSS-Tricks&quot;&gt;css-tricks.com/introduction-mo-js/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;animation&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;宣言的なアニメーションライブラリであるmo.jsについてのチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;katatema.js---✘╹◡╹✘&quot;&gt;katatema.js - ✘╹◡╹✘&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://r7kamura.hatenablog.com/entry/2016/11/24/030101&quot; title=&quot;katatema.js - ✘╹◡╹✘&quot;&gt;r7kamura.hatenablog.com/entry/2016/11/24/030101&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Next.jsみたいな形でディレクトリにReactのコンポーネントを置くとHTMLにそれぞれ変換できるツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/r7kamura/katatema&quot; title=&quot;r7kamura/katatema: A handy static site generator using React.js&quot;&gt;r7kamura/katatema: A handy static site generator using React.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-at-product-hunt-//-speaker-deck&quot;&gt;React at Product Hunt // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/rstankov/react-at-product-hunt&quot; title=&quot;React at Product Hunt // Speaker Deck&quot;&gt;speakerdeck.com/rstankov/react-at-product-hunt&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ProductHuntのJavaScript変遷についてのスライド。&lt;br&gt;
jQuery -&amp;gt; Backbone -&amp;gt; React + Redux。&lt;br&gt;
Duxyを使ったRest APIの操作についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/producthunt/duxy&quot; title=&quot;producthunt/duxy: RESTful resources&quot;&gt;producthunt/duxy: RESTful resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;azat-co/you-dont-know-node:-you-don&amp;#x27;t-know-node.js&quot;&gt;azat-co/you-dont-know-node: You Don&amp;#x27;t Know Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azat-co/you-dont-know-node&quot; title=&quot;azat-co/you-dont-know-node: You Don&amp;#39;t Know Node.js&quot;&gt;github.com/azat-co/you-dont-know-node&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsとはどのような特徴を持っているかという入門者向けの紹介。&lt;br&gt;
非同期I/O、Stream、エラーハンドリング、ネイティブモジュールについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-reference---a-free-visual-guide-to-the-most-popular-css-properties.&quot;&gt;CSS Reference - A free visual guide to the most popular CSS properties.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://cssreference.io/&quot; title=&quot;CSS Reference - A free visual guide to the most popular CSS properties.&quot;&gt;cssreference.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファレンス&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSリファレンスサイト。&lt;br&gt;
それぞれのプロパティを当てた結果を表示してくれている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;feature.js&quot;&gt;Feature.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://featurejs.com/&quot; title=&quot;Feature.js&quot;&gt;featurejs.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Modernizrのように色々な機能が利用できるかを一括で判定するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reframe.js&quot;&gt;Reframe.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dollarshaveclub.github.io/reframe.js&quot; title=&quot;Reframe.js&quot;&gt;dollarshaveclub.github.io/reframe.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;iframeなどの埋め込み要素をレスポンシブルに扱うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;immutable-css&quot;&gt;immutable-css&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://immutablecss.com/&quot; title=&quot;immutable-css&quot;&gt;immutablecss.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A CSS linter for immutable selectors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;セレクタのoverrideをチェックするLintツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nuxt/nuxt.js:-a-minimalistic-framework-for-server-rendered-vue.js-applications-(inspired-by-next.js)&quot;&gt;nuxt/nuxt.js: A minimalistic framework for server-rendered Vue.js applications (inspired by Next.js)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js&quot; title=&quot;nuxt/nuxt.js: A minimalistic framework for server-rendered Vue.js applications (inspired by Next.js)&quot;&gt;github.com/nuxt/nuxt.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Next.jsインスパイアのVue.js向けサーバサイドレンダリングフレームワーク&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 29 Nov 2016 09:37:00 +0900</pubDate>
        <link>https://jser.info/2016/11/29/node.js-v7.2.0-yarn/</link>
        <guid isPermaLink="true">https://jser.info/2016/11/29/node.js-v7.2.0-yarn/</guid>
        
        <category>Node</category>
        
        <category>Yarn</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-11-22のJS: Firefox 50、React v15.4.0、Custom Element v1</title>
        <description>&lt;p&gt;JSer.info #306 - &lt;a href=&quot;https://www.mozilla.jp/firefox/50.0/releasenotes/&quot; title=&quot;Firefox 50&quot;&gt;Firefox 50&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.jp/firefox/50.0/releasenotes/&quot;&gt;Firefox 50.0 リリースノート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/50&quot;&gt;Firefox 50 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/50/&quot;&gt;Firefox 50 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Firefox 50では、&lt;code&gt;Symbol.hasInstance&lt;/code&gt;の実装、コンソールがSource Mapを解釈するようになり、&lt;code&gt;addEventListener&lt;/code&gt;が&lt;code&gt;{ once }&lt;/code&gt;オプションをサポートしました。&lt;br&gt;
DOMにおいては、&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/API/NodeList&quot; title=&quot;NodeList&quot;&gt;NodeList&lt;/a&gt;や&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/API/DOMTokenList&quot; title=&quot;DOMTokenList&quot;&gt;DOMTokenList&lt;/a&gt;がIterableとなったため、次のように&lt;code&gt;NodeList#querySelectorAll&lt;/code&gt;の結果に対して&lt;code&gt;forEach&lt;/code&gt;メソッドなどが利用できます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;button&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また、セキュリティ面では&lt;code&gt;__Secure-&lt;/code&gt;などの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie&quot; title=&quot;Cookie prefixes&quot;&gt;Cookie prefixes&lt;/a&gt;、&lt;code&gt;X-Content-Type-Options: nosniff&lt;/code&gt;に対応しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mozsec-jp.hatenablog.jp/entry/2016/08/29/222740&quot;&gt;【翻訳】Firefox における MIME Confusion Attack の防止 - Mozilla Security Blog 日本語版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2016/08/26/mitigating-mime-confusion-attacks-in-firefox/&quot;&gt;Mitigating MIME Confusion Attacks in Firefox | Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/11/16/react-v15.4.0.html&quot; title=&quot;React v15.4.0&quot;&gt;React v15.4.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/11/16/react-v15.4.0.html&quot; title=&quot;React v15.4.0 - React Blog&quot;&gt;React v15.4.0 - React Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2015/09/10/react-v0.14-rc1.html#two-packages-react-and-react-dom&quot; title=&quot;React v0.14&quot;&gt;React v0.14&lt;/a&gt;で&lt;code&gt;react&lt;/code&gt;と&lt;code&gt;react-dom&lt;/code&gt;にパッケージが分割されていましたが、内部的にはReact DOMの実装が&lt;code&gt;react&lt;/code&gt;パッケージにも含まれていました。&lt;br&gt;
これに起因する&lt;a href=&quot;https://github.com/facebook/react/issues/7386&quot;&gt;問題&lt;/a&gt;があったため、React v15.4.0では内部的に残っていたReact DOMの実装を&lt;code&gt;react&lt;/code&gt;パッケージから削除されました。&lt;/p&gt;

&lt;p&gt;この変更に影響を受けるのは、&lt;code&gt;require(&amp;quot;react/lib/merge&amp;quot;)&lt;/code&gt;のように直接ReactのPrivate APIを利用していた場合のみです。&lt;br&gt;
この&lt;a href=&quot;https://nodejs.org/api/modules.html#modules_addenda_package_manager_tips&quot; title=&quot;require()&quot;&gt;require()&lt;/a&gt;を使った直接参照は、React 0.12頃から非推奨となっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/flux/issues/77&quot;&gt;Dont use require(&amp;#39;react/lib/*&amp;#39;) in examples &amp;amp; docs · Issue #77 · facebook/flux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react/issues/2251&quot;&gt;Allow internal components to be used in the browser version · Issue #2251 · facebook/react&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react/pull/2317&quot;&gt;Ship merge, mergeInto, copyProperties to npm by zpao · Pull Request #2317 · facebook/react&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react/issues/6460&quot; title=&quot;Rename react/lib/* to react/private/* · Issue #6460 · facebook/react&quot;&gt;Rename react/lib/* to react/private/* · Issue #6460 · facebook/react&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、React v15.4.0では&lt;code&gt;?react_perf&lt;/code&gt;をURLにつけることにより、User Timing APIでのパフォーマンス計測ができるようになっています。&lt;br&gt;
&lt;code&gt;performance.mark&lt;/code&gt;や&lt;code&gt;performance.measure&lt;/code&gt;を利用し実現しているので、次の記事を見てみると面白いかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2016/08/15/performance.mark/&quot; title=&quot;performance.markでパフォーマンス計測する | Web Scratch&quot;&gt;performance.markでパフォーマンス計測する | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7027/introducing-custom-elements/&quot; title=&quot;Introducing Custom Elements | WebKit&quot;&gt;Introducing Custom Elements | WebKit&lt;/a&gt;では、WebKitのCustom Elements実装者によるCustom Elements(v1)の解説が書かれています。&lt;/p&gt;

&lt;p&gt;Custom Elementsのライフサイクルの話などが詳しく書かれているので、興味がある人は読んでみるといいです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-50.0-リリースノート&quot;&gt;Firefox 50.0 リリースノート&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.jp/firefox/50.0/releasenotes/&quot; title=&quot;Firefox 50.0 リリースノート&quot;&gt;www.mozilla.jp/firefox/50.0/releasenotes/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 50リリース。&lt;br&gt;
WebM EMEのサポート、&lt;code&gt;Symbol.hasInstance&lt;/code&gt;の実装、コンソールがSource Mapを解釈するように。&lt;br&gt;
&lt;code&gt;addEventListener&lt;/code&gt;が&lt;code&gt;once&lt;/code&gt;オプション、&lt;code&gt;X-Content-Type-Options&lt;/code&gt;ヘッダーのサポート、など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/50&quot; title=&quot;Firefox 50 for developers - Mozilla | MDN&quot;&gt;Firefox 50 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/50/&quot; title=&quot;Firefox 50 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 50 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-18-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 18 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7078/release-notes-for-safari-technology-preview-18/&quot; title=&quot;Release Notes for Safari Technology Preview 18 | WebKit&quot;&gt;webkit.org/blog/7078/release-notes-for-safari-technology-preview-18/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 18リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-v15.4.0---react-blog&quot;&gt;React v15.4.0 - React Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/11/16/react-v15.4.0.html&quot; title=&quot;React v15.4.0 - React Blog&quot;&gt;facebook.github.io/react/blog/2016/11/16/react-v15.4.0.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React v15.4.0リリース。&lt;br&gt;
内部的に存在していた &lt;code&gt;react/lib/*&lt;/code&gt; のPrivate APIを削除、&lt;code&gt;?react_perf&lt;/code&gt;を付けることでUser Timingベースのプロファイリングを取れるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;6.19.0-released-·-babel&quot;&gt;6.19.0 Released · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2016/11/16/6.19.0&quot; title=&quot;6.19.0 Released · Babel&quot;&gt;babeljs.io/blog/2016/11/16/6.19.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel v6.19.0リリース。&lt;br&gt;
babel-plugin-transform-object-rest-spreadが単独のPluginとして動くように。&lt;br&gt;
stage-2 presetに&lt;code&gt;babel-plugin-syntax-dynamic-import&lt;/code&gt;を追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://babeljs.io/docs/plugins/transform-object-rest-spread/&quot; title=&quot;Object rest spread transform · Babel&quot;&gt;Object rest spread transform · Babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-0.17.0-·-avajs/ava&quot;&gt;Release 0.17.0 · avajs/ava&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avajs/ava/releases/tag/v0.17.0&quot; title=&quot;Release 0.17.0 · avajs/ava&quot;&gt;github.com/avajs/ava/releases/tag/v0.17.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AVA 0.17.0リリース。&lt;br&gt;
&lt;code&gt;process.cws()&lt;/code&gt;を&lt;code&gt;package.json&lt;/code&gt;と同じディレクトリに変更、Node.js v4&amp;gt;=のみのサポート、&lt;code&gt;--require&lt;/code&gt; CLIオプションの削除、&lt;code&gt;karma-ava&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/avajs/ava-codemods#migrating-to-ava&quot; title=&quot;avajs/ava-codemods: Codemods for AVA&quot;&gt;avajs/ava-codemods: Codemods for AVA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-fetch-2.0.0-·-github/fetch&quot;&gt;Release fetch 2.0.0 · github/fetch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/github/fetch/releases/tag/v2.0.0&quot; title=&quot;Release fetch 2.0.0 · github/fetch&quot;&gt;github.com/github/fetch/releases/tag/v2.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fetch APIのpolyfillライブラリである&lt;code&gt;fetch&lt;/code&gt; 2.0.0リリース。&lt;br&gt;
&lt;code&gt;Header.get()&lt;/code&gt;の挙動変更、&lt;code&gt;Headers.getAll()&lt;/code&gt;の削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-2.2.0-now-available&quot;&gt;Angular 2.2.0 Now Available&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.com/2016/11/angular-220-now-available.html&quot; title=&quot;Angular 2.2.0 Now Available&quot;&gt;angularjs.blogspot.com/2016/11/angular-220-now-available.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS 2.2.0リリース。&lt;br&gt;
&lt;code&gt;@anguar/upgrade&lt;/code&gt;を使い1.xと2.xを共存させる場合にRouterでどちらも扱えるようにする仕組みの追加、JavaScriptで使う場合のガイドの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://angular.io/docs/ts/latest/cookbook/ts-to-js.html&quot; title=&quot;TypeScript to JavaScript - ts - COOKBOOK&quot;&gt;TypeScript to JavaScript - ts - COOKBOOK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://vsavkin.com/migrating-angular-1-applications-to-angular-2-in-5-simple-steps-40621800a25b&quot; title=&quot;Migrating Angular 1 Applications to Angular 2 in 5 Simple Steps&quot;&gt;Migrating Angular 1 Applications to Angular 2 in 5 Simple Steps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;these-weeks-in-firefox:-issue-5-|-firefox-nightly-news&quot;&gt;These Weeks in Firefox: Issue 5 | Firefox Nightly News&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.nightly.mozilla.org/2016/11/16/these-weeks-in-firefox-issue-5/&quot; title=&quot;These Weeks in Firefox: Issue 5 | Firefox Nightly News&quot;&gt;blog.nightly.mozilla.org/2016/11/16/these-weeks-in-firefox-issue-5/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox Nightly 52における変更点のハイライト。&lt;br&gt;
async/awaitの対応、ネットワークのスロットリングツールの追加、&lt;code&gt;&amp;lt;input type=&amp;quot;time&amp;quot;&amp;gt;&lt;/code&gt;のUI改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-custom-elements-|-webkit&quot;&gt;Introducing Custom Elements | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7027/introducing-custom-elements/&quot; title=&quot;Introducing Custom Elements | WebKit&quot;&gt;webkit.org/blog/7027/introducing-custom-elements/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Custom Elementについて。&lt;br&gt;
HTMLElementのサブクラスでの定義、ライフサイクルのコールバックイベントは同期的に呼ばれる点について。&lt;br&gt;
また、非同期でCustom Elementが&lt;code&gt;deinfe&lt;/code&gt;されたことを&lt;code&gt;whenDefined&lt;/code&gt;で検知する方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-win-in-web-framework-benchmarks-–-medium&quot;&gt;How to win in Web Framework Benchmarks – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@localvoid/how-to-win-in-web-framework-benchmarks-8bc31af76ce7&quot; title=&quot;How to win in Web Framework Benchmarks – Medium&quot;&gt;medium.com/@localvoid/how-to-win-in-web-framework-benchmarks-8bc31af76ce7&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VirtualDOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;benchmark&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;kiviというReactのようなUIライブラリを作っていくにあたりベンチマークを見てどのような最適化をしていくかという話。&lt;br&gt;
色々なDOMライブラリのベンチマークを試し、どのような点を改善すれば結果がよくなったかという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/localvoid/kivi&quot; title=&quot;localvoid/kivi: Javascript (TypeScript) library for building web user interfaces&quot;&gt;localvoid/kivi: Javascript (TypeScript) library for building web user interfaces&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;choosing-ember-over-react-in-2016&quot;&gt;Choosing Ember over React in 2016&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.instant2fa.com/choosing-ember-over-react-in-2016-41a2e7fd341&quot; title=&quot;Choosing Ember over React in 2016&quot;&gt;blog.instant2fa.com/choosing-ember-over-react-in-2016-41a2e7fd341&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Instant 2FAというサービスをEmberで作ってみて良かったところと良くなかったところについて。&lt;br&gt;
&lt;code&gt;ember-cli&lt;/code&gt;について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;for..in-versus-for..of-loops&quot;&gt;for..in versus for..of Loops&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bitsofco.de/for-in-vs-for-of/&quot; title=&quot;for..in versus for..of Loops&quot;&gt;bitsofco.de/for-in-vs-for-of/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;for...of&lt;/code&gt;と&lt;code&gt;for...in&lt;/code&gt;の違いについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-with-reduxによる大規模商用サービスの開発-/-nodefest2016-//-speaker-deck&quot;&gt;React with Reduxによる大規模商用サービスの開発 / nodefest2016 // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/yoshidan/nodefest2016&quot; title=&quot;React with Reduxによる大規模商用サービスの開発 / nodefest2016 // Speaker Deck&quot;&gt;speakerdeck.com/yoshidan/nodefest2016&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React + Reduxにおける注意点について。&lt;br&gt;
画面遷移とJavaScriptファイルの分割、サーバサイドレンダリングの手法とコストについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://engineer.recruit-lifestyle.co.jp/techblog/2016-11-16-isomorphic-javascript/&quot; title=&quot;React + Reduxで作ったIsomorphic(Universal) JSなサービス開発の裏側 - Tech Blog - Recruit Lifestyle Engineer&quot;&gt;React + Reduxで作ったIsomorphic(Universal) JSなサービス開発の裏側 - Tech Blog - Recruit Lifestyle Engineer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;💓-vue.js&quot;&gt;💓 Vue.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nakajmg.github.io/s/161119-vue/&quot; title=&quot;💓 Vue.js&quot;&gt;nakajmg.github.io/s/161119-vue/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue.jsについてのスライド。&lt;br&gt;
コンソールにTranscriptが出る。&lt;br&gt;
Vue.js 2.xの特徴やエコシステム、ツールなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;about_hiroppyさんの「ecmascript」-/-about_hiroppy-さん---ニコナレ&quot;&gt;about_hiroppyさんの「ECMAScript」 / about_hiroppy さん - ニコナレ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://niconare.nicovideo.jp/watch/kn1937&quot; title=&quot;about\_hiroppyさんの「ECMAScript」 / about\_hiroppy さん - ニコナレ&quot;&gt;niconare.nicovideo.jp/watch/kn1937&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptの策定プロセスとES2016/2017について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://niconare.nicovideo.jp/watch/kn1936&quot; title=&quot;ECMAScript / about\_hiroppy さん - ニコナレ&quot;&gt;ECMAScript / about_hiroppy さん - ニコナレ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;paulirish/pwmetrics:-progressive-web-metrics-at-your-fingertipz&quot;&gt;paulirish/pwmetrics: Progressive web metrics at your fingertipz&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/paulirish/pwmetrics&quot; title=&quot;paulirish/pwmetrics: Progressive web metrics at your fingertipz&quot;&gt;github.com/paulirish/pwmetrics&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;lighthouseを使ったパフォーマンスメトリクスの可視化ツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/&quot; title=&quot;GoogleChrome/lighthouse: auditing and performance metrics for Progressive Web Apps&quot;&gt;GoogleChrome/lighthouse: auditing and performance metrics for Progressive Web Apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dylanb/react-axe:-accessibility-auditing-for-react.js-applications&quot;&gt;dylanb/react-axe: Accessibility auditing for React.js applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dylanb/react-axe&quot; title=&quot;dylanb/react-axe: Accessibility auditing for React.js applications&quot;&gt;github.com/dylanb/react-axe&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;axe-coreをつかったアクセシビリティチェックを行うReactライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;victory&quot;&gt;Victory&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://formidable.com/open-source/victory/&quot; title=&quot;Victory&quot;&gt;formidable.com/open-source/victory/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;グラフ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentとしてグラフを書く事ができるライブラリ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://formidable.com/blog/2016/11/09/flexible-charting-in-react-with-victory/&quot; title=&quot;Flexible Charting in React with Victory (and Introducing FormidableCharts) | Formidable&quot;&gt;Flexible Charting in React with Victory (and Introducing FormidableCharts) | Formidable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 22 Nov 2016 10:06:00 +0900</pubDate>
        <link>https://jser.info/2016/11/22/firefox-50-react-v15.4.0-custom-element-v1/</link>
        <guid isPermaLink="true">https://jser.info/2016/11/22/firefox-50-react-v15.4.0-custom-element-v1/</guid>
        
        <category>Firefox</category>
        
        <category>React</category>
        
        <category>WebKit</category>
        
        <category>WebComponents</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-11-15のJS: TypeScript 2.1RC、Node.js v7.1.0リリース</title>
        <description>&lt;p&gt;JSer.info #305 - TypeScript 2.1 RCがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/11/08/typescript-2-1-rc-better-inference-async-functions-and-more/&quot; title=&quot;TypeScript 2.1 RC: Better Inference, Async Functions, and More | TypeScript&quot;&gt;TypeScript 2.1 RC: Better Inference, Async Functions, and More | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/Roadmap#21-november-2016&quot; title=&quot;Roadmap · Microsoft/TypeScript Wiki&quot;&gt;Roadmap · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/vvakame/items/305749d3d6dc6bf877c6&quot; title=&quot;TypeScript 2.1.1 変更点 - Qiita&quot;&gt;TypeScript 2.1.1 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.1ではasync/awaitがES3とES5への出力ができるようになりました。&lt;br&gt;
また、tsconfig.jsonに&lt;code&gt;extends&lt;/code&gt;の追加、&lt;code&gt;--target ESNext&lt;/code&gt;のサポート、JSXをReact以外でも利用できるように&lt;a href=&quot;https://github.com/Microsoft/TypeScript/pull/12135&quot; title=&quot;--jsxFactory&quot;&gt;--jsxFactory&lt;/a&gt;の追加などが行われています。&lt;/p&gt;

&lt;p&gt;RC時点(2.1.1)ではまだ入っていませんが、正式リリース時には&lt;a href=&quot;https://github.com/Microsoft/TypeScript/pull/12114&quot; title=&quot;Mapped types&quot;&gt;Mapped types&lt;/a&gt;などの追加も予定されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Node.js v7.1.0リリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.1.0/&quot; title=&quot;Node v7.1.0 (Current) | Node.js&quot;&gt;Node v7.1.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js v7.0.0で&lt;code&gt;String(global)&lt;/code&gt;に&lt;a href=&quot;https://github.com/nodejs/node/issues/9274&quot; title=&quot;Native class of `global` changed in Node v7 · Issue #9274 · nodejs/node&quot;&gt;意図しない破壊的な変更&lt;/a&gt;が入っていたのが修正されました。&lt;/p&gt;

&lt;p&gt;V8の&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-object.prototype.tostring&quot;&gt;ECMAScript仕様追従&lt;/a&gt;により、Node.js v7.0.0で&lt;code&gt;String(global)&lt;/code&gt;が&lt;code&gt;&amp;quot;[object Object]&amp;quot;&lt;/code&gt;を返すようになっていました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Node.js v7.0.0&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// &amp;quot;[object Object]&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;そのため&lt;code&gt;global[Symbol.toStringTag]&lt;/code&gt;が定義されました。これにより、今までと同じ &lt;code&gt;&amp;quot;[object global]&amp;quot;&lt;/code&gt;が返されるようになっています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Node.js v7.1.0&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// &amp;quot;[object global]&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/9279&quot; title=&quot;lib: make `String(global) === &amp;amp;#39;[object global]&amp;amp;#39;` by addaleax · Pull Request #9279 · nodejs/node&quot;&gt;lib: make &lt;code&gt;String(global) === &amp;#39;[object global]&amp;#39;&lt;/code&gt; by addaleax · Pull Request #9279 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この&lt;a href=&quot;https://github.com/nodejs/node/issues/9274#issuecomment-256149041&quot;&gt;パターン&lt;/a&gt;はNode.jsで実行されているかを判定するために使ってるモジュールがあったため、一度元の挙動(Node.js v6)に戻すようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/addaleax/01e287d8a1674eaeaaa3af725f7653ef&quot; title=&quot;npm grep for &amp;amp;#39;object global&amp;amp;#39; on Oct 26 2016&quot;&gt;npm grep for &amp;#39;object global&amp;#39; on Oct 26 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/9279#issuecomment-257724083&quot; title=&quot;lib: make `String(global) === &amp;amp;#39;[object global]&amp;amp;#39;` by addaleax · Pull Request #9279 · nodejs/node&quot;&gt;lib: make &lt;code&gt;String(global) === &amp;#39;[object global]&amp;#39;&lt;/code&gt; by addaleax · Pull Request #9279 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testcafe-v0.10.0-released-|-testcafe&quot;&gt;TestCafe v0.10.0 Released | TestCafe&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://devexpress.github.io/testcafe/blog/testcafe-v0-10-0-released.html&quot; title=&quot;TestCafe v0.10.0 Released | TestCafe&quot;&gt;devexpress.github.io/testcafe/blog/testcafe-v0-10-0-released.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TestCafe v0.10.0リリース。&lt;br&gt;
Snapshot APIを扱いやすく、automatic waitの仕組みを改善、&lt;code&gt;speed&lt;/code&gt;オプションでテストの実行速度をコントールできるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-2.1-rc:-better-inference,-async-functions,-and-more-|-typescript&quot;&gt;TypeScript 2.1 RC: Better Inference, Async Functions, and More | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/11/08/typescript-2-1-rc-better-inference-async-functions-and-more/&quot; title=&quot;TypeScript 2.1 RC: Better Inference, Async Functions, and More | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2016/11/08/typescript-2-1-rc-better-inference-async-functions-and-more/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.1 RCリリース。&lt;br&gt;
&lt;code&gt;any&lt;/code&gt;型の改善、tsconfig.jsonの&lt;code&gt;extends&lt;/code&gt;対応、async/awaitがES3/ES5へ出力できるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/vvakame/items/305749d3d6dc6bf877c6&quot; title=&quot;TypeScript 2.1.1 変更点 - Qiita&quot;&gt;TypeScript 2.1.1 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7.1.0-(current)-|-node.js&quot;&gt;Node v7.1.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.1.0/&quot; title=&quot;Node v7.1.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v7.1.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v7.1.0リリース。&lt;br&gt;
V8の仕様追従により意図しない破壊的な変更が起きていた。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// &amp;quot;[object Object]&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;そのため&lt;code&gt;global[Symbol.toStringTag]&lt;/code&gt;が定義された。これにより、今までと同じ &lt;code&gt;&amp;quot;[object global]&amp;quot;&lt;/code&gt;が返されるようになった。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;global&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// &amp;quot;[object global]&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/9279&quot; title=&quot;lib: make `String(global) === &amp;amp;#39;[object global]&amp;amp;#39;` by addaleax · Pull Request #9279 · nodejs/node&quot;&gt;lib: make &lt;code&gt;String(global) === &amp;#39;[object global]&amp;#39;&lt;/code&gt; by addaleax · Pull Request #9279 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-17-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 17 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7071/release-notes-for-safari-technology-preview-17/&quot; title=&quot;Release Notes for Safari Technology Preview 17 | WebKit&quot;&gt;webkit.org/blog/7071/release-notes-for-safari-technology-preview-17/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 17リリース。&lt;br&gt;
NPAPIプラグインのサポート終了、Custom Elementのデフォルト有効化、&lt;code&gt;rel=noopener&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrating-to-jest-–-medium&quot;&gt;Migrating to Jest – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@kentcdodds/migrating-to-jest-881f75366e7e&quot; title=&quot;Migrating to Jest – Medium&quot;&gt;medium.com/@kentcdodds/migrating-to-jest-881f75366e7e&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AVAとMochaでのテストをJestにマイグレーションする方法とツール(codemods)について。&lt;br&gt;
UI testsの時間が短縮されてる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/skovhus/jest-codemods&quot; title=&quot;skovhus/jest-codemods: Codemods for migrating to Jest https://github.com/facebook/jest&quot;&gt;skovhus/jest-codemods: Codemods for migrating to Jest https://github.com/facebook/jest&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrating-an-angular-1-app-to-angular-2---part-1&quot;&gt;Migrating an Angular 1 App to Angular 2 - Part 1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://auth0.com/blog/migrating-an-angular-1-app-to-angular-2-part-1/&quot; title=&quot;Migrating an Angular 1 App to Angular 2 - Part 1&quot;&gt;auth0.com/blog/migrating-an-angular-1-app-to-angular-2-part-1/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS 1.xのアプリをAngularJS 2へマイグレーションするチュートリアル&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/auth0-blog/ng2-dinos&quot; title=&quot;auth0-blog/ng2-dinos: A sample Angular 2 application&quot;&gt;auth0-blog/ng2-dinos: A sample Angular 2 application&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flocssを使ってcssファイルを20,000行から9,000行にした話---qiita&quot;&gt;FLOCSSを使ってCSSファイルを20,000行から9,000行にした話 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/Atsss/items/4f9d98fb1d0546539c09&quot; title=&quot;FLOCSSを使ってCSSファイルを20,000行から9,000行にした話 - Qiita&quot;&gt;qiita.com/Atsss/items/4f9d98fb1d0546539c09&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;リファクタリング&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSのリファクタリング手法や方針について。&lt;br&gt;
どのようなフローでリファクタリングを進めていったかや進捗の可視化について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2016年、web-audio-api-はどう変わったのか?-|-g200kg-music-&amp;amp;-software&quot;&gt;2016年、Web Audio API はどう変わったのか? | g200kg Music &amp;amp; Software&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.g200kg.com/archives/2016/11/2016web-audio-a.html&quot; title=&quot;2016年、Web Audio API はどう変わったのか? | g200kg Music &amp;amp; Software&quot;&gt;www.g200kg.com/archives/2016/11/2016web-audio-a.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;API&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Audio APIの変更点について。&lt;br&gt;
AudioWorkerがAudioWorkletにリネーム、ConstantSourceNodeの追加、コンストラクタのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;writing-a-javascript-framework---data-binding-with-es6-proxies-|-@risingstack&quot;&gt;Writing a JavaScript Framework - Data Binding with ES6 Proxies | @RisingStack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.risingstack.com/writing-a-javascript-framework-data-binding-es6-proxy/&quot; title=&quot;Writing a JavaScript Framework - Data Binding with ES6 Proxies | @RisingStack&quot;&gt;blog.risingstack.com/writing-a-javascript-framework-data-binding-es6-proxy/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ProxyやReflect APIを使い、値の変更を監視するObservableライブラリ。&lt;br&gt;
ES5のgetter/setterを使ったアプローチとの比較&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/RisingStack/nx-observe&quot; title=&quot;RisingStack/nx-observe: Next gen data observation/binding with ES6 Proxies&quot;&gt;RisingStack/nx-observe: Next gen data observation/binding with ES6 Proxies&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pitfall:-not-all-objects-can-be-proxied-transparently&quot;&gt;Pitfall: not all objects can be proxied transparently&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2016/11/proxying-builtins.html&quot; title=&quot;Pitfall: not all objects can be proxied transparently&quot;&gt;www.2ality.com/2016/11/proxying-builtins.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2015のProxyでhandlerオブジェクトが空である場合に透過的な動作を期待するがそうではないという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;logging-errors-in-client-side-applications&quot;&gt;Logging Errors in Client-Side Applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/logging-errors-client-side-apps/&quot; title=&quot;Logging Errors in Client-Side Applications&quot;&gt;www.sitepoint.com/logging-errors-client-side-apps/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;クライアントサイドのロガーやエラー収集サービスについてのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;improving-perceived-performance-with-multiple-background-images-–-css-wizardry-–-css,-oocss,-front-end-architecture,-performance-and-more,-by-harry-roberts&quot;&gt;Improving Perceived Performance with Multiple Background Images – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://csswizardry.com/2016/10/improving-perceived-performance-with-multiple-background-images/&quot; title=&quot;Improving Perceived Performance with Multiple Background Images – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts&quot;&gt;csswizardry.com/2016/10/improving-perceived-performance-with-multiple-background-images/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;画像&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;background-image&lt;/code&gt;に指定した画像が表示されるまで、&lt;code&gt;linear-gradient&lt;/code&gt;を使った模様を代替表示するFallbackについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chrome-dev-summit-2016---youtube&quot;&gt;Chrome Dev Summit 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/user/ChromeDevelopers&quot; title=&quot;Chrome Dev Summit 2016 - YouTube&quot;&gt;www.youtube.com/user/ChromeDevelopers&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome Dev Summit 2016の動画まとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.chrome.com/devsummit/&quot; title=&quot;Chrome Dev Summit 2016&quot;&gt;Chrome Dev Summit 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deck.gl&quot;&gt;deck.gl&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://uber.github.io/deck.gl/&quot; title=&quot;deck.gl&quot;&gt;uber.github.io/deck.gl/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Uber製のWebGLを使ったデータビジュアライゼーションライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;doiuse...?&quot;&gt;doiuse...?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.doiuse.com/&quot; title=&quot;doiuse...?&quot;&gt;www.doiuse.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tool&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSをペーストして指定したブラウザ(autoprefixerのフォーマット)で利用できるかをチェックできるツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/anandthakker/doiuse&quot; title=&quot;anandthakker/doiuse: Lint CSS for browser support against caniuse database.&quot;&gt;anandthakker/doiuse: Lint CSS for browser support against caniuse database.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;caiogondim/logdown.js:-debug-utility-with-markdown-support-that-runs-on-browser-and-server&quot;&gt;caiogondim/logdown.js: Debug utility with markdown support that runs on browser and server&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/caiogondim/logdown.js&quot; title=&quot;caiogondim/logdown.js: Debug utility with markdown support that runs on browser and server&quot;&gt;github.com/caiogondim/logdown.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ブラウザとNode.jsで動くシンプルなロガーライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;th0r/webpack-bundle-analyzer:-webpack-plugin-and-cli-utility-that-represents-bundle-content-as-convenient-interactive-zoomable-treemap&quot;&gt;th0r/webpack-bundle-analyzer: Webpack plugin and CLI utility that represents bundle content as convenient interactive zoomable treemap&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/th0r/webpack-bundle-analyzer&quot; title=&quot;th0r/webpack-bundle-analyzer: Webpack plugin and CLI utility that represents bundle content as convenient interactive zoomable treemap&quot;&gt;github.com/th0r/webpack-bundle-analyzer&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackのbundleの構成要素やサイズをビジュアライズできるプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;djwassink/promise-parallel-throttle:-it&amp;#x27;s-like-promise.all(),-but-throttled!&quot;&gt;DJWassink/Promise-parallel-throttle: It&amp;#x27;s like Promise.all(), but throttled!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/DJWassink/Promise-parallel-throttle&quot; title=&quot;DJWassink/Promise-parallel-throttle: It&amp;#39;s like Promise.all(), but throttled!&quot;&gt;github.com/DJWassink/Promise-parallel-throttle&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;一度に実行する数を指定できる&lt;code&gt;Promise.all&lt;/code&gt;的なライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dop251/goja:-ecmascript-5.1(+)-implementation-written-in-go&quot;&gt;dop251/goja: ECMAScript 5.1(+) implementation written in Go&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dop251/goja&quot; title=&quot;dop251/goja: ECMAScript 5.1(+) implementation written in Go&quot;&gt;github.com/dop251/goja&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;golang&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptのGo言語実装。&lt;br&gt;
ES5.1相当の実装をしてる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dhamaniasad/headlessbrowsers:-a-list-of-(almost)-all-headless-web-browsers-in-existence&quot;&gt;dhamaniasad/HeadlessBrowsers: A list of (almost) all headless web browsers in existence&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dhamaniasad/HeadlessBrowsers&quot; title=&quot;dhamaniasad/HeadlessBrowsers: A list of (almost) all headless web browsers in existence&quot;&gt;github.com/dhamaniasad/HeadlessBrowsers&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ヘッドレスブラウザ(テストのためのライブラリも含む)のまとめ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 15 Nov 2016 10:22:00 +0900</pubDate>
        <link>https://jser.info/2016/11/15/typescript-2.1rc-node.js-v7.1.0/</link>
        <guid isPermaLink="true">https://jser.info/2016/11/15/typescript-2.1rc-node.js-v7.1.0/</guid>
        
        <category>TypeScript</category>
        
        <category>Node.js</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-11-08のJS: sitespeed.io 4.0、webpack 2 beta入門、JavaScriptスタックチュートリアル</title>
        <description>&lt;p&gt;JSer.info #304 - ウェブサイトのパフォーマンス計測ツールである&lt;a href=&quot;https://www.sitespeed.io/&quot; title=&quot;sitespeed.io&quot;&gt;sitespeed.io&lt;/a&gt; v4.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.sitespeed.io/sitespeed.io-4.0-is-released/&quot;&gt;Welcome sitespeed.io 4.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;4.0ではGraphite/Grafanaと組み合わせた&lt;a href=&quot;https://www.sitespeed.io/documentation/sitespeed.io/performance-dasboard/&quot; title=&quot;Performance Dashboard&quot;&gt;Performance Dashboard&lt;/a&gt;がセットアップできるDockerの設定も公開されています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;curl -O https://raw.githubusercontent.com/sitespeedio/sitespeed.io/master/docker/docker-compose.yml
docker-compose up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;関連(v4より前の設定)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/Jxck_/items/abfa9f3dd15c5572cbfd&quot;&gt;graphite, grafana, sitespeed.io, diamond で継続 Web パフォーマンスモニタリング - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://havelog.ayumusato.com/develop/performance/e670-use_docker_instead_of_hosted_graphite.html&quot;&gt;続・パフォーマンス計測実験で Graphite も Docker に置き換えた ::ハブろぐ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;またv4.0では、Pre/Postスクリプトでログインに対応、プラグインの仕組み、HTTP/2、HARファイルの対応改善、モバイル対応などの改善が含まれています。&lt;/p&gt;

&lt;p&gt;単純に&lt;a href=&quot;https://www.sitespeed.io/&quot; title=&quot;sitespeed.io&quot;&gt;sitespeed.io&lt;/a&gt;でチェックするだけなら、npmで簡単に入るので試してみると面白いかもしれません。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install -g sitespeed.io
sitespeed.io https://jser.info
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.madewithenvy.com/getting-started-with-webpack-2-ed2b86c68783&quot;&gt;Getting Started with Webpack 2&lt;/a&gt;という記事では、webpack 2(beta)を元にしたチュートリアルが紹介されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/issues/1545#issuecomment-255614222&quot;&gt;webpack#1545&lt;/a&gt;に作者である@&lt;a href=&quot;https://github.com/sokra&quot; title=&quot;sokra&quot;&gt;sokra&lt;/a&gt;によるwebpack 2のステータスについて書かれています。&lt;/p&gt;

&lt;p&gt;「今年中にはリリースしたいが、まだドキュメント周りにまだ問題があるためContributionを歓迎しています」とのことです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/verekia/js-stack-from-scratch&quot; title=&quot;JavaScript Stack from Scratch&quot;&gt;JavaScript Stack from Scratch&lt;/a&gt;(&lt;a href=&quot;https://github.com/takahashim/js-stack-from-scratch&quot;&gt;翻訳: ゼロから始めるJavaScript生活&lt;/a&gt;)では、JavaScriptのエコシステムを活用するチュートリアルが公開されています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;これら全てのツールを一緒につなぎ合わせることにフォーカスしており、各ツールについて可能な限りシンプルな例を提供します。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とあるようにツールを組み合わせて利用することを主軸としているので、一度見てみると面白いかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;welcome-sitespeed.io-4.0&quot;&gt;Welcome sitespeed.io 4.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitespeed.io/sitespeed.io-4.0-is-released/&quot; title=&quot;Welcome sitespeed.io 4.0&quot;&gt;www.sitespeed.io/sitespeed.io-4.0-is-released/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Sitespeed.io 4.0リリース。&lt;br&gt;
Dockerでgrafanaのダッシュボードを含んだセットアップが用意された、Pre/Postスクリプトでログインに対応、プラグイン、HTTP/2、HARファイルの対応改善、モバイル対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.34.0-·-facebook/flow&quot;&gt;Release v0.34.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.34.0&quot; title=&quot;Release v0.34.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.34.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;FlowType v0.34.0リリース。&lt;br&gt;
&lt;code&gt;empty&lt;/code&gt; typeの追加、AsyncIterationの対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;async/await-support-in-firefox-|-firefox-nightly-news&quot;&gt;async/await support in Firefox | Firefox Nightly News&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.nightly.mozilla.org/2016/11/01/async-await-support-in-firefox/&quot; title=&quot;async/await support in Firefox | Firefox Nightly News&quot;&gt;blog.nightly.mozilla.org/2016/11/01/async-await-support-in-firefox/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox Nightlyにasync/awaitが実装された。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;getting-started-with-webpack-2&quot;&gt;Getting Started with Webpack 2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.madewithenvy.com/getting-started-with-webpack-2-ed2b86c68783&quot; title=&quot;Getting Started with Webpack 2&quot;&gt;blog.madewithenvy.com/getting-started-with-webpack-2-ed2b86c68783&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack 2を使ったビルドの設定について。&lt;br&gt;
multiple entry、loader、bundleの分割などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#x27;s-new-and-what&amp;#x27;s-changed-in-bootstrap-4--telerik-developer-network&quot;&gt;What&amp;#x27;s New and What&amp;#x27;s Changed in Bootstrap 4 -Telerik Developer Network&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/whats-new-whats-changed-bootstrap-4/&quot; title=&quot;What&amp;#39;s New and What&amp;#39;s Changed in Bootstrap 4 -Telerik Developer Network&quot;&gt;developer.telerik.com/featured/whats-new-whats-changed-bootstrap-4/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap 4αでの変更点について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue.js-1.x-から-2.0-への移行のポイント-|-d.sunnyone.org&quot;&gt;Vue.js 1.x から 2.0 への移行のポイント | d.sunnyone.org&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://d.sunnyone.org/2016/11/vuejs-1x-20.html&quot; title=&quot;Vue.js 1.x から 2.0 への移行のポイント | d.sunnyone.org&quot;&gt;d.sunnyone.org/2016/11/vuejs-1x-20.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue 1.xから2.0へのマイグレーションについて。&lt;br&gt;
テンプレートが事前コンパイルされるようになったことでの違いや移行方法、気をつけるポイントについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-2.0:-read-only-properties-|-marius-schulz&quot;&gt;TypeScript 2.0: Read-Only Properties | Marius Schulz&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mariusschulz.com/2016/10/31/typescript-2-0-read-only-properties&quot; title=&quot;TypeScript 2.0: Read-Only Properties | Marius Schulz&quot;&gt;blog.mariusschulz.com/2016/10/31/typescript-2-0-read-only-properties&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.0の&lt;code&gt;readonly&lt;/code&gt;について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cooperative-scheduling-with-requestidlecallback-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Cooperative Scheduling with requestIdleCallback ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/11/cooperative-scheduling-with-requestidlecallback/&quot; title=&quot;Cooperative Scheduling with requestIdleCallback ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/11/cooperative-scheduling-with-requestidlecallback/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 52で実装される&lt;code&gt;requestIdleCallback&lt;/code&gt;についての解説。&lt;br&gt;
&lt;code&gt;timeRemaining()&lt;/code&gt;、&lt;code&gt;timeout&lt;/code&gt;オプションやキャンセルした場合についてなど。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://triple-underscore.github.io/requestidlecallback-ja.html&quot; title=&quot;Cooperative Scheduling of Background Tasks（日本語訳）&quot;&gt;Cooperative Scheduling of Background Tasks（日本語訳）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2015/08/using-requestidlecallback&quot; title=&quot;Using requestIdleCallback  |  Web  |  Google Developers&quot;&gt;Using requestIdleCallback  |  Web  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pointing-the-way-forward-|-web-|-google-developers&quot;&gt;Pointing the Way Forward  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/10/pointer-events&quot; title=&quot;Pointing the Way Forward  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2016/10/pointer-events&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Pointer eventsについて。&lt;br&gt;
PenやTouchなどのイベントモデルを抽象化したもの。&lt;br&gt;
&lt;code&gt;pointerType&lt;/code&gt;でイベントの種類ごと扱う方法、&lt;code&gt;pointercancel&lt;/code&gt;や&lt;code&gt;touch-action&lt;/code&gt;について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;build-a-universal-javascript-app-with-next.js&quot;&gt;Build a Universal JavaScript App with Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://auth0.com/blog/building-universal-apps-with-nextjs/&quot; title=&quot;Build a Universal JavaScript App with Next.js&quot;&gt;auth0.com/blog/building-universal-apps-with-nextjs/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;サーバー&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Next.jsを使ったアプリケーションを作るチュートリアル。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;takahashim/js-stack-from-scratch:-step-by-step-tutorial-to-build-a-modern-javascript-stack-from-scratch&quot;&gt;takahashim/js-stack-from-scratch: Step-by-step tutorial to build a modern JavaScript stack from scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/takahashim/js-stack-from-scratch&quot; title=&quot;takahashim/js-stack-from-scratch: Step-by-step tutorial to build a modern JavaScript stack from scratch&quot;&gt;github.com/takahashim/js-stack-from-scratch&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのエコシステムや著名なライブラリを使ったチュートリアルの翻訳。&lt;br&gt;
色々なツールをあわせ使うことを前提に書かれたガイド&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jareware/css-architecture:-8-simple-rules-for-a-robust,-scalable-css-architecture&quot;&gt;jareware/css-architecture: 8 simple rules for a robust, scalable CSS architecture&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jareware/css-architecture&quot; title=&quot;jareware/css-architecture: 8 simple rules for a robust, scalable CSS architecture&quot;&gt;github.com/jareware/css-architecture&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;8つのルールを元にしたCSSのアーキテクチャ。&lt;br&gt;
コンポーネントとCSSの関係についてが中心&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vhf/v8-bailout-reasons:-a-list-of-crankshaft-bailout-reasons-with-examples&quot;&gt;vhf/v8-bailout-reasons: A list of Crankshaft bailout reasons with examples&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vhf/v8-bailout-reasons&quot; title=&quot;vhf/v8-bailout-reasons: A list of Crankshaft bailout reasons with examples&quot;&gt;github.com/vhf/v8-bailout-reasons&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8のdeoptimizationがなぜ起きるのかについて&amp;quot;Bailout reasons&amp;quot;と共に理由を解説してるリポジトリ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2014/09/13/v8-optimization-memo/&quot; title=&quot;V8の最適化とIRHydraでの可視化とベンチマークについてのメモ | Web Scratch&quot;&gt;V8の最適化とIRHydraでの可視化とベンチマークについてのメモ | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;turbo.js---easy-gpgpu&quot;&gt;turbo.js - Easy GPGPU&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://turbo.github.io/&quot; title=&quot;turbo.js - Easy GPGPU&quot;&gt;turbo.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;GLSLを使って演算処理を行うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tfennelly/browserify-tree:-generate-a-browserify-bundle-dependency-tree-for-bundled-modules&quot;&gt;tfennelly/browserify-tree: Generate a Browserify bundle dependency tree for bundled modules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tfennelly/browserify-tree&quot; title=&quot;tfennelly/browserify-tree: Generate a Browserify bundle dependency tree for bundled modules&quot;&gt;github.com/tfennelly/browserify-tree&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Browserifyでbundleしたファイルの依存ツリーを見ることができるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;naver/egjs:-set-of-ui-interactions,-effects-and-utility-components-library-using-jquery.&quot;&gt;naver/egjs: Set of UI interactions, effects and utility components library using jQuery.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/naver/egjs&quot; title=&quot;naver/egjs: Set of UI interactions, effects and utility components library using jQuery.&quot;&gt;github.com/naver/egjs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQueryベースのUIインタラクション、エフェクトライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;grimoire.js&quot;&gt;Grimoire.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://grimoire.gl/&quot; title=&quot;Grimoire.js&quot;&gt;grimoire.gl/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;GOMLというHTMLライクなXMLシンタックスで記述して、WebGLを使った3D表現を行うライブラリ。&lt;br&gt;
&lt;code&gt;&amp;lt;scene&amp;gt;&lt;/code&gt;や&lt;code&gt;&amp;lt;camera&amp;gt;&lt;/code&gt;といったノードを組み合わせることで表現する。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;securing-third-party-code---o&amp;#x27;reilly-media&quot;&gt;Securing Third-Party Code - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920051695.do&quot; title=&quot;Securing Third-Party Code - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/0636920051695.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;OSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2017年1月発売&lt;br&gt;
JavaScriptのサードパーティのコードを安全に使う方法についての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developing-spas---o&amp;#x27;reilly-media&quot;&gt;Developing SPAs - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920046349.do&quot; title=&quot;Developing SPAs - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/0636920046349.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2017年1月発売&lt;br&gt;
.NET開発者向けのSPA本&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pro-angular-2:-adam-freeman:-9781484223062:-amazon.com:-books&quot;&gt;Pro Angular 2: ADAM FREEMAN: 9781484223062: Amazon.com: Books&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Pro-Angular-2-ADAM-FREEMAN/dp/1484223063&quot; title=&quot;Pro Angular 2: ADAM FREEMAN: 9781484223062: Amazon.com: Books&quot;&gt;www.amazon.com/Pro-Angular-2-ADAM-FREEMAN/dp/1484223063&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2017年5月8日発売&lt;br&gt;
AngularJS 2についての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webデベロッパーのためのreact開発入門-javascript-ui-ライブラリの基本と活用-|-柴田-文彦-|本-|-通販-|-amazon&quot;&gt;WebデベロッパーのためのReact開発入門 JavaScript UI ライブラリの基本と活用 | 柴田 文彦 |本 | 通販 | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/Web%E3%83%87%E3%83%99%E3%83%AD%E3%83%83%E3%83%91%E3%83%BC%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEReact%E9%96%8B%E7%99%BA%E5%85%A5%E9%96%80-JavaScript-UI-%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%AE%E5%9F%BA%E6%9C%AC%E3%81%A8%E6%B4%BB%E7%94%A8-%E6%9F%B4%E7%94%B0/dp/4295000337&quot; title=&quot;WebデベロッパーのためのReact開発入門 JavaScript UI ライブラリの基本と活用 | 柴田 文彦 |本 | 通販 | Amazon&quot;&gt;www.amazon.co.jp/Web%E3%83%87%E3%83%99%E3%83%AD%E3%83%83%E3%83%91%E3%83%BC%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEReact%E9%96%8B%E7%99%BA%E5%85%A5%E9%96%80-JavaScript-UI-%E3%83%A9%E3%82%A4%E3%83%96%E3%83%A9%E3%83%AA%E3%81%AE%E5%9F%BA%E6%9C%AC%E3%81%A8%E6%B4%BB%E7%94%A8-%E6%9F%B4%E7%94%B0/dp/4295000337&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年11月25日発売&lt;br&gt;
Reactの入門本&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://book.impress.co.jp/books/1116101049&quot; title=&quot;WebデベロッパーのためのReact開発入門 JavaScript UIライブラリの基本と活用 - インプレスブックス&quot;&gt;WebデベロッパーのためのReact開発入門 JavaScript UIライブラリの基本と活用 - インプレスブックス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 08 Nov 2016 10:44:00 +0900</pubDate>
        <link>https://jser.info/2016/11/08/sitespeed.io-4.0-webpack-2-beta-javascript/</link>
        <guid isPermaLink="true">https://jser.info/2016/11/08/sitespeed.io-4.0-webpack-2-beta-javascript/</guid>
        
        <category>performance</category>
        
        <category>webpack</category>
        
        <category>JavaScript</category>
        
        <category>framework</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-11-01のJS: Node.js v7、Node.js v0.10 EOL、WebAssembly Browser Preview</title>
        <description>&lt;p&gt;JSer.info #303　- 先週&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.9.0/&quot; title=&quot;Node v6.9.0 (LTS)&quot;&gt;Node.js v6.9.0 (LTS)&lt;/a&gt;がリリースされましたが、開発版(LTSではない)である&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.0.0/&quot; title=&quot;Node.js v7.0.0&quot;&gt;Node v7.0.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;V8のアップデート、WHATWG URLの試験的サポートなどが行われています。&lt;/p&gt;

&lt;p&gt;WHATWG URLについては以下の記事で解説されているので合わせて読んでみるといいです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2016-10-27/whatwg-url.html&quot; title=&quot;Node v7 で入った WHATWG URL 実装について | blog.jxck.io&quot;&gt;Node v7 で入った WHATWG URL 実装について | blog.jxck.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、2016-10-31でNode.js v0.10のメンテンスが終了し&lt;a href=&quot;https://ja.wikipedia.org/wiki/EOL&quot; title=&quot;EOL&quot;&gt;EOL&lt;/a&gt;となります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://monosnap.com/file/kkYTd5VdXRZOAJEebIvt8eWCk34Sb7.png&quot; alt=&quot;Node.js LTS timeline&quot;&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/LTS&quot; title=&quot;nodejs/LTS: Node.js Foundation Long-term Support Working Group&quot;&gt;nodejs/LTS: Node.js Foundation Long-term Support Working Group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js v0.12も2016-12-31でメンテンスが終了するため、v4またはv6のActiveなLTSへ移行する必要があります。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://webassembly.org/&quot; title=&quot;WebAssembly&quot;&gt;WebAssembly&lt;/a&gt;が&lt;a href=&quot;http://webassembly.org/roadmap/&quot; title=&quot;Browser Preview&quot;&gt;Browser Preview&lt;/a&gt;のマイルストーンとなったため、各実装ブラウザで進捗に関する記事が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2016/10/webassembly-browser-preview.html&quot;&gt;V8 JavaScript Engine: WebAssembly Browser Preview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/10/webassembly-browser-preview/&quot;&gt;WebAssembly Browser Preview ★ Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/10/31/webassembly-browser-preview/&quot;&gt;A peek into the WebAssembly Browser Preview | Microsoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/status/#specification-webassembly&quot;&gt;WebKit Feature Status | WebKit&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;WebKitは&lt;a href=&quot;https://jser.info/2016/03/17/react-webassembly-art-of-javascript/&quot;&gt;前回と同様&lt;/a&gt;にアナウンスは特にないですがStatusは&lt;strong&gt;In Development&lt;/strong&gt;です&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;それぞれの記事で試験的に利用する方法が書かれています。&lt;br&gt;
また、&lt;a href=&quot;http://webassembly.org/community/feedback/&quot; title=&quot;Submitting Feedback &amp;amp;amp; Issues&quot;&gt;Submitting Feedback &amp;amp; Issues&lt;/a&gt;にはそれぞれの実装や仕様に対するフィードバック先がまとめられています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The tentative goal of the CG is for the Browser Preview to conclude in Q1 2017, though significant findings during the Browser Preview could potentially extend the duration&lt;br&gt;
-- &lt;a href=&quot;http://webassembly.org/roadmap/&quot; title=&quot;Roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;今後のWebAssemblyコミュニティとしてのロードマップは&lt;a href=&quot;http://webassembly.org/roadmap/&quot; title=&quot;Roadmap&quot;&gt;Roadmap&lt;/a&gt;にかかれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7.0.0-(current)-|-node.js&quot;&gt;Node v7.0.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v7.0.0/&quot; title=&quot;Node v7.0.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v7.0.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node v7.0.0リリース。&lt;br&gt;
V8のアップデート、WHATWG URL Parserの試験的サポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;6.18.0-released-·-babel&quot;&gt;6.18.0 Released · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2016/10/24/6.18.0&quot; title=&quot;6.18.0 Released · Babel&quot;&gt;babeljs.io/blog/2016/10/24/6.18.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel v6.18.0リリース。&lt;br&gt;
&lt;code&gt;import()&lt;/code&gt;のinitialサポート、&lt;code&gt;helper-builder-react-jsx&lt;/code&gt;に&lt;code&gt;useBuiltIns&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-16-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 16 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/7030/release-notes-for-safari-technology-preview-16/&quot; title=&quot;Release Notes for Safari Technology Preview 16 | WebKit&quot;&gt;webkit.org/blog/7030/release-notes-for-safari-technology-preview-16/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 16リリース。&lt;br&gt;
URLのパースがウェブ標準により準拠するように、Gamepad APIのサポート、&lt;code&gt;Intl.getCanonicalLocales&lt;/code&gt;のサポート、ES2016のnon-simple parametersにおけるearly errorに対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v3.9.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v3.9.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/10/eslint-v3.9.0-released&quot; title=&quot;ESLint v3.9.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/10/eslint-v3.9.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint v3.9.0リリース。&lt;br&gt;
&lt;code&gt;codeframe&lt;/code&gt; formatterの追加、カスタムパーサがルール向けに情報を提供するオブジェクト(&lt;code&gt;context.parserServices&lt;/code&gt;)を定義できるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/abc7885b373b5b37ce97&quot; title=&quot;ESLint v3.9.0 - Qiita&quot;&gt;ESLint v3.9.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/eslint/eslint/issues/6974&quot; title=&quot;Proposal for Parser Services · Issue #6974 · eslint/eslint&quot;&gt;Proposal for Parser Services · Issue #6974 · eslint/eslint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redux-without-react-—-state-management-in-vanilla-javascript&quot;&gt;Redux without React — State Management in Vanilla JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/redux-without-react-state-management-vanilla-javascript/&quot; title=&quot;Redux without React — State Management in Vanilla JavaScript&quot;&gt;www.sitepoint.com/redux-without-react-state-management-vanilla-javascript/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactは使わずにReduxを扱ってみる話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;visual-debugging-with-es6-and-node.js-–-good-eggs-product-–-medium&quot;&gt;Visual Debugging with ES6 and Node.js – Good Eggs Product – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/good-eggs-product/visual-debugging-with-es6-and-node-js-44631b3b040f&quot; title=&quot;Visual Debugging with ES6 and Node.js – Good Eggs Product – Medium&quot;&gt;medium.com/good-eggs-product/visual-debugging-with-es6-and-node-js-44631b3b040f&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsとBabelを組み合わせた場合のGUIデバッグ方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-webassembly-browser-preview&quot;&gt;V8 JavaScript Engine: WebAssembly Browser Preview&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/10/webassembly-browser-preview.html&quot; title=&quot;V8 JavaScript Engine: WebAssembly Browser Preview&quot;&gt;v8project.blogspot.com/2016/10/webassembly-browser-preview.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chromeがフラグ付きでWebAssernblyを実験的にサポート。フィードバックを募集している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://webassembly.org/roadmap/&quot; title=&quot;WebAssembly&quot;&gt;WebAssembly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;different-ways-to-debug-javascript-code-–-medium&quot;&gt;Different ways to debug JavaScript code – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@sandeep.scet/different-ways-to-debug-javascript-code-579e7f58cf10&quot; title=&quot;Different ways to debug JavaScript code – Medium&quot;&gt;medium.com/@sandeep.scet/different-ways-to-debug-javascript-code-579e7f58cf10&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのデバッグ手法について。&lt;br&gt;
alert、console、breakpoint、&lt;code&gt;debugger;&lt;/code&gt;、&lt;code&gt;debug&lt;/code&gt;、&lt;code&gt;monitor&lt;/code&gt;などのAPIや方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v7-で入った-whatwg-url-実装について-|-blog.jxck.io&quot;&gt;Node v7 で入った WHATWG URL 実装について | blog.jxck.io&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2016-10-27/whatwg-url.html&quot; title=&quot;Node v7 で入った WHATWG URL 実装について | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2016-10-27/whatwg-url.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;URL&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v7で試験的に実装されたWHATWG URLについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zeit-–-next.js&quot;&gt;ZEIT – Next.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zeit.co/blog/next&quot; title=&quot;ZEIT – Next.js&quot;&gt;zeit.co/blog/next&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;serverless&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;isomorphic&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactを使ったサーバサイドレンダリング向けのフレームワーク。&lt;br&gt;
CSS in JS、Head、ルーティングや開発ツールがセットになっている。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack-&amp;amp;-react-performance-in-16+-steps&quot;&gt;Webpack &amp;amp; React Performance in 16+ Steps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/grgur/webpack-react-performance-in-16-steps&quot; title=&quot;Webpack &amp;amp; React Performance in 16+ Steps&quot;&gt;www.slideshare.net/grgur/webpack-react-performance-in-16-steps&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackとReactでパフォーマンスやサイズなど気をつける点についてのスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;timarney/react-faq:-a-collection-of-links-to-help-answer-your-questions-about-react.js&quot;&gt;timarney/react-faq: A collection of links to help answer your questions about React.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/timarney/react-faq&quot; title=&quot;timarney/react-faq: A collection of links to help answer your questions about React.js&quot;&gt;github.com/timarney/react-faq&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactに関するFAQをまとめたページ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-|-web-|-google-developers&quot;&gt;Performance  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/&quot; title=&quot;Performance  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/performance/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ウェブサイトのパフォーマンス改善についてのドキュメント。&lt;br&gt;
クリティカルレンダリングパスの改善やネットワーク、アニメーションなど色々なパフォーマンスについての記事がまとめられている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;パフォーマンス---開発ツール-|-mdn&quot;&gt;パフォーマンス - 開発ツール | MDN&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Tools/Performance&quot; title=&quot;パフォーマンス - 開発ツール | MDN&quot;&gt;developer.mozilla.org/ja/docs/Tools/Performance&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefoxの開発者ツールのリファレンスページ。&lt;br&gt;
基本的な使い方やツールの見方について。&lt;br&gt;
またカクカクなCSSアニメーション、UIスレッドをブロックしてしまうJSの問題などのシナリオ元にした改善方法についても書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pelotoncycle/resize-observer&quot;&gt;pelotoncycle/resize-observer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pelotoncycle/resize-observer&quot; title=&quot;pelotoncycle/resize-observer&quot;&gt;github.com/pelotoncycle/resize-observer&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Resize Observerのpolyfill&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;raynos/jsig:-from-scratch-type-checker&quot;&gt;Raynos/jsig: From scratch type-checker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Raynos/jsig&quot; title=&quot;Raynos/jsig: From scratch type-checker&quot;&gt;github.com/Raynos/jsig&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSDocのような型アノテーションコメントと型推論から静的な型チェックを行うツール。&lt;br&gt;
FlowTypeとは異なりES5に焦点をおいてる事と曖昧さを許容しない作り&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;taichi/ci-yarn-upgrade:-keep-npm-dependencies-up-to-date-with-ci,-providing-version-to-version-diff-for-each-library&quot;&gt;taichi/ci-yarn-upgrade: Keep NPM dependencies up-to-date with CI, providing version-to-version diff for each library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/taichi/ci-yarn-upgrade&quot; title=&quot;taichi/ci-yarn-upgrade: Keep NPM dependencies up-to-date with CI, providing version-to-version diff for each library&quot;&gt;github.com/taichi/ci-yarn-upgrade&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;yarnを使ってpackage.jsonの依存モジュールを更新するPRを出す事ができるツール。&lt;br&gt;
また更新するモジュールの一覧を取得する事もできる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;azu/ui-event-observer:-provide-performant-way-to-subscribe-to-browser-ui-events.&quot;&gt;azu/ui-event-observer: Provide performant way to subscribe to browser UI Events.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/ui-event-observer&quot; title=&quot;azu/ui-event-observer: Provide performant way to subscribe to browser UI Events.&quot;&gt;github.com/azu/ui-event-observer&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;同じ要素への同じイベントの複数の&lt;code&gt;addEventListener&lt;/code&gt;を1つにまとめて扱うことができるライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;modular-javascript-book-series&quot;&gt;Modular JavaScript Book Series&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mjavascript.com/&quot; title=&quot;Modular JavaScript Book Series&quot;&gt;mjavascript.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;クラウドファンディングで開始されたJavaScriptの書籍シリーズ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ponyfoo.com/books/practical-es6/chapters#toc&quot; title=&quot;Table of Contents — Practical ES6&quot;&gt;Table of Contents — Practical ES6&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;関数型プログラミングの基礎-javascriptを使って学ぶ-:-立川察理,-長瀬嘉秀-:-本-:-amazon.co.jp&quot;&gt;関数型プログラミングの基礎 JavaScriptを使って学ぶ : 立川察理, 長瀬嘉秀 : 本 : Amazon.co.jp&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/%E9%96%A2%E6%95%B0%E5%9E%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%81%AE%E5%9F%BA%E7%A4%8E-JavaScript%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E5%AD%A6%E3%81%B6-%E7%AB%8B%E5%B7%9D%E5%AF%9F%E7%90%86/dp/4865940596&quot; title=&quot;関数型プログラミングの基礎 JavaScriptを使って学ぶ : 立川察理, 長瀬嘉秀 : 本 : Amazon.co.jp&quot;&gt;www.amazon.co.jp/%E9%96%A2%E6%95%B0%E5%9E%8B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%81%AE%E5%9F%BA%E7%A4%8E-JavaScript%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E5%AD%A6%E3%81%B6-%E7%AB%8B%E5%B7%9D%E5%AF%9F%E7%90%86/dp/4865940596&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;関数型プログラミング&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年10月29日発売&lt;br&gt;
JavaScriptでの関数型プログラミングについての書籍&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www2.ric.co.jp/create/book/contents/book_1059.html&quot; title=&quot;リックテレコム 書籍情報&quot;&gt;リックテレコム 書籍情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 01 Nov 2016 09:57:00 +0900</pubDate>
        <link>https://jser.info/2016/11/01/node.js-v7-node.js-v0.10-eol-webassembly-browser-preview/</link>
        <guid isPermaLink="true">https://jser.info/2016/11/01/node.js-v7-node.js-v0.10-eol-webassembly-browser-preview/</guid>
        
        <category>Node.js</category>
        
        <category>WebAssembly</category>
        
        <category>Browser</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-10-24のJS: npm 4.0.0、Node.js v6.9.0 (LTS)、webpack@2へのマイグレーション</title>
        <description>&lt;p&gt;JSer.info #302 - npm 4.0.0がプレリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · npm/npm&quot;&gt;Release v4.0.0 · npm/npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;npm install -g npm@4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;でインストールすることができます。&lt;br&gt;
&lt;code&gt;npm search&lt;/code&gt;の速度改善、&lt;code&gt;publish&lt;/code&gt;ライフサイクルがdepreatedとなり、代わりに&lt;code&gt;prepare&lt;/code&gt;や&lt;code&gt;prepublishOnly&lt;/code&gt;が利用可能になるなど。&lt;br&gt;
&lt;code&gt;npm tag&lt;/code&gt;が&lt;code&gt;npm dist-tag&lt;/code&gt;となり、&lt;code&gt;npm outdated&lt;/code&gt;がexit statusを正しく返すなどの変更が含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.9.0/&quot; title=&quot;Node v6.9.0 (LTS) | Node.js&quot;&gt;Node.js v6.9.0 (LTS)&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;6.xのLTS版となり、詳しいサポートスケジュールは以下の記事で解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@nodejs/node-js-v6-transitions-to-lts-be7f18c17159#.c8d2tljbn&quot; title=&quot;Node.js v6 Transitions to LTS – Medium&quot;&gt;Node.js v6 Transitions to LTS – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js v0.10/v0.12は2016年12月でサポートが終了となり、&lt;br&gt;
Node.js v4.xは2017年4月からメンテンスモードとなります。&lt;/p&gt;

&lt;p&gt;また、次の開発版となるNode.js v7.xは10月25日にリリースされる予定です。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://javascriptplayground.com/blog/2016/10/moving-to-webpack-2/&quot; title=&quot;Migrating to Webpack 2&quot;&gt;Migrating to Webpack 2&lt;/a&gt;という記事ではwebpack@2(まだβ版)へのマイグレーション方法について書かれています。&lt;/p&gt;

&lt;p&gt;webpackの公式サイトも新しくなりマイグレーションガイドがあるので合わせて読むと良いです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webpack.js.org/how-to/upgrade-from-webpack-1/&quot; title=&quot;How to Upgrade from Webpack 1?&quot;&gt;How to Upgrade from Webpack 1?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpack@2からは設定ファイルのバリデーションが入ったので、おかしな設定をするとエラーになります。&lt;br&gt;
マイグレーション時にエラーが出た場合は上記のガイドを見て直してみると良いです。&lt;/p&gt;

&lt;p&gt;細かい記述の変更も多いですが、&lt;code&gt;OccurrenceOrderPlugin&lt;/code&gt;がデフォルトになったり、コマンドライン引数を取る方法などが追加されていたりもします。&lt;/p&gt;

&lt;p&gt;また、ES modulesをそのまま扱うことができるようになっているため、Babelの方でES modulesの変換を行わない設定などについても書かれています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;{
  &amp;quot;presets&amp;quot;: [
    [&amp;quot;es2015&amp;quot;, { &amp;quot;modules&amp;quot;: false }]
  ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4.0.0-·-npm/npm&quot;&gt;Release v4.0.0 · npm/npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · npm/npm&quot;&gt;github.com/npm/npm/releases/tag/v4.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npm v4 Preリリース&lt;br&gt;
&lt;code&gt;npm i -g npm@4&lt;/code&gt;でインストールができるように、&lt;code&gt;npm search&lt;/code&gt;の速度改善、&lt;code&gt;publish&lt;/code&gt;ライフサイクルがdepreated、代わりに&lt;code&gt;prepare&lt;/code&gt;や&lt;code&gt;prepublishOnly&lt;/code&gt;が利用可能に、&lt;br&gt;
&lt;code&gt;npm tag&lt;/code&gt;が削除など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gist.github.com/othiym23/c98bd4ef5d9fb3f496835bd481ef40ae&quot; title=&quot;node-gakuen-201610.md&quot;&gt;node-gakuen-201610.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/azu_re/status/789985478065790976&quot; title=&quot;$ npm search npm # on npm@4&quot;&gt;$ npm search npm # on npm@4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-jshint-2.9.4-·-jshint/jshint&quot;&gt;Release JSHint 2.9.4 · jshint/jshint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jshint/jshint/releases/tag/2.9.4&quot; title=&quot;Release JSHint 2.9.4 · jshint/jshint&quot;&gt;github.com/jshint/jshint/releases/tag/2.9.4&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSHint 2.9.4リリース。&lt;br&gt;
TDZの対応、重複したエラー報告をしないようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---ember.js-2.8-lts,-2.9-and-2.10-beta-released&quot;&gt;Ember.js - Ember.js 2.8-LTS, 2.9 and 2.10 Beta Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/10/17/ember-2-9-released.html&quot; title=&quot;Ember.js - Ember.js 2.8-LTS, 2.9 and 2.10 Beta Released&quot;&gt;emberjs.com/blog/2016/10/17/ember-2-9-released.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Ember.js 2.8-LTS、2.9、2.10β リリース。&lt;br&gt;
2.8-LTSでは2018年2月までセキュリティパッチがリリースされる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flux/changelog.md-at-3.1.0-·-facebook/flux&quot;&gt;flux/CHANGELOG.md at 3.1.0 · facebook/flux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flux/blob/3.1.0/CHANGELOG.md&quot; title=&quot;flux/CHANGELOG.md at 3.1.0 · facebook/flux&quot;&gt;github.com/facebook/flux/blob/3.1.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;facebook&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Facebook/flux 3.0.0リリース。&lt;br&gt;
&lt;code&gt;FluxMapStore&lt;/code&gt;を削除&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-55-beta:-input-handling-improvements-and-async/await-functions&quot;&gt;Chromium Blog: Chrome 55 Beta: Input handling improvements and async/await functions&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2016/10/chrome-55-beta-input-handling.html&quot; title=&quot;Chromium Blog: Chrome 55 Beta: Input handling improvements and async/await functions&quot;&gt;blog.chromium.org/2016/10/chrome-55-beta-input-handling.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 55 Betaリリース。&lt;br&gt;
Pointer Events、async/await、CSS &lt;code&gt;hyphens&lt;/code&gt;、Persistent Storageのサポートなど&lt;br&gt;
corss originでかつ2G回線における&lt;code&gt;document.write&lt;/code&gt;をブロックするようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v6.9.0-(lts)-|-node.js&quot;&gt;Node v6.9.0 (LTS) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.9.0/&quot; title=&quot;Node v6.9.0 (LTS) | Node.js&quot;&gt;nodejs.org/en/blog/release/v6.9.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v6.9.0 (LTS)リリース。&lt;br&gt;
Node.js v4.x (LTS)からのマイグレーションガイドも書かれている。&lt;br&gt;
v6.xは2018年4月までアクティブなLTSとなる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@nodejs/node-js-v6-transitions-to-lts-be7f18c17159&quot; title=&quot;Node.js v6 Transitions to LTS – Medium&quot;&gt;Node.js v6 Transitions to LTS – Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js-v6-transitions-to-lts-–-medium&quot;&gt;Node.js v6 Transitions to LTS – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@nodejs/node-js-v6-transitions-to-lts-be7f18c17159&quot; title=&quot;Node.js v6 Transitions to LTS – Medium&quot;&gt;medium.com/@nodejs/node-js-v6-transitions-to-lts-be7f18c17159&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v6以降のLTSスケジュールについて&lt;br&gt;
Node.js v0.10/v0.12は2016年12月でEOLとなる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;auxclick-is-coming-to-chrome-55-|-web-|-google-developers&quot;&gt;auxclick is Coming to Chrome 55  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/10/auxclick&quot; title=&quot;auxclick is Coming to Chrome 55  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2016/10/auxclick&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;左クリック以外に反応する&lt;code&gt;clicK&lt;/code&gt;イベントである&lt;code&gt;auxclick&lt;/code&gt;イベントについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;once-upon-an-event-listener-|-web-|-google-developers&quot;&gt;Once Upon an Event Listener  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/10/addeventlistener-once&quot; title=&quot;Once Upon an Event Listener  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2016/10/addeventlistener-once&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;HTMLElement#addEventListener&lt;/code&gt;の&lt;code&gt;{once}&lt;/code&gt;オプションについて。&lt;br&gt;
一度のみハンドリングするハンドラを指定できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrating-to-webpack-2&quot;&gt;Migrating to Webpack 2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://javascriptplayground.com/blog/2016/10/moving-to-webpack-2/&quot; title=&quot;Migrating to Webpack 2&quot;&gt;javascriptplayground.com/blog/2016/10/moving-to-webpack-2/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack@1から@2へのマイグレーションについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webpack.js.org/how-to/upgrade-from-webpack-1/&quot; title=&quot;How to Upgrade from Webpack 1?&quot;&gt;How to Upgrade from Webpack 1?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;async-functions---making-promises-friendly-|-web-|-google-developers&quot;&gt;Async functions - making promises friendly  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/async-functions&quot; title=&quot;Async functions - making promises friendly  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/getting-started/primers/async-functions&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/awaitについて。&lt;br&gt;
sequentialとparallelな書き方の違いについてサンプルコードと共に解説してる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tips-for-using-async-functions-(es2017)&quot;&gt;Tips for using async functions (ES2017)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2016/10/async-function-tips.html&quot; title=&quot;Tips for using async functions (ES2017)&quot;&gt;www.2ality.com/2016/10/async-function-tips.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/awaitの細かな注意点について。&lt;br&gt;
asyncの動作、awaitを忘れた場合の動画、&lt;code&gt;await Promise.all()&lt;/code&gt;、コールバックとasync、unhandled rejectionについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testcafeでブラウザの自動テスト(e2eテスト)-|-web-scratch&quot;&gt;TestCafeでブラウザの自動テスト(E2Eテスト) | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/10/23/testcafe/&quot; title=&quot;TestCafeでブラウザの自動テスト(E2Eテスト) | Web Scratch&quot;&gt;efcl.info/2016/10/23/testcafe/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ブラウザの自動テストフレームワークであるTestCafeの使い方についての解説。&lt;br&gt;
設定レスで動作する仕組み、リモートテスト、テストコードについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;syntax:-language-agnostic-parser-generator-–-medium&quot;&gt;Syntax: language agnostic parser generator – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@DmitrySoshnikov/syntax-language-agnostic-parser-generator-bd24468d7cfc&quot; title=&quot;Syntax: language agnostic parser generator – Medium&quot;&gt;medium.com/@DmitrySoshnikov/syntax-language-agnostic-parser-generator-bd24468d7cfc&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;言語を問わないagnosticなパーサ、ジェネレータツールキット&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DmitrySoshnikov/syntax&quot; title=&quot;DmitrySoshnikov/syntax: Syntactic analysis toolkit for education, tracing the parsing process, and parsers generation.&quot;&gt;DmitrySoshnikov/syntax: Syntactic analysis toolkit for education, tracing the parsing process, and parsers generation.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pragmatic,-practical,-and-progressive-theming-with-custom-properties-–-css-wizardry-–-css,-oocss,-front-end-architecture,-performance-and-more,-by-harry-roberts&quot;&gt;Pragmatic, Practical, and Progressive Theming with Custom Properties – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://csswizardry.com/2016/10/pragmatic-practical-progressive-theming-with-custom-properties/&quot; title=&quot;Pragmatic, Practical, and Progressive Theming with Custom Properties – CSS Wizardry – CSS, OOCSS, front-end architecture, performance and more, by Harry Roberts&quot;&gt;csswizardry.com/2016/10/pragmatic-practical-progressive-theming-with-custom-properties/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS Custom Propertyを使ったテーマの実装&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;polymer-summit-2016---youtube&quot;&gt;Polymer Summit 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLNYkxOF6rcICc687SxHQRuo9TVNOJelSZ&quot; title=&quot;Polymer Summit 2016 - YouTube&quot;&gt;www.youtube.com/playlist?list=PLNYkxOF6rcICc687SxHQRuo9TVNOJelSZ&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Polymer Summit 2016の動画一覧&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.polymer-project.org/summit&quot; title=&quot;Polymer Summit 2016&quot;&gt;Polymer Summit 2016&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-javascript-library-for-building-user-interfaces---react&quot;&gt;A JavaScript library for building user interfaces - React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/&quot; title=&quot;A JavaScript library for building user interfaces - React&quot;&gt;facebook.github.io/react/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Reactのドキュメントが新しくなった。&lt;br&gt;
Codepenでサンプルを実行できるように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/dan_abramov/status/789573515750076417&quot; title=&quot;Dan Abramov on Twitter: &amp;amp;amp;#34;New React docs are live! Featuring all-new guides written from scratch, ES6 examples, and CodePen snippets. https://t.co/cNZZC1vVZc https://t.co/8cZCO1W5pG&amp;amp;amp;#34;&quot;&gt;Dan Abramov on Twitter: &amp;amp;#34;New React docs are live! Featuring all-new guides written from scratch, ES6 examples, and CodePen snippets. https://t.co/cNZZC1vVZc https://t.co/8cZCO1W5pG&amp;amp;#34;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsperf:-javascript-performance-playground&quot;&gt;jsPerf: JavaScript performance playground&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jsperf.com/&quot; title=&quot;jsPerf: JavaScript performance playground&quot;&gt;jsperf.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptスニペットのパフォーマンス計測サービスであるjsPerfのリニューアル公開&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;beautify-web/js-beautify-·-github&quot;&gt;beautify-web/js-beautify · GitHub&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/beautify-web/js-beautify&quot; title=&quot;beautify-web/js-beautify · GitHub&quot;&gt;github.com/beautify-web/js-beautify&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptを整形できるツールとサイト。 &lt;code&gt;.jsbeautifyrc&lt;/code&gt;で設定を管理できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jgraph/mxgraph:-mxgraph-is-a-fully-client-side-javascript-diagramming-library&quot;&gt;jgraph/mxgraph: mxGraph is a fully client side JavaScript diagramming library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jgraph/mxgraph&quot; title=&quot;jgraph/mxgraph: mxGraph is a fully client side JavaScript diagramming library&quot;&gt;github.com/jgraph/mxgraph&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;draw.ioで使われているSVGの作図ライブラリ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jgraph.github.io/mxgraph/javascript/&quot; title=&quot;JavaScript Diagram Editor&quot;&gt;JavaScript Diagram Editor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jgraph/draw.io&quot; title=&quot;jgraph/draw.io: Source to www.draw.io&quot;&gt;jgraph/draw.io: Source to www.draw.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;automated-browser-testing-for-the-modern-web-development-stack-|-testcafe&quot;&gt;Automated browser testing for the modern web development stack | TestCafe&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://devexpress.github.io/testcafe/&quot; title=&quot;Automated browser testing for the modern web development stack | TestCafe&quot;&gt;devexpress.github.io/testcafe/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;設定なしで使える自動テストフレームワーク。&lt;br&gt;
Seleniumを使わないので単独で動作する。&lt;br&gt;
Babelを内蔵しasync/awaitなどを扱え、自動的に一定時間待つなどの仕組みを持っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2016/10/23/testcafe/&quot; title=&quot;TestCafeでブラウザの自動テスト(E2Eテスト) | Web Scratch&quot;&gt;TestCafeでブラウザの自動テスト(E2Eテスト) | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://testcafe-discuss.devexpress.com/t/why-not-use-selenium/47/2&quot; title=&quot;Why not use Selenium? - Questions - TestCafe Discussion Board&quot;&gt;Why not use Selenium? - Questions - TestCafe Discussion Board&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hyperform---capture-form-validation-back-from-the-browser&quot;&gt;Hyperform - Capture form validation back from the browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hyperform.js.org/&quot; title=&quot;Hyperform - Capture form validation back from the browser&quot;&gt;hyperform.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;HTML5 form validation APIをpolyfill/置き換える実装を持つフォームバリデーションライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-フレームワーク入門-:-掌田津耶乃-:-本-:-amazon.co.jp&quot;&gt;JavaScript フレームワーク入門 : 掌田津耶乃 : 本 : Amazon.co.jp&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/JavaScript-%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF%E5%85%A5%E9%96%80-%E6%8E%8C%E7%94%B0%E6%B4%A5%E8%80%B6%E4%B9%83/dp/4798047848&quot; title=&quot;JavaScript フレームワーク入門 : 掌田津耶乃 : 本 : Amazon.co.jp&quot;&gt;www.amazon.co.jp/JavaScript-%E3%83%95%E3%83%AC%E3%83%BC%E3%83%A0%E3%83%AF%E3%83%BC%E3%82%AF%E5%85%A5%E9%96%80-%E6%8E%8C%E7%94%B0%E6%B4%A5%E8%80%B6%E4%B9%83/dp/4798047848&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript、npmとBower、webpack、jQuery、Vue.js、Backbone.js、Angular、React、AureliaなどのJavaScriptの色々なツールやフレームワークについての本&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 24 Oct 2016 09:36:00 +0900</pubDate>
        <link>https://jser.info/2016/10/24/npm-4.0.0-node.js-v6.9.0-lts-webpack2/</link>
        <guid isPermaLink="true">https://jser.info/2016/10/24/npm-4.0.0-node.js-v6.9.0-lts-webpack2/</guid>
        
        <category>npm</category>
        
        <category>Node.js</category>
        
        <category>webpack</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-10-18のJS: JS Foundation、npmクライアントのyarn</title>
        <description>&lt;p&gt;JSer.info #301 - Linux Foundationの一つとして&lt;a href=&quot;https://js.foundation/&quot; title=&quot;JS Foundation&quot;&gt;JS Foundation&lt;/a&gt;ができたそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://js.foundation/announcements/2016/10/17/Linux-Foundation-Unites-JavaScript-Community-Open-Web-Development/&quot; title=&quot;The Linux Foundation Unites JavaScript Community for Open Web Development | The JS Foundation&quot;&gt;The Linux Foundation Unites JavaScript Community for Open Web Development | The JS Foundation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;元は&lt;a href=&quot;https://jquery.org/&quot; title=&quot;jQuery Foundation&quot;&gt;jQuery Foundation&lt;/a&gt;なので、JavaScriptのオープンソースプロジェクトの開発支援などが目的で設立されたようです。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;The jQuery Foundation is now the JS Foundation, you can follow the Foundation on &lt;a href=&quot;https://twitter.com/the_jsf&quot;&gt;@the_jsf&lt;/a&gt; and the jQuery project here on &lt;a href=&quot;https://twitter.com/jquery&quot;&gt;@jquery&lt;/a&gt;!&lt;/p&gt;&amp;mdash; jquery (@jquery) &lt;a href=&quot;https://twitter.com/jquery/status/788012682494423040&quot;&gt;October 17, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/&quot; title=&quot;Yarn&quot;&gt;Yarn&lt;/a&gt;というnpmクライアントがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://code.facebook.com/posts/1840075619545360&quot; title=&quot;Yarn: A new package manager for JavaScript | Engineering Blog | Facebook Code&quot;&gt;Yarn: A new package manager for JavaScript | Engineering Blog | Facebook Code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.npmjs.com/&quot; title=&quot;npm&quot;&gt;npm&lt;/a&gt;のモジュールを管理するコマンドラインツールとして同名の&lt;a href=&quot;https://www.npmjs.com/package/npm&quot; title=&quot;npm&quot;&gt;npm&lt;/a&gt;がありますが、yarnは後者のコマンドラインツールの実装です。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;package.json&lt;/code&gt;の扱いは既存のnpmと&lt;a href=&quot;https://github.com/yarnpkg/yarn/labels/compatibility&quot; title=&quot;compatibility discussion&quot;&gt;互換性&lt;/a&gt;を持つためJavaScriptのエコシステム自体は同様です。(Bowerはこれを分割してしまった)&lt;br&gt;
特徴としてキャッシュや並列処理を行い高速なインストール、また&lt;code&gt;yarn.lock&lt;/code&gt;を使った依存バージョン固定をデフォルトで行います。&lt;/p&gt;

&lt;p&gt;コマンドラインのインタフェースの互換性は目的ではないですが、以下にコマンドの比較がまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://shift.infinite.red/npm-vs-yarn-cheat-sheet-8755b092e5cc&quot; title=&quot;NPM vs Yarn Cheat Sheet&quot;&gt;NPM vs Yarn Cheat Sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yarnpkg.com/en/docs/migrating-from-npm&quot; title=&quot;Migrating from npm | Yarn&quot;&gt;Migrating from npm | Yarn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-9.7.1-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at 9.7.1 · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/9.7.1/Changelog.md&quot; title=&quot;jsdom/Changelog.md at 9.7.1 · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/9.7.1/Changelog.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdom 9.7.0リリース。&lt;br&gt;
EventListenerOptionsのサポート、&lt;code&gt;document.hasFocus()&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v3.8.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v3.8.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/10/eslint-v3.8.0-released&quot; title=&quot;ESLint v3.8.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/10/eslint-v3.8.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 3.8.0リリース。&lt;br&gt;
&lt;code&gt;executeOnFiles()&lt;/code&gt;の結果の&lt;code&gt;source&lt;/code&gt;プロパティにソースコードを含められるように、新しいルールの追加や修正など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/6f037c15057c57982453&quot; title=&quot;ESLint v3.8.0 - Qiita&quot;&gt;ESLint v3.8.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-2.1.0-now-available&quot;&gt;Angular 2.1.0 Now Available&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.com/2016/10/angular-210-now-available.html&quot; title=&quot;Angular 2.1.0 Now Available&quot;&gt;angularjs.blogspot.com/2016/10/angular-210-now-available.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Angular 2.1.0リリース。&lt;br&gt;
Routerがpreloadingのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-15-|-webkit&quot;&gt;Release Notes for Safari Technology Preview 15 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6987/release-notes-for-safari-technology-preview-15/&quot; title=&quot;Release Notes for Safari Technology Preview 15 | WebKit&quot;&gt;webkit.org/blog/6987/release-notes-for-safari-technology-preview-15/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 15リリース。&lt;br&gt;
El Capitan向けの最後のリリース、Fetch APIの改善、&lt;code&gt;download&lt;/code&gt;属性のサポート、&lt;code&gt;DOMTokenList.prototype.supports()&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-linux-foundation-unites-javascript-community-for-open-web-development-|-the-js-foundation&quot;&gt;The Linux Foundation Unites JavaScript Community for Open Web Development | The JS Foundation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://js.foundation/announcements/2016/10/17/Linux-Foundation-Unites-JavaScript-Community-Open-Web-Development/&quot; title=&quot;The Linux Foundation Unites JavaScript Community for Open Web Development | The JS Foundation&quot;&gt;js.foundation/announcements/2016/10/17/Linux-Foundation-Unites-JavaScript-Community-Open-Web-Development/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery FoundationはJS Foundationになった。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/the_jsf&quot; title=&quot;JS Foundation (@the\_jsf) | Twitter&quot;&gt;JS Foundation (@the_jsf) | Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/jquery/status/788012682494423040&quot; title=&quot;jquery on Twitter: &amp;amp;amp;#34;The jQuery Foundation is now the JS Foundation, you can follow the Foundation on @the\_jsf and the jQuery project here on @jquery!&amp;amp;amp;#34;&quot;&gt;jquery on Twitter: The jQuery Foundation is now the JS Foundation, you can follow the Foundation on @the_jsf and the jQuery project here on @jquery!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v6.8.0-(current)-|-node.js&quot;&gt;Node v6.8.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.8.0/&quot; title=&quot;Node v6.8.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v6.8.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node v6.8.0リリース。&lt;br&gt;
&lt;code&gt;fs.existsSync&lt;/code&gt;がdeprecatedではなくなった。&lt;code&gt;http.request&lt;/code&gt;が&lt;code&gt;timeout&lt;/code&gt;オプションを受け取れるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;exploring-javascript:-typed-arrays&quot;&gt;Exploring JavaScript: Typed Arrays&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codingbox.io/exploring-javascript-typed-arrays-c8fd4f8bd24f&quot; title=&quot;Exploring JavaScript: Typed Arrays&quot;&gt;codingbox.io/exploring-javascript-typed-arrays-c8fd4f8bd24f&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Typed Arraysについての入門的な解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-to-http/2-|-web-|-google-developers&quot;&gt;Introduction to HTTP/2  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/http2/&quot; title=&quot;Introduction to HTTP/2  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/fundamentals/performance/http2/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTP2&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;HTTP/2入門記事。 HTTP/2の概要が簡潔にまとまっている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascriptの配列のパターン-|-web-scratch&quot;&gt;JavaScriptの配列のパターン | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/10/11/array-patterns/&quot; title=&quot;JavaScriptの配列のパターン | Web Scratch&quot;&gt;efcl.info/2016/10/11/array-patterns/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2015+をベースにした配列のパターンについて。 &lt;code&gt;indexOf(x) === -1&lt;/code&gt;とか使わなくていいパターンや代替となる方法などについてサンプルコードを中心にかかれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;abematv-の番組表リニューアルに伴うパフォーマンス改善---qiita&quot;&gt;AbemaTV の番組表リニューアルに伴うパフォーマンス改善 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/keyi8773/items/f435f062afa7c5dc8e13&quot; title=&quot;AbemaTV の番組表リニューアルに伴うパフォーマンス改善 - Qiita&quot;&gt;qiita.com/keyi8773/items/f435f062afa7c5dc8e13&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;無限スクロール系のUIパフォーマンスの改善について。&lt;br&gt;
レンダリングの改善、&lt;code&gt;position: relative&lt;/code&gt;による意図しないレイヤーが作成される問題、スロットリングなどの低減策についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://havelog.ayumusato.com/develop/performance/e556-compositing_border_and_layer.html&quot; title=&quot;GPUアクセラレーションとposition: relativeによるレイヤー生成について ::ハブろぐ&quot;&gt;GPUアクセラレーションとposition: relativeによるレイヤー生成について ::ハブろぐ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;アメブロ2016-~-react/reduxでつくるisomorphic-web-app-~-|-cyberagent-developers-blog-|-サイバーエージェント-デベロッパーズブログ&quot;&gt;アメブロ2016 ~ React/ReduxでつくるIsomorphic web app ~ | CyberAgent Developers Blog | サイバーエージェント デベロッパーズブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.cyberagent.co.jp/blog/archives/636/&quot; title=&quot;アメブロ2016 ~ React/ReduxでつくるIsomorphic web app ~ | CyberAgent Developers Blog | サイバーエージェント デベロッパーズブログ&quot;&gt;developers.cyberagent.co.jp/blog/archives/636/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;アメブロをReact/Reduxでサーバサイドレンダリングの構造に移行するまでの話。&lt;br&gt;
ツール環境、CSS、アクセシビリティ、レンダリングについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;undo-functionality-with-the-command-pattern-in-javascript-—-pyred&quot;&gt;Undo Functionality with the Command Pattern in JavaScript — Pyred&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://pyred.net/coding/2016/10/12/undo-functionality-with-the-command-pattern-in-javascript&quot; title=&quot;Undo Functionality with the Command Pattern in JavaScript — Pyred&quot;&gt;pyred.net/coding/2016/10/12/undo-functionality-with-the-command-pattern-in-javascript&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;デザインパターン&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでのコマンドパターンについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue.js入門-―最速で作るシンプルなwebアプリケーション：連載｜gihyo.jp-…-技術評論社&quot;&gt;Vue.js入門 ―最速で作るシンプルなWebアプリケーション：連載｜gihyo.jp … 技術評論社&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gihyo.jp/dev/serial/01/vuejs&quot; title=&quot;Vue.js入門 ―最速で作るシンプルなWebアプリケーション：連載｜gihyo.jp … 技術評論社&quot;&gt;gihyo.jp/dev/serial/01/vuejs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue.jsについての連載&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;モダン日本語フォント指定-//-speaker-deck&quot;&gt;モダン日本語フォント指定 // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/tacamy/modanri-ben-yu-huontozhi-ding&quot; title=&quot;モダン日本語フォント指定 // Speaker Deck&quot;&gt;speakerdeck.com/tacamy/modanri-ben-yu-huontozhi-ding&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;fonts&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSのfont-familyについてのスライド。&lt;br&gt;
OSやブラウザでfontの情報が異なるため、&lt;code&gt;@font-face&lt;/code&gt;を使い定義するという話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsperf---community-driven-javascript-performance-benchmarks&quot;&gt;JSPerf - Community Driven JavaScript Performance Benchmarks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jsperf.co/&quot; title=&quot;JSPerf - Community Driven JavaScript Performance Benchmarks&quot;&gt;jsperf.co/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのコードのパフォーマンス計測サイト。&lt;br&gt;
jsperf.com と似たような感じのサイト。&lt;br&gt;
データはGitHubへ自動的にコミットされ、Jekyllを使った静的サイトとして配信されてる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hasharray/jsperf&quot; title=&quot;hasharray/jsperf: JavaScript Performance Benchmarks&quot;&gt;hasharray/jsperf: JavaScript Performance Benchmarks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;emartech/angular2-phonecat:-angular-2-port-of-the-original-angular-phonecat-application-with-webpack&quot;&gt;emartech/angular2-phonecat: Angular 2 port of the original Angular Phonecat application with Webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/emartech/angular2-phonecat&quot; title=&quot;emartech/angular2-phonecat: Angular 2 port of the original Angular Phonecat application with Webpack&quot;&gt;github.com/emartech/angular2-phonecat&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS 2にPhonecatを移植したもの&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pauliusuza/node-v7-async-await-demo:-node.js-7.x-async-/-await-support-demonstration&quot;&gt;pauliusuza/node-v7-async-await-demo: Node.js 7.x async / await support demonstration&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pauliusuza/node-v7-async-await-demo&quot; title=&quot;pauliusuza/node-v7-async-await-demo: Node.js 7.x async / await support demonstration&quot;&gt;github.com/pauliusuza/node-v7-async-await-demo&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 7.xでasync/awaitを有効にするデモ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yarn&quot;&gt;Yarn&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://yarnpkg.com/&quot; title=&quot;Yarn&quot;&gt;yarnpkg.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npmクライアントツール。&lt;br&gt;
&lt;code&gt;package.json&lt;/code&gt;の扱いは既存のnpmと互換を持つ。&lt;br&gt;
キャッシュや並列処理を行い高速なインストール、&lt;code&gt;yarn.lock&lt;/code&gt;を使った依存バージョン固定を正確に行える。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://code.facebook.com/posts/1840075619545360&quot; title=&quot;Yarn: A new package manager for JavaScript | Engineering Blog | Facebook Code&quot;&gt;Yarn: A new package manager for JavaScript | Engineering Blog | Facebook Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/151660845210/hello-yarn&quot; title=&quot;The npm Blog — Hello, Yarn!&quot;&gt;The npm Blog — Hello, Yarn!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yarnpkg.com/en/docs/migrating-from-npm&quot; title=&quot;Migrating from npm | Yarn&quot;&gt;Migrating from npm | Yarn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;naptha/tesseract.js:-pure-javascript-ocr-for-62-languages&quot;&gt;naptha/tesseract.js: Pure Javascript OCR for 62 Languages&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/naptha/tesseract.js&quot; title=&quot;naptha/tesseract.js: Pure Javascript OCR for 62 Languages&quot;&gt;github.com/naptha/tesseract.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;OCR&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;tesseract OCRのJavaScript port。&lt;br&gt;
ブラウザやNodeでOCRできるライブラリ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tesseract-ocr/tesseract/issues/75&quot; title=&quot;Compile to EMScripten/asm.js · Issue #75 · tesseract-ocr/tesseract&quot;&gt;Compile to EMScripten/asm.js · Issue #75 · tesseract-ocr/tesseract&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tesseract-ocr/tesseract&quot; title=&quot;tesseract-ocr/tesseract: Tesseract Open Source OCR Engine (main repository)&quot;&gt;tesseract-ocr/tesseract: Tesseract Open Source OCR Engine (main repository)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;getify/functional-light-js:-a-book-about-functional-programming-in-javascript.&quot;&gt;getify/Functional-Light-JS: A book about functional programming in JavaScript.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/getify/Functional-Light-JS&quot; title=&quot;getify/Functional-Light-JS: A book about functional programming in JavaScript.&quot;&gt;github.com/getify/Functional-Light-JS&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;関数型プログラミング&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ebook&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;関数型JavaScriptについての無料の書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 18 Oct 2016 09:39:00 +0900</pubDate>
        <link>https://jser.info/2016/10/18/js-foundation-npmyarn/</link>
        <guid isPermaLink="true">https://jser.info/2016/10/18/js-foundation-npmyarn/</guid>
        
        <category>jQuery</category>
        
        <category>JS</category>
        
        <category>Yarn</category>
        
        <category>npm</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>JSer.info 300回目 &amp;&amp; https化 &amp;&amp; ユーザー投稿機能</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://jser.info/2016/10/10/javascriptunicodeweb-componentsnpm-scripts/&quot;&gt;前回の投稿&lt;/a&gt;でJSer.infoの記事紹介は300回目になりました。&lt;/p&gt;

&lt;p&gt;とりあえず、300週間途切れなく投稿できたので良かったです。&lt;/p&gt;

&lt;p&gt;ついでに、最近JSer.infoに加えた変更を紹介します。&lt;br&gt;
それ以前の変更とかは以下のスライドにまとまってるので見てみてください。&lt;br&gt;
(&lt;a href=&quot;https://jser.info/trends/&quot; title=&quot;JSer.info トレンド&quot;&gt;JSer.info トレンド&lt;/a&gt;とかたまに見ると便利)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/slide/2016/jser5years/jser.info.html&quot; title=&quot;JSer.info 5周年&quot;&gt;JSer.info 5周年&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;https化&quot;&gt;https化&lt;/h2&gt;

&lt;p&gt;JSer.infoはすべて https になりました。(逆にhttpはhttpsにリダイレクトされます)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/&quot;&gt;https://jser.info/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cloudflare.com/&quot; title=&quot;Cloudflare&quot;&gt;Cloudflare&lt;/a&gt;を使っているだけなので大した手間ではないですが、欠点は外部の&lt;a href=&quot;https://iwb.jp/hatenabookmark-toolbar-ssl-title-bug/&quot;&gt;一部サイト&lt;/a&gt;が変な挙動をしたりするぐらいです。(埋め込みコンテンツはhttpsのサイトしかなかったので特に問題なし)&lt;/p&gt;

&lt;h2 id=&quot;ユーザー投稿機能&quot;&gt;ユーザー投稿機能&lt;/h2&gt;

&lt;p&gt;タイトルに語弊がありますが、JSer.infoに紹介して欲しい記事/サイト/ライブラリなどのURLを投げつけることができる機能です。&lt;/p&gt;

&lt;p&gt;画面右下の&amp;quot;&lt;a href=&quot;https://jser.info/ping/&quot;&gt;記事を紹介する&lt;/a&gt;&amp;quot;ボタンから、JSer.infoに紹介したいURLを投稿することができます。アカウントなど不要なので、気軽にURLを投稿することができます。&lt;/p&gt;

&lt;p&gt;投稿した内容はオープンに&lt;a href=&quot;https://github.com/jser/ping&quot; title=&quot;jser/ping&quot;&gt;jser/ping&lt;/a&gt;で管理されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jser.info/ping/&quot; title=&quot;Ping! to JSer.info&quot;&gt;&lt;img src=&quot;https://jser.info/ping/img/site.gif&quot; alt=&quot;ping&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;単独のフォームとして&lt;a href=&quot;https://jser.info/ping/&quot; title=&quot;Ping! to JSer.info&quot;&gt;Ping! to JSer.info&lt;/a&gt;からも同様の投稿ができます。&lt;/p&gt;

&lt;p&gt;投稿するとBotが&lt;a href=&quot;https://github.com/jser/ping/issues&quot;&gt;jser/ping&lt;/a&gt;に新しいIssueを作るので、あとで自分とか誰かが見て紹介するかもしれないというゆるい感じのものです。&lt;br&gt;
紹介されたときにレス(Pong)が欲しい人がアカウントを入れるぐらいなので、基本的になくて問題ありません。&lt;br&gt;
( 既存のIssueに &lt;img class=&#39;emoji&#39; title=&#39;:+1:&#39; alt=&#39;:+1:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f44d.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; などのリアクションボタンで投票すると参考になるかもしれないです。)&lt;/p&gt;

&lt;p&gt;作った理由としては、&lt;a href=&quot;https://gitter.im/jser/jser.info&quot;&gt;Gitter&lt;/a&gt;とかIssueとかPull Requestを立てるのは&lt;a href=&quot;https://techcrunch.com/2016/09/07/courage/&quot;&gt;勇気&lt;/a&gt;ある人なので、もっと気軽に投げる方法があると良さそうだったので作りました。&lt;/p&gt;

&lt;p&gt;匿名(botが代わりにする)でIssueを立てるために、&lt;a href=&quot;https://github.com/jser/serverless&quot;&gt;lambdaとAPI GatewayでAPI&lt;/a&gt;を作って動かしています。&lt;/p&gt;

&lt;p&gt;もちろん今まで通りGitterなどに書いても問題ないです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gitter.im/jser/jser.info&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/jser/jser.info.svg&quot; alt=&quot;Gitter&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;おわりに&quot;&gt;おわりに&lt;/h2&gt;

&lt;p&gt;300回記念のイベントとかできなかったので、2017年の1月に6周年と合わせて何かやれるといいですね。&lt;/p&gt;

&lt;p&gt;それでは、今後ともよろしくお願いします。&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Oct 2016 23:37:00 +0900</pubDate>
        <link>https://jser.info/2016/10/10/300posts/</link>
        <guid isPermaLink="true">https://jser.info/2016/10/10/300posts/</guid>
        
        <category>JSer.info</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>雑記</category>
        
      </item>
    
      <item>
        <title>2016-10-10のJS: JavaScriptとUnicode、Web Components、npm-scripts</title>
        <description>&lt;p&gt;JSer.info #300 - JSer.info 300回目です。&lt;br&gt;
次の記事で、JSer.infoに最近追加した機能や変更点などをまとめてあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2016/10/10/300posts/&quot;&gt;JSer.info 300回目 &amp;amp;&amp;amp; https化 &amp;amp;&amp;amp; ユーザー投稿機能&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/&quot; title=&quot;What every JavaScript developer should know about Unicode&quot;&gt;What every JavaScript developer should know about Unicode&lt;/a&gt;という記事では、JavaScriptとUnicodeに関する網羅的な解説がされています。&lt;/p&gt;

&lt;p&gt;Unicodeにおける用語、Character、Code point、Plane、BMP、Code unit、サロゲートペア、Combing marks、エスケープシーケンス、文字列比較、Normalize、lengthの返す値、正規表現についてなど幅広い内容を扱っています。&lt;br&gt;
また、ES2015から&lt;code&gt;String#normalize&lt;/code&gt;メソッドや&lt;code&gt;String.fromCodePoint&lt;/code&gt;と&lt;code&gt;String#codePointAt&lt;/code&gt;の追加、IterableなどAPI的にも色々増えているので一度見てみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://1000ch.github.io/slide/webcomponents-2016/&quot; title=&quot;Web Components 2016 &amp;amp;amp; Polymer v2&quot;&gt;Web Components 2016 &amp;amp; Polymer v2&lt;/a&gt;というスライドでは、ChromeやSafariなどに実装されているShadow DOM v1、Custom Elements v1について書かれています。&lt;br&gt;
Web Componentsのライブラリとして有名なPolymer v2のロードマップや&lt;code&gt;is&lt;/code&gt;属性についてなど最近のWeb Components周りの事情についてまとまっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://akabeko.me/blog/2016/10/npm-scripts-web-front-end-development/&quot; title=&quot;npm-scripts で Web フロントエンド開発を管理する – アカベコマイリ&quot;&gt;npm-scripts で Web フロントエンド開発を管理する – アカベコマイリ&lt;/a&gt;という記事では、npm scripts(npm run-scripts)を使ったタスク処理について書かれています。&lt;br&gt;
gulpなどのTask Runnerで行う処理をnpm run-scriptsで行う方法や利用するCLI、クロスプラットフォームに対応したタスクの書き方など幅広く書かれています。&lt;/p&gt;

&lt;p&gt;また、npm run-scriptsで問題となる変数の扱いについても&lt;a href=&quot;http://akabeko.me/blog/2016/05/cross-conf-env-1-0-release/&quot; title=&quot;cross-conf-env&quot;&gt;cross-conf-env&lt;/a&gt;を使った方法などについても書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-@-2016-10-|-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2016-10 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/2016/10/02/proposals-updates&quot; title=&quot;ECMAScript proposal updates @ 2016-10 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/2016/10/02/proposals-updates&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年10月時点での、ECMAScript Proposalのステータスまとめ。 9月のミーティングで変更されたStageのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-9.6.0-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at 9.6.0 · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/9.6.0/Changelog.md&quot; title=&quot;jsdom/Changelog.md at 9.6.0 · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/9.6.0/Changelog.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdom 9.6.0リリース。&lt;br&gt;
HTMLCollectionがiterableに対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-every-javascript-developer-should-know-about-unicode&quot;&gt;What every JavaScript developer should know about Unicode&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rainsoft.io/what-every-javascript-developer-should-know-about-unicode/&quot; title=&quot;What every JavaScript developer should know about Unicode&quot;&gt;rainsoft.io/what-every-javascript-developer-should-know-about-unicode/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Unicode&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの文字列とUnicodeについて網羅的な解説。&lt;br&gt;
Unicodeにおける用語、Character、Code point、Plane、BMP、Code unit、サロゲートペア、Combing marks、エスケープシーケンス、文字列比較、Normalize、length、正規表現について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;progressive-web-apps-with-react.js:-part-2-—-page-load-performance-–-medium&quot;&gt;Progressive Web Apps with React.js: Part 2 — Page Load Performance – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@addyosmani/progressive-web-apps-with-react-js-part-2-page-load-performance-33b932d97cf2&quot; title=&quot;Progressive Web Apps with React.js: Part 2 — Page Load Performance – Medium&quot;&gt;medium.com/@addyosmani/progressive-web-apps-with-react-js-part-2-page-load-performance-33b932d97cf2&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;初期表示を早くするために、Routingごとにファイルとして分けて動的にロードする話。&lt;br&gt;
webpackを使っての分割と読み込み、link preloadを使っての先読み、キャッシュについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascriptライブラリ/プロジェクトのファイルサイズの問題点を見つける方法---qiita&quot;&gt;JavaScriptライブラリ/プロジェクトのファイルサイズの問題点を見つける方法 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/azu/items/7b54d614dc816780034a&quot; title=&quot;JavaScriptライブラリ/プロジェクトのファイルサイズの問題点を見つける方法 - Qiita&quot;&gt;qiita.com/azu/items/7b54d614dc816780034a&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Browserifyやwebpackなどでbundleしたファイルのサイズや依存モジュールのサイズなどを確認する方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;npm-scripts-で-web-フロントエンド開発を管理する-–-アカベコマイリ&quot;&gt;npm-scripts で Web フロントエンド開発を管理する – アカベコマイリ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://akabeko.me/blog/2016/10/npm-scripts-web-front-end-development/&quot; title=&quot;npm-scripts で Web フロントエンド開発を管理する – アカベコマイリ&quot;&gt;akabeko.me/blog/2016/10/npm-scripts-web-front-end-development/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npm run-scriptについて詳しく書かれた記事。&lt;br&gt;
gulpなどのTask Runnerで行う典型的なユースケースをnpm run-scriptでやった場合にどうなるかや、クロスプラットフォームで動くツールについて書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;event.offsetx,yの罠...どこが原点の座標値なのかを理解する-(currenttargetとtarget)---qiita&quot;&gt;event.offsetX,Yの罠...どこが原点の座標値なのかを理解する (currentTargetとtarget) - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/yukiB/items/cc533fbbf3bb8372a924&quot; title=&quot;event.offsetX,Yの罠...どこが原点の座標値なのかを理解する (currentTargetとtarget) - Qiita&quot;&gt;qiita.com/yukiB/items/cc533fbbf3bb8372a924&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;targetとcurrentTargetの違い、offsetX/Y、screenX/Y、getBoundingClientRect()などについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/yukiB/items/31a9e9e600dfb1f34f76&quot; title=&quot;マウスイベントで取得されるカーソル座標パラメータの整理(offset, page, screen, client) - Qiita&quot;&gt;マウスイベントで取得されるカーソル座標パラメータの整理(offset, page, screen, client) - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;proper-error-handling-//-speaker-deck&quot;&gt;Proper Error Handling // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/michelebertoli/proper-error-handling&quot; title=&quot;Proper Error Handling // Speaker Deck&quot;&gt;speakerdeck.com/michelebertoli/proper-error-handling&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;エラーハンドリング周りについてスライド。&lt;br&gt;
何のためにするのか、手法やReactなどにおけるエラーハンドリングについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;create-react-app-introduction-//-speaker-deck&quot;&gt;create-react-app-introduction // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/adwd/create-react-app-introduction&quot; title=&quot;create-react-app-introduction // Speaker Deck&quot;&gt;speakerdeck.com/adwd/create-react-app-introduction&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactのStarterKit的な&lt;code&gt;create-react-app&lt;/code&gt;についての紹介&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebookincubator/create-react-app&quot; title=&quot;facebookincubator/create-react-app: Create React apps with no build configuration.&quot;&gt;facebookincubator/create-react-app: Create React apps with no build configuration.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-components-2016-&amp;amp;-polymer-v2&quot;&gt;Web Components 2016 &amp;amp; Polymer v2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://1000ch.github.io/slide/webcomponents-2016/&quot; title=&quot;Web Components 2016 &amp;amp; Polymer v2&quot;&gt;1000ch.github.io/slide/webcomponents-2016/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsについてのスライド。&lt;br&gt;
Shadow DOM v1、Custom Elements v1それぞれの変更点。&lt;br&gt;
Polymer v2や&lt;code&gt;is&lt;/code&gt;属性についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webvr---virtual-reality-in-your-browsers-//-speaker-deck&quot;&gt;WebVR - virtual reality in your browsers // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/casarock/webvr-virtual-reality-in-your-browsers&quot; title=&quot;WebVR - virtual reality in your browsers // Speaker Deck&quot;&gt;speakerdeck.com/casarock/webvr-virtual-reality-in-your-browsers&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VR&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;VRの歴史やWebVR APIについてのスライド。&lt;br&gt;
またWebVR APIを使ったユースケースの紹介&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;はてな教科書-javascript-編-·-gitbook&quot;&gt;はてな教科書 JavaScript 編 · GitBook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hatena.github.io/Hatena-Textbook-JavaScript/&quot; title=&quot;はてな教科書 JavaScript 編 · GitBook&quot;&gt;hatena.github.io/Hatena-Textbook-JavaScript/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ebook&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの基本文法やDOM、Node.js、jQueryについてをざっと見ていく内容&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://developer.hatenastaff.com/entry/2016/10/05/160000&quot; title=&quot;はてなサマーインターン2016を終え、「はてな教科書」をアップデートしました - Hatena Developer Blog&quot;&gt;はてなサマーインターン2016を終え、「はてな教科書」をアップデートしました - Hatena Developer Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hatena/Hatena-Textbook-JavaScript&quot; title=&quot;hatena/Hatena-Textbook-JavaScript: はてな研修用JavaScript教科書&quot;&gt;hatena/Hatena-Textbook-JavaScript: はてな研修用JavaScript教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel/babel-preset-env:-wip:-autoprefixer-for-babel:-target-specific-environments-(browser,-node,-etc)&quot;&gt;babel/babel-preset-env: WIP: Autoprefixer for Babel: target specific environments (browser, node, etc)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel-preset-env&quot; title=&quot;babel/babel-preset-env: WIP: Autoprefixer for Babel: target specific environments (browser, node, etc)&quot;&gt;github.com/babel/babel-preset-env&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;targetでブラウザやNode.jsのバージョンを指定することで、それに対応した最小限の変換を行うbabel preset&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;denadev/wahid:-a-createjs-compatible-library-for-games&quot;&gt;DeNADev/wahid: A CreateJS-compatible library for games&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/DeNADev/wahid&quot; title=&quot;DeNADev/wahid: A CreateJS-compatible library for games&quot;&gt;github.com/DeNADev/wahid&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CreateJS互換の(モバイル)ゲーム向けライブラリ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://developers.mobage.jp/blog/createjs-wahid&quot; title=&quot;CreateJS 互換ライブラリ wahid の開発 — Mobage Developers Blog&quot;&gt;CreateJS 互換ライブラリ wahid の開発 — Mobage Developers Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ui-router&quot;&gt;UI-Router&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ui-router.github.io/&quot; title=&quot;UI-Router&quot;&gt;ui-router.github.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularとReactに対応したルータライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;office-ui-fabric&quot;&gt;Office UI Fabric&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.office.com/fabric&quot; title=&quot;Office UI Fabric&quot;&gt;dev.office.com/fabric&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Office 365とかのUIコンポーネントを提供するライブラリ。&lt;br&gt;
Vanilla JS、React、Angular、iOS版がある。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-components---o&amp;#x27;reilly-media&quot;&gt;React Components - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/9781785889288.do&quot; title=&quot;React Components - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/9781785889288.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentについての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manning-|-functional-programming-in-javascript&quot;&gt;Manning | Functional Programming in JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.manning.com/books/functional-programming-in-javascript&quot; title=&quot;Manning | Functional Programming in JavaScript&quot;&gt;www.manning.com/books/functional-programming-in-javascript&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;関数型プログラミング&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;関数型プログラミングについての書籍&lt;br&gt;
サンプルコードがES2015ベースで書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-:-functional-programming-for-javascript-developers-|-packt-books&quot;&gt;JavaScript : Functional Programming for JavaScript Developers | PACKT Books&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.packtpub.com/web-development/javascript-functional-programming-javascript-developers&quot; title=&quot;JavaScript : Functional Programming for JavaScript Developers | PACKT Books&quot;&gt;www.packtpub.com/web-development/javascript-functional-programming-javascript-developers&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;関数型プログラミング&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでの関数型プログラミングのパターン本&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 10 Oct 2016 23:11:00 +0900</pubDate>
        <link>https://jser.info/2016/10/10/javascriptunicodeweb-componentsnpm-scripts/</link>
        <guid isPermaLink="true">https://jser.info/2016/10/10/javascriptunicodeweb-componentsnpm-scripts/</guid>
        
        <category>Unicode</category>
        
        <category>WebComponents</category>
        
        <category>npm</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
  </channel>
</rss>
