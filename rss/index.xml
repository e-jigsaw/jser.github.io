<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>http://jser.info/</link>
    <atom:link href="http://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 15 Feb 2016 22:26:36 +0900</pubDate>
    <lastBuildDate>Mon, 15 Feb 2016 22:26:36 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>2016-02-15のJS: Grunt 1.0.0 RC1、ESLint 2.0.0、Underscore/Lodash</title>
        <description>&lt;p&gt;JSer.info #266 - Grunt 1.0.0 RC1がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gruntjs.com/blog/2016-02-11-grunt-1.0.0-rc1-released&quot;&gt;Grunt 1.0.0 rc1 released - Grunt: The JavaScript Task Runner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gruntはコミットが止まっていましたが、jQuery Foundation協力のもと再出発しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jquery.com/2015/11/19/grunt-rebooted/&quot; title=&quot;Grunt, Rebooted&quot;&gt;Grunt, Rebooted&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.0.0 RC1では、&lt;a href=&quot;blog.npmjs.org/post/129378362260/npm-weekly-29-npm-3-out-of-beta-nick-out-of-the&quot;&gt;npm 3で挙動が変更&lt;/a&gt;された&lt;code&gt;peerDependencies&lt;/code&gt;への対応、依存モジュールのアップデートなどが行われています。&lt;/p&gt;

&lt;p&gt;今までは&lt;code&gt;grunt&lt;/code&gt;というコマンドを利用する際には別途&lt;code&gt;grunt-cli&lt;/code&gt;をインストールする必要がありました。&lt;br&gt;
1.0.0からは&lt;code&gt;grunt&lt;/code&gt;のdependenciesに&lt;code&gt;grunt-cli&lt;/code&gt;が含まれれるため、&lt;code&gt;npm install grunt&lt;/code&gt;するだけで&lt;code&gt;grunt&lt;/code&gt;コマンドを利用できます。&lt;/p&gt;

&lt;p&gt;これは、npm run-scriptでの利用を想定した作りとなっています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ npm info grunt@1.0.0-rc1 | grep grunt-cli -B 10
  engines: { node: &amp;#39;&amp;gt;=0.10.0&amp;#39; },
  scripts: { test: &amp;#39;grunt test&amp;#39;, &amp;#39;test-tap&amp;#39;: &amp;#39;grunt test:tap&amp;#39; },
  main: &amp;#39;lib/grunt&amp;#39;,
  dependencies:
   { &amp;#39;coffee-script&amp;#39;: &amp;#39;~1.10.0&amp;#39;,
     dateformat: &amp;#39;~1.0.12&amp;#39;,
     eventemitter2: &amp;#39;~0.4.13&amp;#39;,
     exit: &amp;#39;~0.1.1&amp;#39;,
     &amp;#39;findup-sync&amp;#39;: &amp;#39;~0.3.0&amp;#39;,
     glob: &amp;#39;~6.0.4&amp;#39;,
     &amp;#39;grunt-cli&amp;#39;: &amp;#39;1.0.0-rc1&amp;#39;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;グローバルに&lt;code&gt;grunt&lt;/code&gt;コマンドをインストールしたい場合は、今まで通り&lt;code&gt;npm install grunt-cli -g&lt;/code&gt;とすることで利用できます。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;https://github.com/gruntjs/rfcs&quot; title=&quot;gruntjs/rfcs: RFCs for changes to Grunt&quot;&gt;gruntjs/rfcs&lt;/a&gt;というリポジトリが公開され、RFC(Request for Comments)を受け付ける仕組みづくりなどが進められています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;JavaScript Lintツールの&lt;a href=&quot;http://eslint.org/&quot; title=&quot;ESLint&quot;&gt;ESLint&lt;/a&gt; 2.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/blog/2016/02/eslint-v2.0.0-released&quot;&gt;ESLint v2.0.0 released - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/8bcecd821cca9e849078&quot; title=&quot;ESLint v2.0.0 の変更点まとめ - Qiita&quot;&gt;ESLint v2.0.0 の変更点まとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ルールの設定やプラグイン作成に関連するAPIの変更などが行われているため、以下のページでマイグレーションガイドが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/docs/user-guide/migrating-to-2.0.0&quot; title=&quot;Documentation - ESLint - Pluggable JavaScript linter&quot;&gt;Migrating to v2.0.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cht8687/You-Dont-Need-Lodash-Underscore&quot;&gt;cht8687/You-Dont-Need-Lodash-Underscore: Lists of Javascript methods which you can use natively&lt;/a&gt;ではLodash/Underscoreの中で、ECMAScriptにも同様の機能があるものをまとめています。&lt;/p&gt;

&lt;p&gt;また、それに対するレスポンスとして&lt;a href=&quot;https://github.com/stevemao/You-Dont-Know-About-Lodash-Underscore&quot;&gt;stevemao/You-Dont-Know-About-Lodash-Underscore: In response to You-Dont-Need-Lodash-Underscore&lt;/a&gt;というまとめも公開されています。&lt;br&gt;
Lodash/Underscoreのメソッドは単純に置き換え出来るもの以外の機能も持っているということについて書かれています。&lt;/p&gt;

&lt;p&gt;こちらとは関係ないですが、UnderscoreとLodashのマージを考える&lt;a href=&quot;https://github.com/underdash/underdash&quot; title=&quot;Underdash&quot;&gt;Underdash&lt;/a&gt;のステータスがアップデートされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/underdash/underdash/issues/14&quot; title=&quot;Merge update. · Issue #14 · underdash/underdash&quot;&gt;Merge update. · Issue #14 · underdash/underdash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;So as to the merge I think it&amp;#39;s already happened as Lodash v4.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とLodash側の人が書いています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.1.0---2016.02.09-·-zloirock/core-js&quot;&gt;Release 2.1.0 - 2016.02.09 · zloirock/core-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases/tag/v2.1.0&quot; title=&quot;Release 2.1.0 - 2016.02.09 · zloirock/core-js&quot;&gt;github.com/zloirock/core-js/releases/tag/v2.1.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;core-js 2.1.0リリース。&lt;br&gt;
ES5 polyfillの分離。&lt;br&gt;
&lt;code&gt;Reflect.enumerate&lt;/code&gt;の削除、Metadata Reflection APIの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md&quot; title=&quot;decorators/metadata.md at master · jonathandturner/decorators&quot;&gt;decorators/metadata.md at master · jonathandturner/decorators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;february-2016-security-release-summary-|-node.js&quot;&gt;February 2016 Security Release Summary | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/february-2016-security-releases/&quot; title=&quot;February 2016 Security Release Summary | Node.js&quot;&gt;nodejs.org/en/blog/vulnerability/february-2016-security-releases/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;セキュリティ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのセキュリティアップデート。&lt;br&gt;
0.1x、4.x、5.xのアップデートがそれぞれ公開されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;grunt-1.0.0-rc1-released---grunt:-the-javascript-task-runner&quot;&gt;Grunt 1.0.0 rc1 released - Grunt: The JavaScript Task Runner&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gruntjs.com/blog/2016-02-11-grunt-1.0.0-rc1-released&quot; title=&quot;Grunt 1.0.0 rc1 released - Grunt: The JavaScript Task Runner&quot;&gt;gruntjs.com/blog/2016-02-11-grunt-1.0.0-rc1-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Grunt&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Grunt 1.0.0 RC1リリース。&lt;br&gt;
メジャーアップデートとなるため&lt;code&gt;peerDependencies&lt;/code&gt;についての注意、&lt;code&gt;grant&lt;/code&gt;モジュールにCLIが含まれるように、依存モジュールのアップデートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.0.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.0.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/02/eslint-v2.0.0-released&quot; title=&quot;ESLint v2.0.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/02/eslint-v2.0.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 2.0.0リリース。&lt;br&gt;
&lt;code&gt;eslint --init&lt;/code&gt;で既存コードから判定して利用するルールの設定を作為する機能の追加、&lt;code&gt;eslint:recommended&lt;/code&gt;のアップデート、既存ルールの挙動変更やオプションの非互換な変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/8bcecd821cca9e849078&quot; title=&quot;ESLint v2.0.0 の変更点まとめ - Qiita&quot;&gt;ESLint v2.0.0 の変更点まとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/docs/user-guide/migrating-to-2.0.0&quot; title=&quot;Documentation - ESLint - Pluggable JavaScript linter&quot;&gt;Documentation - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;strongloop-|-a-new-day-for-express!&quot;&gt;StrongLoop | A New Day for Express!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://strongloop.com/strongblog/a-new-day-for-express/&quot; title=&quot;StrongLoop | A New Day for Express!&quot;&gt;strongloop.com/strongblog/a-new-day-for-express/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;community&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;expressがNode.js FoundationのTop-Level Projectとなり、strongloop(IBM)から  https://github.com/expressjs へ移管された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/TSC/blob/master/Applications/Express.md&quot; title=&quot;TSC/Express.md at master · nodejs/TSC&quot;&gt;TSC/Express.md at master · nodejs/TSC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-the-accessible-modal-dialog&quot;&gt;Introducing the Accessible Modal Dialog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.edenspiekermann.com/2016/02/11/introducing-accessible-modal-dialog/&quot; title=&quot;Introducing the Accessible Modal Dialog&quot;&gt;dev.edenspiekermann.com/2016/02/11/introducing-accessible-modal-dialog/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アクセシビリティ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WAI-ARIA&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AccessibleなモーダルUIライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;timaschew/postcss-compare-packs:-compare-most-popular-postcss-packs-like-cssnext,-rucksack-and-precss&quot;&gt;timaschew/postcss-compare-packs: compare most popular postcss packs like cssnext, rucksack and precss&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/timaschew/postcss-compare-packs&quot; title=&quot;timaschew/postcss-compare-packs: compare most popular postcss packs like cssnext, rucksack and precss&quot;&gt;github.com/timaschew/postcss-compare-packs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;PostCSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;cssnext、rucksack、precssなどのPostCSSパックの比較&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript,-tc39-meeting-notesの読み方と修正方法-|-web-scratch&quot;&gt;ECMAScript, TC39 Meeting Notesの読み方と修正方法 | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/02/12/tc39-meeting-notes/&quot; title=&quot;ECMAScript, TC39 Meeting Notesの読み方と修正方法 | Web Scratch&quot;&gt;efcl.info/2016/02/12/tc39-meeting-notes/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMA TC39ミーティングノートの読み方とこのミーティングノートにはどういうことが書かれているのかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cht8687/you-dont-need-lodash-underscore:-lists-of-javascript-methods-which-you-can-use-natively&quot;&gt;cht8687/You-Dont-Need-Lodash-Underscore: Lists of Javascript methods which you can use natively&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cht8687/You-Dont-Need-Lodash-Underscore&quot; title=&quot;cht8687/You-Dont-Need-Lodash-Underscore: Lists of Javascript methods which you can use natively&quot;&gt;github.com/cht8687/You-Dont-Need-Lodash-Underscore&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;underscore/lodashのメソッドをネイティブで同じ表現をする書き方について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/stevemao/You-Dont-Know-About-Lodash-Underscore&quot; title=&quot;stevemao/You-Dont-Know-About-Lodash-Underscore: In response to You-Dont-Need-Lodash-Underscore&quot;&gt;stevemao/You-Dont-Know-About-Lodash-Underscore: In response to You-Dont-Need-Lodash-Underscore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-update-on-strong-mode---google-グループ&quot;&gt;An update on strong mode - Google グループ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/forum/#!msg/strengthen-js/ojj3TDxbHpQ/5ENNAiUzEgAJ&quot; title=&quot;An update on strong mode - Google グループ&quot;&gt;groups.google.com/forum/#!msg/strengthen-js/ojj3TDxbHpQ/5ENNAiUzEgAJ&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8のstrong modeの実装ステータスや結果について。&lt;br&gt;
性能が想定よりでなかった、ES6の仕様に性能のブロッカーがある。複雑になりすぎるなど。&lt;br&gt;
そのため次期V8ではstrong modeのサポートは削除予定&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-perf/react-worker-dom:-experiments-to-see-the-advantages-of-using-web-workers-to-render-react-virtual-dom&quot;&gt;web-perf/react-worker-dom: Experiments to see the advantages of using Web Workers to Render React Virtual DOM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/web-perf/react-worker-dom&quot; title=&quot;web-perf/react-worker-dom: Experiments to see the advantages of using Web Workers to Render React Virtual DOM&quot;&gt;github.com/web-perf/react-worker-dom&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactをWebWorkerで動かす実装とデモ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ariafallah/webpacktutorial:-a-simple-webpack-tutorial&quot;&gt;AriaFallah/WebpackTutorial: A simple webpack tutorial&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/AriaFallah/WebpackTutorial&quot; title=&quot;AriaFallah/WebpackTutorial: A simple webpack tutorial&quot;&gt;github.com/AriaFallah/WebpackTutorial&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackのチュートリアル。&lt;br&gt;
色々なパターンについて設定やなぜそう書くのかについて書かれてる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-newsletter&quot;&gt;React Newsletter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://reactjsnewsletter.com/&quot; title=&quot;React Newsletter&quot;&gt;reactjsnewsletter.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mail&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactのWeeklyメールマガジン&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;marten-de-vries/kneden:-transpile-es7-async/await-to-vanilla-es6-promise-chains:-a-babel-plugin&quot;&gt;marten-de-vries/kneden: Transpile ES7 async/await to vanilla ES6 Promise chains: a Babel plugin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/marten-de-vries/kneden&quot; title=&quot;marten-de-vries/kneden: Transpile ES7 async/await to vanilla ES6 Promise chains: a Babel plugin&quot;&gt;github.com/marten-de-vries/kneden&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/awaitをPromiseを使ったreadableなコードへ変換する目的のBabelプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ruyadorno/ntl:-npm-task-list:-interactive-cli-menu-to-list/run-npm-tasks&quot;&gt;ruyadorno/ntl: Npm Task List: Interactive cli menu to list/run npm tasks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ruyadorno/ntl&quot; title=&quot;ruyadorno/ntl: Npm Task List: Interactive cli menu to list/run npm tasks&quot;&gt;github.com/ruyadorno/ntl&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npm run-scriptをインタラクティブに選択肢て実行出来るツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-glossary…-by-andrea-giammarchi-[pdf/ipad/kindle]&quot;&gt;JavaScript glossary… by Andrea Giammarchi [PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/jsglossary&quot; title=&quot;JavaScript glossary… by Andrea Giammarchi \[PDF/iPad/Kindle\]&quot;&gt;leanpub.com/jsglossary&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptを使った開発に出てくる用語を解説することを目的とした書籍&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.webreflection.co.uk/blog/2016/02/08/jsglossary&quot; title=&quot;My new JavaScript book&quot;&gt;My new JavaScript book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 15 Feb 2016 20:07:00 +0900</pubDate>
        <link>http://jser.info/2016/02/15/grunt-eslint2.0.0-underscore-lodash/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/15/grunt-eslint2.0.0-underscore-lodash/</guid>
        
        <category>JavaScript</category>
        
        <category>Grunt</category>
        
        <category>ESLint</category>
        
        <category>underscore</category>
        
        <category>lodash</category>
        
        <category>Vanilla</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-02-08のJS: Babel 6.5.0、Angular 1.5、letとconst</title>
        <description>&lt;p&gt;JSer.info #265 - Babel 6.5.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.5.0&quot; title=&quot;Release v6.5.0 · babel/babel&quot;&gt;Release v6.5.0 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Babel 6.0.0から一度の走査で全ての変換処理(プラグイン)を適用することで高速化しています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Babel 6 implements a new optimization which merges all plugins together into a single traversal.&lt;br&gt;&lt;br&gt;
-- &lt;a href=&quot;https://babeljs.io/blog/2015/10/29/6.0.0&quot; title=&quot;6.0.0 Released · Babel&quot;&gt;6.0.0 Released · Babel&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;逆に全ての処理が一度に行われるのでプラグイン間で競合を起こしやすかったり、特定のプラグインの前後で処理したい場合などに問題が発生していました。&lt;/p&gt;

&lt;p&gt;Babel 6.5.0では&lt;code&gt;passPerPreset&lt;/code&gt;というオプションが追加され、preset毎にtraversalが作られて処理出来るようになりました。&lt;br&gt;
これにより、プラグイン毎の衝突といったものを制御しやすくなっています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;passPerPreset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;presets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;plugin-1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;preset-2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;plugin-2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また、コード生成の処理を最適化し、最大2倍程度早くなっています。&lt;br&gt;
以下にて解説されていますが、V8の文字列処理の特性を利用した最適化なので特殊なやり方です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/pull/3283#discussion-diff-50198857&quot; title=&quot;Improve generator performance by gzzhanghao · Pull Request #3283 · babel/babel&quot;&gt;Improve generator performance by gzzhanghao · Pull Request #3283 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;V8では文字列結合した文字列を&lt;a href=&quot;https://github.com/v8/v8/blob/b23d5389e024a85cdc5c7d343fe5cc68a14f4d49/src/objects.h#L9141-L9187&quot; title=&quot;ConsString&quot;&gt;ConsString&lt;/a&gt;として保持しています。&lt;br&gt;
そして、その文字列の添字アクセスした時に初めて&lt;a href=&quot;https://github.com/v8/v8/blob/b23d5389e024a85cdc5c7d343fe5cc68a14f4d49/src/objects.cc#L1717-L1743&quot; title=&quot;String::SlowFlatten&quot;&gt;String::SlowFlatten&lt;/a&gt;を行います。&lt;/p&gt;

&lt;p&gt;この&lt;a href=&quot;https://github.com/v8/v8/blob/b23d5389e024a85cdc5c7d343fe5cc68a14f4d49/src/objects.cc#L1717-L1743&quot; title=&quot;String::SlowFlatten&quot;&gt;String::SlowFlatten&lt;/a&gt;の処理が重たいため、Babelのコード生成のような文字列を結合していく処理に、これをできるだけ避けるような変更が入っています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jsbin.com/kekaweheda/edit?js,console&quot;&gt;https://jsbin.com/kekaweheda/edit?js,console&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(JavaScriptエンジンの実装次第ではあります)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.jp/2016/02/angular-150-ennoblement-facilitation.html&quot; title=&quot;Angular 1.5.0 - ennoblement-facilitation has been released!&quot;&gt;Angular 1.5.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular.js/blob/master/CHANGELOG.md#150-ennoblement-facilitation-2016-02-05&quot; title=&quot;angular.js/CHANGELOG.md at master · angular/angular.js&quot;&gt;angular.js/CHANGELOG.md at master · angular/angular.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.5.0ではAngularJS 2へのマイグレーションがしやすなるような機能の追加などが行われています。&lt;br&gt;
&lt;code&gt;module.component()&lt;/code&gt;の追加、one-wayバインディングの対応、ES6 Classesの対応改善、また&lt;code&gt;ngSanitize&lt;/code&gt;のセキュリティ改善が行われています。&lt;/p&gt;

&lt;p&gt;コンポーネントを定義する&lt;code&gt;module.component()&lt;/code&gt;については以下の記事を参照するといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/laco0416/items/edfa917583af4593ad6c&quot; title=&quot;その使い方はもう古いかも？AngularJS老化チェック（ディレクティブ篇） - Qiita&quot;&gt;その使い方はもう古いかも？AngularJS老化チェック（ディレクティブ篇） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://mathiasbynens.be/notes/es6-const&quot; title=&quot;ES6 const is not about immutability · Mathias Bynens&quot;&gt;ES6 const is not about immutability · Mathias Bynens&lt;/a&gt;という記事では、&lt;code&gt;const&lt;/code&gt;に関するよくある誤解を解いています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const&lt;/code&gt;は値を不変にするのではなく、値へのバインディングを不変するという意味でJavaの&lt;code&gt;final&lt;/code&gt;などと同じです。&lt;br&gt;
 そのためオブジェクトのプロパティへの代入は可能のままとなりますが、オブジェクトの不変については&lt;code&gt;Object.freeze()&lt;/code&gt;を利用できる点などについて書かれています。&lt;br&gt;
 またそれをふまえて&lt;code&gt;let&lt;/code&gt;と&lt;code&gt;const&lt;/code&gt;の使い分けについても書かれています。&lt;/p&gt;

&lt;p&gt;合わせて、&lt;code&gt;let&lt;/code&gt;(&lt;code&gt;const&lt;/code&gt;も同様)のスコープについて解説されている以下の記事も参照してみるといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://davidwalsh.name/for-and-against-let&quot; title=&quot;For and against &amp;amp;#39;let&amp;amp;#39;&quot;&gt;For and against &amp;#39;let&amp;#39;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.5.0-·-babel/babel&quot;&gt;Release v6.5.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.5.0&quot; title=&quot;Release v6.5.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.5.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel 6.5.0リリース。&lt;br&gt;
Babel 6から一度のコード変換で全てされていたが、それを複数に分けられる&lt;code&gt;passPerPreset&lt;/code&gt;オプションの追加。&lt;br&gt;
V8のString実装への最適化を行いコード生成を高速化するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dev.opera-—-opera-35-released&quot;&gt;Dev.Opera — Opera 35 released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.opera.com/blog/opera-35/&quot; title=&quot;Dev.Opera — Opera 35 released&quot;&gt;dev.opera.com/blog/opera-35/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Opera&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Opera 35(based on Chromium 48)リリース。&lt;br&gt;
&lt;code&gt;document.fonts&lt;/code&gt;がSetらいくなオブジェクトとなり&lt;code&gt;entries()&lt;/code&gt;などが利用できるように、&lt;code&gt;TouchEvent&lt;/code&gt;イベントコンストラクタの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-1.5.0---ennoblement-facilitation-has-been-released!&quot;&gt;Angular 1.5.0 - ennoblement-facilitation has been released!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.com/2016/02/angular-150-ennoblement-facilitation.html&quot; title=&quot;Angular 1.5.0 - ennoblement-facilitation has been released!&quot;&gt;angularjs.blogspot.com/2016/02/angular-150-ennoblement-facilitation.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS 1.5.0リリース。&lt;br&gt;
AngularJS 2へのアップグレードパスの改善。&lt;br&gt;
&lt;code&gt;module.component()&lt;/code&gt;の追加、one-wayバインディングの対応、ES6 Classesの対応改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-49-beta:-css-custom-properties,-background-sync-with-service-workers,-and-new-es2015-features&quot;&gt;Chromium Blog: Chrome 49 Beta: CSS custom properties, background sync with service workers, and new ES2015 features&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.chromium.org/2016/02/chrome-49-beta-css-custom-properties.html&quot; title=&quot;Chromium Blog: Chrome 49 Beta: CSS custom properties, background sync with service workers, and new ES2015 features&quot;&gt;blog.chromium.org/2016/02/chrome-49-beta-css-custom-properties.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 49 Betaリリース。&lt;br&gt;
CSS custom propetires(CSS Variable)、ES6の対応改善、&lt;code&gt;Object.observe()&lt;/code&gt;が非推奨となるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;looking-ahead:-microsoft-edge-for-developers-in-2016-|-microsoft-edge-dev-blog&quot;&gt;Looking ahead: Microsoft Edge for developers in 2016 | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/02/03/2016-platform-priorities/&quot; title=&quot;Looking ahead: Microsoft Edge for developers in 2016 | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2016/02/03/2016-platform-priorities/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MSEdgeのロードマップ。&lt;br&gt;
アクセシビリティの改善、ES6 modules、Fetch API、Web Notifications、Beacon APIなどの対応を予定している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typings-で-d.ts-の管理をする-|-スマホ神-–-javascript-受託開発-–&quot;&gt;typings で d.ts の管理をする | スマホ神 – JavaScript 受託開発 –&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://smart.ataglance.jp/2016-02-04-manage-dts-by-typings/&quot; title=&quot;typings で d.ts の管理をする | スマホ神 – JavaScript 受託開発 –&quot;&gt;smart.ataglance.jp/2016-02-04-manage-dts-by-typings/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;typings&lt;/code&gt;を遣ったd.tsの管理について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;handling-props-and-class-names-in-react-–-simonsmith.io-–-portfolio-and-blog-of-a-london-based-front-end-web-developer&quot;&gt;Handling props and class names in React – simonsmith.io – Portfolio and blog of a London based front-end web developer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://simonsmith.io/handling-props-and-classnames-in-react/&quot; title=&quot;Handling props and class names in React – simonsmith.io – Portfolio and blog of a London based front-end web developer&quot;&gt;simonsmith.io/handling-props-and-classnames-in-react/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React ComponentとclassNameの管理パターン。&lt;br&gt;
classnamesモジュールを使う方法とテストについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;for-and-against-&amp;#x27;let&amp;#x27;&quot;&gt;For and against &amp;#x27;let&amp;#x27;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://davidwalsh.name/for-and-against-let&quot; title=&quot;For and against &amp;#39;let&amp;#39;&quot;&gt;davidwalsh.name/for-and-against-let&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;let&lt;/code&gt;とスコープについての詳しい解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-const-is-not-about-immutability-·-mathias-bynens&quot;&gt;ES6 const is not about immutability · Mathias Bynens&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mathiasbynens.be/notes/es6-const&quot; title=&quot;ES6 const is not about immutability · Mathias Bynens&quot;&gt;mathiasbynens.be/notes/es6-const&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const&lt;/code&gt;は値を不変(immutable)にするのではなく、値へのバインディングを不変にするという意味。&lt;br&gt;
そのためオブジェクトのプロパティへの代入は可能のままだが、オブジェクトの不変については&lt;code&gt;Object.freeze()&lt;/code&gt;が扱う。また&lt;code&gt;let&lt;/code&gt;と&lt;code&gt;const&lt;/code&gt;の使い分けについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developer-edition-46-–-more-memory-tooling,-improved-@media-sidebar-and-more-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Developer Edition 46 – More memory tooling, improved @media sidebar and more ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/02/developer-edition-46-more-memory-tooling-improved-media-sidebar-and-more/&quot; title=&quot;Developer Edition 46 – More memory tooling, improved @media sidebar and more ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/02/developer-edition-46-more-memory-tooling-improved-media-sidebar-and-more/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 46の開発者ツール変更点について。&lt;br&gt;
Dominator viewの追加、開発者ツールが閉じてても&lt;code&gt;debugger&lt;/code&gt;ステートメントでブレークするようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-es2015-proxies-|-web-updates---google-developers&quot;&gt;Introducing ES2015 Proxies | Web Updates - Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/02/es2015-proxies&quot; title=&quot;Introducing ES2015 Proxies | Web Updates - Google Developers&quot;&gt;developers.google.com/web/updates/2016/02/es2015-proxies&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2015 Proxiesの使い方について。&lt;br&gt;
Reflect APIとの組み合わた使い方などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;다함께,-fluxutils-한바퀴!&quot;&gt;다함께, FluxUtils 한바퀴!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/UyeongJu/fluxutils&quot; title=&quot;다함께, FluxUtils 한바퀴!&quot;&gt;www.slideshare.net/UyeongJu/fluxutils&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;flux utilsについてのスライド。&lt;br&gt;
flux utilsのソースコードを見ながらどのようなシーケンスでやり取りしてるのか、fluxアーキテクチャでの非同期処理についてなどがわかりやすく解説されてる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;top-|-diff-of-htmls&quot;&gt;Top | Diff of HTMLs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://diffofhtmls.herokuapp.com/&quot; title=&quot;Top | Diff of HTMLs&quot;&gt;diffofhtmls.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;W3CとWHATWGのHTML仕様書のdiffを見ることが出来るサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vasanthk/css-refresher-notes:-css-refresher!&quot;&gt;vasanthk/css-refresher-notes: CSS Refresher!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vasanthk/css-refresher-notes&quot; title=&quot;vasanthk/css-refresher-notes: CSS Refresher!&quot;&gt;github.com/vasanthk/css-refresher-notes&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS再入門。&lt;br&gt;
よく使う機能や指定の仕方について詳しく解説されてる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;start-runner/start:-dead-simple-tasks-runner&quot;&gt;start-runner/start: Dead simple tasks runner&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/start-runner/start&quot; title=&quot;start-runner/start: Dead simple tasks runner&quot;&gt;github.com/start-runner/start&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promiseベースのタスク自動化ツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;teamweek/instadate:-a-minimal-high-performance-date-library-for-node.js-and-browser&quot;&gt;Teamweek/instadate: A minimal high performance date library for Node.js and Browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Teamweek/instadate&quot; title=&quot;Teamweek/instadate: A minimal high performance date library for Node.js and Browser&quot;&gt;github.com/Teamweek/instadate&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;日付、時間処理を扱うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thinking-in-react&quot;&gt;Thinking In React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.thinkinginreact.xyz/&quot; title=&quot;Thinking In React&quot;&gt;www.thinkinginreact.xyz/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactを扱う場合においての現実問題に対する解を考えていく電子書籍。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 08 Feb 2016 20:19:00 +0900</pubDate>
        <link>http://jser.info/2016/02/08/babel6.5.0-angular1.5-let-const/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/08/babel6.5.0-angular1.5-let-const/</guid>
        
        <category>ES6</category>
        
        <category>Babel</category>
        
        <category>AngularJS</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-02-02のJS: Firefox 44.0、ES2016の追加機能、webpack2β</title>
        <description>&lt;p&gt;JSer.info #264 - &lt;a href=&quot;https://www.mozilla.jp/firefox/44.0/releasenotes/&quot; title=&quot;Firefox 44.0&quot;&gt;Firefox 44.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;let&lt;/code&gt;と&lt;code&gt;const&lt;/code&gt;は&lt;a href=&quot;https://www.fxsitecompat.com/ja/docs/2015/variables-defined-with-const-and-let-are-no-longer-properties-on-window-redeclaration-with-let-will-throw/&quot;&gt;Spidermonkey独自の動作&lt;/a&gt;が含まれていましたが、今回ES6準拠となるように変更されました。&lt;/p&gt;

&lt;p&gt;HTTP通信において&lt;a href=&quot;https://en.wikipedia.org/wiki/Brotli&quot; title=&quot;Brotli&quot;&gt;Brotli&lt;/a&gt;の圧縮アルゴリズムがサポートされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation#The_Accept-Encoding_header&quot; title=&quot;Content negotiation - HTTP | MDN&quot;&gt;Content negotiation - HTTP | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chromeでも49で実装されています。(HTTPSのみ有効)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://groups.google.com/a/chromium.org/forum/#!msg/blink-dev/JufzX024oy0/WEOGbN43AwAJ&quot; title=&quot;Intent to Ship: Brotli (Accept-encoding: br on HTTPS connection) - Google グループ&quot;&gt;Intent to Ship: Brotli (Accept-encoding: br on HTTPS connection) - Google グループ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;ECMAScript 2016(ES2016)で追加される機能が確定しました。&lt;/p&gt;

&lt;p&gt;ES2016からはProposal(≒機能ごと)に仕様の検討を行い、最終的に合意を得られたProposalがECMAScriptの仕様へマージされます。&lt;br&gt;
この新しい策定プロセスで以下の2つのProposalがES2016の仕様に入ります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/Array.prototype.includes/&quot; title=&quot;Array.prototype.includes&quot;&gt;Array.prototype.includes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/exponentiation-operator&quot; title=&quot;Exponentiation Operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Proposalから仕様となったものがこの2つという意味なので、ES2016における変更点は他にも色々あります。&lt;/p&gt;

&lt;p&gt;詳しくは別途記事を書いたので以下を参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.info/2016/02/01/es2016/&quot; title=&quot;ECMAScript 2016 features &amp;amp;amp; changes - JSer.info&quot;&gt;ECMAScript 2016 features &amp;amp; changes - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/sokra/27b24881210b56bbaff7&quot; title=&quot;What&amp;amp;#39;s new in webpack 2&quot;&gt;What&amp;#39;s new in webpack 2&lt;/a&gt;ではwebpack 2での追加機能や変更点について書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rollup/rollup&quot; title=&quot;Rollup&quot;&gt;Rollup&lt;/a&gt;のようにES6 Modulesを解析し、使われているもの以外を削除することが出来るようになっています。&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;System.import&lt;/code&gt;をモジュールの分割ポイントとして扱うことができるようになるようです。&lt;/p&gt;

&lt;p&gt;その他の変更はIssueを見るのがいいと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/issues/729&quot; title=&quot;Scheduled small breaking changes for 2.0 · Issue #729 · webpack/webpack&quot;&gt;Scheduled small breaking changes for 2.0 · Issue #729 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/labels/webpack-2&quot; title=&quot;Issues · webpack/webpack&quot;&gt;Issues · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-4.9&quot;&gt;V8 JavaScript Engine: V8 Release 4.9&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/01/v8-release-49.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 4.9&quot;&gt;v8project.blogspot.com/2016/01/v8-release-49.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8 4.9リリース。&lt;br&gt;
Destructuring、Proxy、Reflect、デフォルトパラメータなどES6の仕様追従。&lt;br&gt;
&lt;code&gt;Math.random()&lt;/code&gt;のアルゴリズム改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.info/2016/01/27/math.random-xsfhit/&quot; title=&quot;メジャーブラウザのMath.random()のアルゴリズムがXorShift128+になった - JSer.info&quot;&gt;メジャーブラウザのMath.random()のアルゴリズムがXorShift128+になった - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-ui-1.12.0-beta-1-|-jquery-ui-blog&quot;&gt;jQuery UI 1.12.0 Beta 1 | jQuery UI Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jqueryui.com/2016/01/jquery-ui-1-12-0-beta-1/&quot; title=&quot;jQuery UI 1.12.0 Beta 1 | jQuery UI Blog&quot;&gt;blog.jqueryui.com/2016/01/jquery-ui-1-12-0-beta-1/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery UI 1.12.0 Beta 1リリース。&lt;br&gt;
controlgroupとcheckboxradioの追加、npmサポート、IE7サポート終了など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-master-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at master · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/master/Changelog.md&quot; title=&quot;jsdom/Changelog.md at master · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/master/Changelog.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdom 8.0.0リリース。&lt;br&gt;
IDLからコードを生成することで仕様との互換性の向上、&lt;code&gt;Element#insertAdjacentHTML&lt;/code&gt;と&lt;code&gt;Node#adoptNode&lt;/code&gt;の実装など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-44.0-リリースノート&quot;&gt;Firefox 44.0 リリースノート&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mozilla.jp/firefox/44.0/releasenotes/&quot; title=&quot;Firefox 44.0 リリースノート&quot;&gt;www.mozilla.jp/firefox/44.0/releasenotes/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 44.0リリース。&lt;br&gt;
&lt;code&gt;Symbol.toPrimitive&lt;/code&gt;の実装、letやconstがES6の仕様に追従、OffscreenCanvas APIをフラグ付きで追加、WebRTCから接頭辞の削除など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/44&quot; title=&quot;Firefox 44 for developers - Mozilla | MDN&quot;&gt;Firefox 44 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/44/&quot; title=&quot;Firefox 44 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 44 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/docs/2015/variables-defined-with-const-and-let-are-no-longer-properties-on-window-redeclaration-with-let-will-throw/&quot; title=&quot;const や let で定義された変数は window 上のプロパティとならなくなり、let による再宣言は例外が投げられます | Firefox サイト互換性情報&quot;&gt;const や let で定義された変数は window 上のプロパティとならなくなり、let による再宣言は例外が投げられます | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-1.8-beta---typescript---site-home---msdn-blogs&quot;&gt;Announcing TypeScript 1.8 Beta - TypeScript - Site Home - MSDN Blogs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.msdn.com/b/typescript/archive/2016/01/28/announcing-typescript-1-8-beta.aspx&quot; title=&quot;Announcing TypeScript 1.8 Beta - TypeScript - Site Home - MSDN Blogs&quot;&gt;blogs.msdn.com/b/typescript/archive/2016/01/28/announcing-typescript-1-8-beta.aspx&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 1.8βリリース。&lt;br&gt;
tscにJavaScriptファイルを扱う &lt;code&gt;--allowJs&lt;/code&gt; が追加された。&lt;br&gt;
ES6 to ES5をTypeScript Compilerで変換、d.tsがないライブラリとかをtscが直接扱えるようになる。&lt;br&gt;
Unreachable codeの検出、String literal typesの追加、JSXの対応改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#typescript-18-upcoming&quot; title=&quot;What&amp;amp;#x27;s new in TypeScript · Microsoft/TypeScript Wiki&quot;&gt;What&amp;#x27;s new in TypeScript · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;phantomjs-2.1-release-notes-|-phantomjs&quot;&gt;PhantomJS 2.1 Release Notes | PhantomJS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://phantomjs.org/release-2.1.html&quot; title=&quot;PhantomJS 2.1 Release Notes | PhantomJS&quot;&gt;phantomjs.org/release-2.1.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PhantomJS 2.1リリース。&lt;br&gt;
SSL Client Authentication、context menuイベントのサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v3.1.0-·-rackt/redux&quot;&gt;Release v3.1.0 · rackt/redux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rackt/redux/releases/tag/v3.1.0&quot; title=&quot;Release v3.1.0 · rackt/redux&quot;&gt;github.com/rackt/redux/releases/tag/v3.1.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Redux 3.1.0リリース。&lt;br&gt;
&lt;code&gt;createStore()&lt;/code&gt;が&lt;code&gt;applyMiddleware()&lt;/code&gt;をオプションとして受け入れられるようになった。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deprecate-tsd-·-issue-#269-·-definitelytyped/tsd&quot;&gt;Deprecate TSD · Issue #269 · DefinitelyTyped/tsd&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/DefinitelyTyped/tsd/issues/269&quot; title=&quot;Deprecate TSD · Issue #269 · DefinitelyTyped/tsd&quot;&gt;github.com/DefinitelyTyped/tsd/issues/269&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptの型定義ファイルを管理するツールであるtsdが非推奨となり、代わりにtypingsを利用することが推奨されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/typings/typings&quot; title=&quot;typings/typings - TypeScript&quot;&gt;typings/typings - TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vvakame/dtsm&quot; title=&quot;vvakame/dtsm - TypeScript&quot;&gt;vvakame/dtsm - TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-2016-features-&amp;amp;-changes---jser.info&quot;&gt;ECMAScript 2016 features &amp;amp; changes - JSer.info&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jser.info/2016/02/01/es2016/&quot; title=&quot;ECMAScript 2016 features &amp;amp; changes - JSer.info&quot;&gt;jser.info/2016/02/01/es2016/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2016で追加される機能が確定したことについて。&lt;br&gt;
また新機能以外の変更点やどこを見れば仕様の変更が分かるかなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#x27;s-new-in-webpack-2&quot;&gt;What&amp;#x27;s new in webpack 2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/sokra/27b24881210b56bbaff7&quot; title=&quot;What&amp;#39;s new in webpack 2&quot;&gt;gist.github.com/sokra/27b24881210b56bbaff7&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack 2での変更点について。&lt;br&gt;
ES6 modulesをベースとした最適化、&lt;code&gt;System.import&lt;/code&gt;を使った動的ロード向けのモジュール分離に対応するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-application-libraries-and-component-architectures---telerik-developer-network&quot;&gt;Front-end Application Libraries and Component Architectures - Telerik Developer Network&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/front-end-application-frameworks-component-architectures/&quot; title=&quot;Front-end Application Libraries and Component Architectures - Telerik Developer Network&quot;&gt;developer.telerik.com/featured/front-end-application-frameworks-component-architectures/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;コンポーネントを扱うライブラリの仕組みや構成、ルーター、サポートブラウザなどについての比較まとめ。&lt;br&gt;
Polymer、React、Riot.js、Vue.js、Aurelia、Angular2について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;spencer-dixon---test-driven-react-tutorial&quot;&gt;Spencer Dixon - Test Driven React Tutorial&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://spencerdixon.com/blog/test-driven-react-tutorial.html&quot; title=&quot;Spencer Dixon - Test Driven React Tutorial&quot;&gt;spencerdixon.com/blog/test-driven-react-tutorial.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactのテストについてのチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;adding-eslint-to-your-project-is-now-easier-than-ever&quot;&gt;Adding ESLint to Your Project is Now Easier than Ever&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://devnull.guru/adding-eslint-to-your-project-is-easier-than-ever/&quot; title=&quot;Adding ESLint to Your Project is Now Easier than Ever&quot;&gt;devnull.guru/adding-eslint-to-your-project-is-easier-than-ever/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Bluetooth&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 2.xで導入されてる&lt;code&gt;--init&lt;/code&gt;によるAutomatic Configurationについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;createjs入門---ics-media&quot;&gt;CreateJS入門 - ICS MEDIA&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ics.media/tutorial-createjs/index.html&quot; title=&quot;CreateJS入門 - ICS MEDIA&quot;&gt;ics.media/tutorial-createjs/index.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CreateJS入門サイト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;styleguide:-accessibility-·-edx/ux-pattern-library-wiki&quot;&gt;Styleguide: Accessibility · edx/ux-pattern-library Wiki&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/edx/ux-pattern-library/wiki/Styleguide:-Accessibility&quot; title=&quot;Styleguide: Accessibility · edx/ux-pattern-library Wiki&quot;&gt;github.com/edx/ux-pattern-library/wiki/Styleguide:-Accessibility&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;アクセシビリティ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WAI-ARIA&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;アクセシビリティについてスタイルガイド&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;naomiaro/waveform-playlist:-multitrack-web-audio-editor-and-player-with-canvas-waveform-preview.-set-cues,-fades-and-shift-multiple-tracks-in-time.-project-inspired-by-audacity.&quot;&gt;naomiaro/waveform-playlist: Multitrack Web Audio editor and player with canvas waveform preview. Set cues, fades and shift multiple tracks in time. Project inspired by Audacity.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/naomiaro/waveform-playlist&quot; title=&quot;naomiaro/waveform-playlist: Multitrack Web Audio editor and player with canvas waveform preview. Set cues, fades and shift multiple tracks in time. Project inspired by Audacity.&quot;&gt;github.com/naomiaro/waveform-playlist&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AudacityインスパイアなWeb Audioを使った音声エディタ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sinsoku/clairvoyance&quot;&gt;sinsoku/clairvoyance&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sinsoku/clairvoyance&quot; title=&quot;sinsoku/clairvoyance&quot;&gt;github.com/sinsoku/clairvoyance&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSのカバレッジ計測ツール。&lt;br&gt;
CSSファイルに書かれたスタイルがHTMLの中でどのくらい使われてるかを計測できるツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sinsoku.hatenablog.com/entry/2016/01/31/174155&quot; title=&quot;CSS のカバレッジを計測する Clairvoyance というツールを作りました - アジャイルSEの憂鬱&quot;&gt;CSS のカバレッジを計測する Clairvoyance というツールを作りました - アジャイルSEの憂鬱&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;juliankrispel/decaf:-coffeescript-to-es.next-transpiler&quot;&gt;juliankrispel/decaf: Coffeescript to ES.next transpiler&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/juliankrispel/decaf&quot; title=&quot;juliankrispel/decaf: Coffeescript to ES.next transpiler&quot;&gt;github.com/juliankrispel/decaf&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CoffeeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CoffeeScriptのコードをJavaScriptに変換するツール。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/decaffeinate/decaffeinate&quot; title=&quot;Issues · decaffeinate/decaffeinate&quot;&gt;Issues · decaffeinate/decaffeinate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dfilatov/vidom:-library-to-build-ui-based-on-virtual-dom&quot;&gt;dfilatov/vidom: Library to build UI based on virtual DOM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dfilatov/vidom&quot; title=&quot;dfilatov/vidom: Library to build UI based on virtual DOM&quot;&gt;github.com/dfilatov/vidom&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactインスパイアなVirtual DOMを持つUIライブラリ。&lt;br&gt;
Reactより小さく早いものを目的としている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developit/preact:-fast-3kb-react-alternative-with-the-same-es6-api.-components-&amp;amp;-virtual-dom.&quot;&gt;developit/preact: Fast 3kb React alternative with the same ES6 API. Components &amp;amp; Virtual DOM.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/developit/preact&quot; title=&quot;developit/preact: Fast 3kb React alternative with the same ES6 API. Components &amp;amp; Virtual DOM.&quot;&gt;github.com/developit/preact&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactのコアを再実装することを目的としたライブラリ。&lt;br&gt;
ContextやPropTypesなどを削除している。&lt;br&gt;
preact-compatというReactの互換レイヤーを別モジュールとして持っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/developit/preact/wiki/Differences-to-React&quot; title=&quot;Differences to React · developit/preact Wiki&quot;&gt;Differences to React · developit/preact Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/developit/preact-compat&quot; title=&quot;developit/preact-compat - JavaScript&quot;&gt;developit/preact-compat - JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zeithq/micro:-micro-—-async-http-microservices&quot;&gt;zeithq/micro: Micro — Async HTTP microservices&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zeithq/micro&quot; title=&quot;zeithq/micro: Micro — Async HTTP microservices&quot;&gt;github.com/zeithq/micro&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;小さなHTTPサーバライブラリ。&lt;br&gt;
リクエストを受け取りレスポンスを返すというシンプルなもの。&lt;br&gt;
async/awaitをデフォルトで使えるようになっている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sindresorhus/got:-simplified-http/https-requests&quot;&gt;sindresorhus/got: Simplified HTTP/HTTPS requests&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/got&quot; title=&quot;sindresorhus/got: Simplified HTTP/HTTPS requests&quot;&gt;github.com/sindresorhus/got&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js向けのHTTPクライアントライブラリ。&lt;code&gt;request&lt;/code&gt;と同じ立ち位置のライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;viewer.js&quot;&gt;Viewer.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://fengyuanchen.github.io/viewerjs/&quot; title=&quot;Viewer.js&quot;&gt;fengyuanchen.github.io/viewerjs/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;画像&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;多機能な画像ビューアライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stylelint/stylelint&quot;&gt;stylelint/stylelint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stylelint/stylelint&quot; title=&quot;stylelint/stylelint&quot;&gt;github.com/stylelint/stylelint&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ルールやプラグインで拡張できるCSSのスタイルLintツール&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 02 Feb 2016 19:57:00 +0900</pubDate>
        <link>http://jser.info/2016/02/02/firefox44-es2016-new-feature-webpack2beta/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/02/firefox44-es2016-new-feature-webpack2beta/</guid>
        
        <category>Firefox</category>
        
        <category>ECMAScript</category>
        
        <category>webpack</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>ECMAScript 2016 features &amp; changes</title>
        <description>&lt;p&gt;ECMAScript 2016に新規追加される機能が&lt;a href=&quot;https://github.com/tc39/agendas/blob/master/2016/01.md&quot; title=&quot;50th meeting of Ecma TC39&quot;&gt;50回目のEcma TC39ミーティング&lt;/a&gt;で確定しました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;On March 1st I will be snapshotting the ECMA262 draft to start its journey toward becoming the official ECMAScript 2016 standard!&lt;/p&gt;&amp;mdash; Brian Terlson (@bterlson) &lt;a href=&quot;https://twitter.com/bterlson/status/692424625813377026&quot;&gt;January 27, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;array.prototype.includes&quot;&gt;&lt;a href=&quot;https://github.com/tc39/Array.prototype.includes/&quot; title=&quot;Array.prototype.includes&quot;&gt;Array.prototype.includes&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;ES6で&lt;code&gt;Array.prototype.contains&lt;/code&gt;として追加される予定でしたが、Break the webであったため延期されていた機能です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://esdiscuss.org/topic/having-a-non-enumerable-array-prototype-contains-may-not-be-web-compatible&quot; title=&quot;Having a non-enumerable Array.prototype.contains may not be web-compatible&quot;&gt;Having a non-enumerable Array.prototype.contains may not be web-compatible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/constellation/introducing-break-the-web-array-extra-methods-case&quot; title=&quot;Introducing Break the Web: Array extra methods case // Speaker Deck&quot;&gt;Introducing Break the Web: Array extra methods case // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;exponentiation-operator&quot;&gt;&lt;a href=&quot;https://github.com/rwaldron/exponentiation-operator&quot; title=&quot;Exponentiation Operator&quot;&gt;Exponentiation Operator&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;x ** y&lt;/code&gt; は &lt;code&gt;Math.pow(x, y)&lt;/code&gt; と同じ機能です。&lt;/p&gt;

&lt;p&gt;詳しくは既に幾つか記事が書かれているので以下を参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2016/01/ecmascript-2016.html&quot;&gt;The final feature set of ECMAScript 2016 (ES7)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ponyfoo.com/articles/es2016-features-and-ecmascript-as-a-living-standard&quot;&gt;ES2016 Features &amp;amp; ECMAScript as a Living Standard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://teppeis.hatenablog.com/entry/2016/01/es2016-feature-freeze&quot;&gt;ES2016の追加機能が決定、あるいはES7言うな問題 - teppeis blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ES2016からは機能ごとのProposalを出し、承認されたらECMAScriptの仕様にマージするという形にプロセスが変わっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://efcl.info/2015/10/18/ecmascript-paper/&quot; title=&quot;ECMAScriptの仕様策定に関するカンニングペーパー | Web Scratch&quot;&gt;ECMAScriptの仕様策定に関するカンニングペーパー | Web Scratch&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上記の追加された機能がマージされた仕様書のスナップショットが3月に、&lt;br&gt;
最終的にEcma GAで承認されたら6月に正式なECMAScript 2016としてリリースされます。&lt;/p&gt;

&lt;p&gt;以下にES2016のドラフト版などがリリースされているので、これを見るのが分かりやすいです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases&quot; title=&quot;Releases · tc39/ecma262&quot;&gt;Releases · tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ECMAScriptも&lt;a href=&quot;https://whatwg.org/&quot; title=&quot;WHATWG&quot;&gt;WHATWG&lt;/a&gt;のHTMLのように&lt;a href=&quot;http://tc39.github.io/ecma262/&quot;&gt;Living Standard&lt;/a&gt;となっているので、バージョン番号はスナップショット的な扱いです。&lt;/p&gt;

&lt;p&gt;これまでのドラフト版を見ると追加された機能以外も仕様的には色々なアップデートが含まれていることが分かります。&lt;/p&gt;

&lt;h2 id=&quot;変更された仕様&quot;&gt;変更された仕様&lt;/h2&gt;

&lt;p&gt;幾つか例をあげてみます。&lt;/p&gt;

&lt;h3 id=&quot;promise.allとpromise.raceが@@speciesを無視するように&quot;&gt;&lt;code&gt;Promise.all&lt;/code&gt;と&lt;code&gt;Promise.race&lt;/code&gt;が&lt;code&gt;@@species&lt;/code&gt;を無視するように&lt;/h3&gt;

&lt;p&gt;ES6では&lt;code&gt;Promise.resolve&lt;/code&gt;が&lt;code&gt;@@species&lt;/code&gt;を無視する変更は入ってましたが、allとraceについても同様の変更が入りました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/issues/151&quot; title=&quot;Remove @@species lookup from Promise.all() and Promise.race() · Issue #151 · tc39/ecma262&quot;&gt;Remove @@species lookup from Promise.all() and Promise.race() · Issue #151 · tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hostpromiserejectiontrackerの抽象インタフェースが追加された&quot;&gt;&lt;a href=&quot;https://wiki.suikawiki.org/n/HostPromiseRejectionTracker&quot; title=&quot;HostPromiseRejectionTracker&quot;&gt;HostPromiseRejectionTracker&lt;/a&gt;の抽象インタフェースが追加された&lt;/h3&gt;

&lt;p&gt;これは&lt;code&gt;HostPromiseRejectionTracker&lt;/code&gt;をHost環境(ブラウザなど)が実装していると、&lt;br&gt;
PromiseでUnhandled Rejectionが起きた際に呼ぶという仕様です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/domenic/unhandled-rejections-browser-spec&quot; title=&quot;domenic/unhandled-rejections-browser-spec&quot;&gt;domenic/unhandled-rejections-browser-spec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/promises-book/&quot; title=&quot;JavaScript Promiseの本&quot;&gt;JavaScript Promiseの本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この仕様と&lt;a href=&quot;https://blog.whatwg.org/html-standard-now-more-community-driven&quot;&gt;WHATWG/htmlが連携&lt;/a&gt;し、&lt;code&gt;&amp;#39;unhandledRejection&amp;#39;&lt;/code&gt;と&lt;code&gt;&amp;#39;rejectionHandled&amp;#39;&lt;/code&gt;イベントの仕様が実装されています。&lt;br&gt;
(具体的にユーザーが使うのはこっち)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/slide/error-handling/promise-error-handling.html&quot; title=&quot;Promise Error Handling&quot;&gt;Promise Error Handling&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;#39;unhandledRejection&amp;#39;&lt;/code&gt;と&lt;code&gt;&amp;#39;rejectionHandled&amp;#39;&lt;/code&gt;について解説したもの&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;generatorfunctionから[[construct]]が取り除かれた&quot;&gt;GeneratorFunctionから&lt;code&gt;[[Construct]]&lt;/code&gt;が取り除かれた&lt;/h3&gt;

&lt;p&gt;ES6ではGeneratorFunctionが&lt;code&gt;new&lt;/code&gt;できました。&lt;br&gt;
しかし、ES2016では例外を投げるように変更されました。&lt;br&gt;
(&lt;code&gt;[[Construct]]&lt;/code&gt;を持つ == &lt;code&gt;new&lt;/code&gt;できる)&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;var g = { *g() {} }.g;
new g(); // ES6ではvalid、ES2016ではthrow error
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases/tag/es2016-draft-20151201&quot; title=&quot;Release ES2016 Draft 2015-12-01 · tc39/ecma262&quot;&gt;Release ES2016 Draft 2015-12-01 · tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;proxyの[[enumerate]]-trapの変更&quot;&gt;Proxyの&lt;code&gt;[[Enumerate]]&lt;/code&gt; trapの変更&lt;/h3&gt;

&lt;p&gt;まだ仕様に変更は入ってないですが、変更が予定されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/issues/160#issuecomment-176403705&quot;&gt;&lt;code&gt;[[Enumerate]]&lt;/code&gt; and for-in on proxies can produce non-string keys · Issue #160 · tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このように、追加された機能以外も細かな変更などが行われています。&lt;br&gt;
Breaking Changeですが、まだ利用してるケースも少ない(そもそも実装が少ない)ので早いうちに修正してるという印象です。&lt;/p&gt;

&lt;h2 id=&quot;変更を知る方法&quot;&gt;変更を知る方法&lt;/h2&gt;

&lt;p&gt;このような正式な変更はどこで知るのかを簡単にまとめてみます。&lt;br&gt;
細かい修正以外の変更は、2ヶ月に1回開催されているTC39のミーティングで議論されてから追加されます。&lt;/p&gt;

&lt;p&gt;情報の伝達が早い順で並べるとTwitter &amp;gt; GitHub &amp;gt; その他という感じです。&lt;/p&gt;

&lt;h3 id=&quot;twitter&quot;&gt;Twitter&lt;/h3&gt;

&lt;p&gt;TC39のミーティング中は、TC39メンバーのTwitterを見るのが早いです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/erikarvidsson/lists/tc39&quot; title=&quot;@ErikArvidsson/TC39 on Twitter&quot;&gt;@ErikArvidsson/TC39 on Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;現在、Editorの&lt;a href=&quot;https://twitter.com/bterlson&quot; title=&quot;@bterlson&quot;&gt;@bterlson&lt;/a&gt;さんと&lt;a href=&quot;https://twitter.com/rwaldron&quot; title=&quot;@rwaldron&quot;&gt;@rwaldron&lt;/a&gt;さんを見ておくといいかもしれません。&lt;/p&gt;

&lt;h3 id=&quot;tc39-meeting-notes&quot;&gt;TC39 Meeting Notes&lt;/h3&gt;

&lt;p&gt;ミーティングの内容は後日GitHubに公開されます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/agendas&quot; title=&quot;tc39/agendas: TC39 meeting agendas&quot;&gt;tc39/agendas: TC39 meeting agendas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/tc39-notes&quot; title=&quot;rwaldron/tc39-notes&quot;&gt;rwaldron/tc39-notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ミーティングノートが公開されたら、毎回自分は読書会をやっているので興味がある人は一緒に読みましょう。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tc39-mtg.doorkeeper.jp/&quot; title=&quot;TC39 MTG Notes MTG | Doorkeeper&quot;&gt;TC39 MTG Notes MTG | Doorkeeper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/search?f=tweets&amp;amp;vertical=default&amp;amp;q=%23TC39MTG&amp;amp;src=typd&quot; title=&quot;#TC39MTG&quot;&gt;#TC39MTG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;github&quot;&gt;GitHub&lt;/h3&gt;

&lt;p&gt;ECMAScriptの仕様はGitHubで管理されています。&lt;br&gt;
そのため実際に入る変更はIssueやPull Requestを見ていれば分かります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262&quot; title=&quot;tc39/ecma262&quot;&gt;tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;その他&quot;&gt;その他&lt;/h3&gt;

&lt;p&gt;その他公式ではないものとしてECMAScript周りについてよく扱うサイトとしては以下のようなものがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.2ality.com/&quot; title=&quot;②ality – JavaScript and more&quot;&gt;②ality – JavaScript and more&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://esnextnews.com/&quot; title=&quot;ES.next News: 5 ECMAScript.next links, every week&quot;&gt;ES.next News: 5 ECMAScript.next links, every week&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ecmascript-daily.github.io/&quot; title=&quot;ECMAScript Daily&quot;&gt;ECMAScript Daily&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Twitter: &lt;a href=&quot;https://twitter.com/ecmascriptdaily&quot; title=&quot;@EcmascriptDaily&quot;&gt;@EcmascriptDaily&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;自分は&lt;a href=&quot;https://twitter.com/ecmascriptdaily&quot; title=&quot;@EcmascriptDaily&quot;&gt;@EcmascriptDaily&lt;/a&gt;にECMAScript周りの情報を投げてますが、&lt;br&gt;
興味がある人はフォローとかしてみるといいです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://realtime.jser.info/&quot; title=&quot;Realtime JSer.info&quot;&gt;Realtime JSer.info&lt;/a&gt;のような感じで随時更新されます。&lt;/p&gt;

&lt;h2 id=&quot;contributing&quot;&gt;Contributing&lt;/h2&gt;

&lt;p&gt;自分自身はあんまり仕様の議論に参加しようという意欲はないですが、&lt;br&gt;
ドキュメントは常に正しくあるべきという考えなのでその辺に対するコミットをしてます。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tc39-mtg.doorkeeper.jp/&quot; title=&quot;TC39 MTG Notes MTG | Doorkeeper&quot;&gt;TC39 MTG Notes MTG | Doorkeeper&lt;/a&gt;後に毎回ミーティングノートの修正を送ったりしています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rwaldron/tc39-notes/graphs/contributors&quot;&gt;&lt;img src=&quot;https://monosnap.com/file/4lpqBjKwakv7cqo8xL7ULnGosabjS2.png&quot; alt=&quot;tc39 meeting notes&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;また、ProposalがStage 3ぐらいになるとそのProposalのリポジトリが&lt;a href=&quot;https://github.com/tc39&quot;&gt;github.com/tc39&lt;/a&gt;に移管されます。&lt;br&gt;
その時にURLがそのままだったりすることが多いので&lt;a href=&quot;https://github.com/tc39/Function-prototype-toString-revision/pull/5&quot;&gt;修正&lt;/a&gt;や&lt;a href=&quot;https://github.com/tc39/proposal-object-getownpropertydescriptors/commit/c0cf908c3601d398152932b58fa2416b577be504#commitcomment-15722017&quot;&gt;指摘&lt;/a&gt;を&lt;a href=&quot;https://github.com/tc39/ecma262/pull/335#discussion_r51220098&quot;&gt;して&lt;/a&gt;回るということをやったりしています。&lt;/p&gt;

&lt;p&gt;こういうのは気づけば誰でもできると思うので、コントリビュートしやすいと思います。&lt;br&gt;
&lt;a href=&quot;https://github.com/tc39/ecma262&quot; title=&quot;ecma262&quot;&gt;ecma262&lt;/a&gt;や&lt;a href=&quot;https://github.com/tc39/test262&quot; title=&quot;test262&quot;&gt;test262&lt;/a&gt;もEditorialだったり小さな変更なら直接IssueやPull Requestできるので、その辺を見てみると面白いのかもしれません。&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Feb 2016 18:34:00 +0900</pubDate>
        <link>http://jser.info/2016/02/01/es2016/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/01/es2016/</guid>
        
        <category>ECMAScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>メジャーブラウザのMath.random()のアルゴリズムがXorShift128+になった</title>
        <description>&lt;p&gt;JavaScriptで擬似乱数を返す&lt;code&gt;Math.random()&lt;/code&gt;のアルゴリズムが最近XorShift128+にシフトしています。&lt;br&gt;
&lt;a href=&quot;https://github.com/azu/browser-javascript-resource&quot;&gt;メジャーブラウザ&lt;/a&gt;のJavaScriptエンジンは全て変更されていたので、まとめておきます。&lt;/p&gt;

&lt;h2 id=&quot;chrome/v8&quot;&gt;Chrome/V8&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2015/12/theres-mathrandom-and-then-theres.html&quot; title=&quot;V8 JavaScript Engine: There&amp;#39;s Math.random(), and then there&amp;#39;s Math.random()&quot;&gt;V8 JavaScript Engine: There&amp;#39;s Math.random(), and then there&amp;#39;s Math.random()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2016/01/v8-release-49.html&quot; title=&quot;Chrome 49 Stable&quot;&gt;Chrome 49 Stable&lt;/a&gt;で入る予定。&lt;/p&gt;

&lt;h2 id=&quot;firefox/spidermonkey&quot;&gt;Firefox/SpiderMonkey&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=322529&quot; title=&quot;322529 – Upgrade Math.random() to the better XorShift128+ algorithm&quot;&gt;322529 – Upgrade Math.random() to the better XorShift128+ algorithm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;webkit/javascriptcore&quot;&gt;WebKit/JavaScriptCore&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=151641&quot; title=&quot;Bug 151641 – Use a better RNG for Math.random()&quot;&gt;Bug 151641 – Use a better RNG for Math.random()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;msedge/chakracore&quot;&gt;MSEdge/ChakraCore&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/ChakraCore/pull/145&quot; title=&quot;Update Math.random to use xorshift128+ by suwc · Pull Request #145 · Microsoft/ChakraCore&quot;&gt;Update Math.random to use xorshift128+ by suwc · Pull Request #145 · Microsoft/ChakraCore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;アルゴリズム&quot;&gt;アルゴリズム&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jandemooij.nl/blog/2015/11/27/math-random-and-32-bit-precision/&quot; title=&quot;Math.random() and 32-bit precision&quot;&gt;Math.random() and 32-bit precision&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.visvirial.com/articles/575&quot; title=&quot;Google Chromeが採用した、擬似乱数生成アルゴリズム「xorshift」の数理 – びりあるの研究ノート&quot;&gt;Google Chromeが採用した、擬似乱数生成アルゴリズム「xorshift」の数理 – びりあるの研究ノート&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;仕様&quot;&gt;仕様&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-math.random&quot; title=&quot;ECMAScript® 2016 Language Specification&quot;&gt;ECMAScript® 2016 Language Specification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Returns a Number value with positive sign, greater than or equal to 0 but less than 1, chosen randomly or pseudo randomly with approximately uniform distribution over that range, using an implementation-dependent algorithm or strategy. This function takes no arguments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;仕様では&amp;quot;実装依存のアルゴリズムで&amp;quot;と書いてあるので、特に&lt;code&gt;Math.random()&lt;/code&gt;のアルゴリズムは規定されていません。&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Jan 2016 11:32:00 +0900</pubDate>
        <link>http://jser.info/2016/01/27/math.random-xsfhit/</link>
        <guid isPermaLink="true">http://jser.info/2016/01/27/math.random-xsfhit/</guid>
        
        <category>JavaScript</category>
        
        <category>Browser</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>browser</category>
        
      </item>
    
      <item>
        <title>2016-01-26のJS: JavaScriptとOOP、Fetch with Stream、ES6チートシート</title>
        <description>&lt;p&gt;JSer.info #263 - &lt;a href=&quot;https://medium.com/@DmitrySoshnikov/oo-relationships-5020163ab162&quot; title=&quot;OO Relationships — Medium&quot;&gt;OO Relationships — Medium&lt;/a&gt;ではJavaScriptとオブジェクト指向プログラミングについて書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/awbjs&quot; title=&quot;Allen Wirfs-Brock&quot;&gt;Allen Wirfs-Brock&lt;/a&gt;さんの以下の発言が発端です(今も続いてる)&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;JS devs: do you use abstraction? What word do you use for “an open set of objects that share a common interface and implementation”?&lt;/p&gt;&amp;mdash; Allen Wirfs-Brock (@awbjs) &lt;a href=&quot;https://twitter.com/awbjs/status/689506114807857152&quot;&gt;January 19, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;JS Devs: What  do you call “an open set of objects that share a common interface and implementation”?&lt;/p&gt;&amp;mdash; Allen Wirfs-Brock (@awbjs) &lt;a href=&quot;https://twitter.com/awbjs/status/689513929546928128&quot;&gt;January 19, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;ES6で追加された&lt;code&gt;class&lt;/code&gt;を踏まえprototype-basedであるJavaScriptにおけるオブジェクト同士の関係性について書かれています。&lt;br&gt;
実践的な話というよりは概念的な話ですが興味深い内容になっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://jakearchibald.com/2016/streams-ftw/&quot; title=&quot;2016 - the year of web streams - JakeArchibald.com&quot;&gt;2016 - the year of web streams - JakeArchibald.com&lt;/a&gt;ではChromeでフラグ付きの&lt;a href=&quot;https://streams.spec.whatwg.org/&quot; title=&quot;Streams&quot;&gt;WHATWG Stream&lt;/a&gt;について紹介されています。&lt;/p&gt;

&lt;p&gt;また&lt;a href=&quot;https://fetch.spec.whatwg.org/&quot; title=&quot;Fetch&quot;&gt;Fetch API&lt;/a&gt;とStream APIを組み合わせて使うことで、&lt;br&gt;
データを取得しながら処理をすることで、表示までの動作がどのように変わるのかについて紹介されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://slides.com/drksephy/ecmascript-2015#/&quot; title=&quot;ECMAScript 2015 by David Leonard&quot;&gt;ECMAScript 2015 by David Leonard&lt;/a&gt;では&lt;a href=&quot;https://github.com/DrkSephy/es6-cheatsheet&quot; title=&quot;DrkSephy/es6-cheatsheet&quot;&gt;DrkSephy/es6-cheatsheet&lt;/a&gt;のチートシートを元にしたES6について紹介されています。&lt;/p&gt;

&lt;p&gt;ES6とES5を&lt;a href=&quot;http://es6-features.org/&quot;&gt;比較&lt;/a&gt;した内容で、具体的にどの部分が異なるのかが紹介されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;img class=&#39;emoji&#39; title=&#39;:information_source:&#39; alt=&#39;:information_source:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/2139.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt;&lt;/p&gt;

&lt;p&gt;Podcastやサイト紹介などをやっている&lt;a href=&quot;https://changelog.com/&quot; title=&quot;The Changelog - Open source moves fast. Keep up.&quot;&gt;The Changelog&lt;/a&gt;に&lt;a href=&quot;https://github.com/thechangelog/ping&quot; title=&quot;Ping&quot;&gt;Ping&lt;/a&gt;というリポジトリがあり、&lt;br&gt;
これと同じものがJSer.infoにもあったら利用したいかの意見を募集中です。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thechangelog/ping&quot; title=&quot;Ping&quot;&gt;Ping&lt;/a&gt;は紹介して欲しい記事を書いたり、意見を書いたり、Changelogだとこの人をpodcastに呼んでほしいなどの要望を書くGitHub Issueです。&lt;br&gt;
これに関する意見などありましたらGitterに書いてください。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gitter.im/jser/jser.info&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/jser/jser.info.png&quot; alt=&quot;Gitter chat&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2.9.0-·-jscs-dev/node-jscs&quot;&gt;Release v2.9.0 · jscs-dev/node-jscs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jscs-dev/node-jscs/releases/tag/v2.9.0&quot; title=&quot;Release v2.9.0 · jscs-dev/node-jscs&quot;&gt;github.com/jscs-dev/node-jscs/releases/tag/v2.9.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSCS v2.9.0リリース。&lt;br&gt;
&lt;code&gt;requireCapitalizedConstructors&lt;/code&gt;ルールの追加、ルールの更新、バグ修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v5.5.0-(stable)-|-node.js&quot;&gt;Node v5.5.0 (Stable) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v5.5.0/&quot; title=&quot;Node v5.5.0 (Stable) | Node.js&quot;&gt;nodejs.org/en/blog/release/v5.5.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v5.5.0リリース。&lt;br&gt;
REPLでも&lt;code&gt;--require&lt;/code&gt;が動作するように、&lt;code&gt;fs.createWriteStream&lt;/code&gt;で&lt;code&gt;autoClose&lt;/code&gt;オプションをサポートするなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-es2016-draft-2016-01-20-·-tc39/ecma262&quot;&gt;Release ES2016 Draft 2016-01-20 · tc39/ecma262&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases/tag/es2016-draft-20160120&quot; title=&quot;Release ES2016 Draft 2016-01-20 · tc39/ecma262&quot;&gt;github.com/tc39/ecma262/releases/tag/es2016-draft-20160120&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2016 Draft 2016-01-20リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;simulating-website-thumbnails-using-iframes-—-medium&quot;&gt;Simulating Website Thumbnails using Iframes — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@jamesfuthey/simulating-the-creation-of-website-thumbnail-screenshots-using-iframes-7145269891db&quot; title=&quot;Simulating Website Thumbnails using Iframes — Medium&quot;&gt;medium.com/@jamesfuthey/simulating-the-creation-of-website-thumbnail-screenshots-using-iframes-7145269891db&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;iframeを使ってサイトのサムネイル的な表示をする方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understand-promises-before-you-start-using-async/await-—-medium&quot;&gt;Understand promises before you start using async/await — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8&quot; title=&quot;Understand promises before you start using async/await — Medium&quot;&gt;medium.com/@bluepnume/learn-about-promises-before-you-start-using-async-await-eb148164a9c8&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/awaitを使う前にPromiseについて理解しようという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;oo-relationships-—-medium&quot;&gt;OO Relationships — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@DmitrySoshnikov/oo-relationships-5020163ab162&quot; title=&quot;OO Relationships — Medium&quot;&gt;medium.com/@DmitrySoshnikov/oo-relationships-5020163ab162&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;OOP&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptとオブジェクト指向プログラミングについて。&lt;br&gt;
static/dynamic dispatch、prototypeベース、縦/横の継承、&lt;br&gt;
class、mixin、traits、ダックタイピング、compositionなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2016---the-year-of-web-streams---jakearchibald.com&quot;&gt;2016 - the year of web streams - JakeArchibald.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jakearchibald.com/2016/streams-ftw/&quot; title=&quot;2016 - the year of web streams - JakeArchibald.com&quot;&gt;jakearchibald.com/2016/streams-ftw/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fetch with Streamについて。&lt;br&gt;
readable stream、transform streamを使ったMPEG to GIFの例&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascriptのコードを分解してよく使われてる機能を分析する-|-web-scratch&quot;&gt;JavaScriptのコードを分解してよく使われてる機能を分析する | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/01/22/es-usage-rate/&quot; title=&quot;JavaScriptのコードを分解してよく使われてる機能を分析する | Web Scratch&quot;&gt;efcl.info/2016/01/22/es-usage-rate/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;コードをパースして機能ごとの出現回数を調べるツールを書いたという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rollup.js---rollupがちょうどいい感じ---qiita&quot;&gt;rollup.js - Rollupがちょうどいい感じ - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/cognitom/items/e3ac0da00241f427dad6&quot; title=&quot;rollup.js - Rollupがちょうどいい感じ - Qiita&quot;&gt;qiita.com/cognitom/items/e3ac0da00241f427dad6&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Bundlerであるrollup.jsについて。&lt;br&gt;
x to ES6をしてから変換する話、Tree Shaking、基本的な使い方や設定について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cycle.js-fundamentals---course-by-@andrestaltz-@eggheadio&quot;&gt;Cycle.js Fundamentals - Course by @andrestaltz @eggheadio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://egghead.io/series/cycle-js-fundamentals&quot; title=&quot;Cycle.js Fundamentals - Course by @andrestaltz @eggheadio&quot;&gt;egghead.io/series/cycle-js-fundamentals&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Cycle.js作者によるCycle.jsとRxJSについてのスクリーンキャスト。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-2015-by-david-leonard&quot;&gt;ECMAScript 2015 by David Leonard&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://slides.com/drksephy/ecmascript-2015#/&quot; title=&quot;ECMAScript 2015 by David Leonard&quot;&gt;slides.com/drksephy/ecmascript-2015#/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES5でのややこしい書き方、それをES6で書いた場合にどうなるかなどについて書かれたスライド。&lt;br&gt;
アノテーションでどの部分が違うのかがわかりやすく表示されている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/DrkSephy/es6-cheatsheet&quot; title=&quot;DrkSephy/es6-cheatsheet&quot;&gt;DrkSephy/es6-cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;drksephy/es6-cheatsheet&quot;&gt;DrkSephy/es6-cheatsheet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/DrkSephy/es6-cheatsheet&quot; title=&quot;DrkSephy/es6-cheatsheet&quot;&gt;github.com/DrkSephy/es6-cheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6チートシート。&lt;br&gt;
ES5での書き方とES6での書き方を比較してる形&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pa11y---your-automated-accessibility-testing-pal&quot;&gt;Pa11y - Your automated accessibility testing pal&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://pa11y.org/&quot; title=&quot;Pa11y - Your automated accessibility testing pal&quot;&gt;pa11y.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;アクセシビリティ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;アクセシビリティチェック as a Service。&lt;br&gt;
毎日実行し結果を集計し、ダッシュボードで見ることが出来る。&lt;br&gt;
またCLIからチェックすることも出来る&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;umbrella-js&quot;&gt;Umbrella JS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://umbrellajs.com/&quot; title=&quot;Umbrella JS&quot;&gt;umbrellajs.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQueryのようなDOM操作やAjax周りの機能を提供する小さなライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stomita/clipboard-hook&quot;&gt;stomita/clipboard-hook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stomita/clipboard-hook&quot; title=&quot;stomita/clipboard-hook&quot;&gt;github.com/stomita/clipboard-hook&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;クリップボード&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;要素ごとのイベントを移譲することで、全体としての&lt;code&gt;cut&lt;/code&gt;/&lt;code&gt;copy&lt;/code&gt;/&lt;code&gt;paste&lt;/code&gt;イベントに対するhookを書けるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jam3/devtool:-runs-node.js-programs-through-chromium-devtools&quot;&gt;Jam3/devtool: runs Node.js programs through Chromium DevTools&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Jam3/devtool&quot; title=&quot;Jam3/devtool: runs Node.js programs through Chromium DevTools&quot;&gt;github.com/Jam3/devtool&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Electron上でNode.jsを実行し開発者ツールでデバッグ出来るツール。&lt;br&gt;
コマンドラインでNode.jsのファイルを指定するだけで実行できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;skerit/janeway:-a-curses-based-console-for-node.js&quot;&gt;skerit/janeway: A curses-based console for node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/skerit/janeway&quot; title=&quot;skerit/janeway: A curses-based console for node.js&quot;&gt;github.com/skerit/janeway&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;curses/blessedベースのJavaScript REPL。&lt;br&gt;
ブラウザの開発者ツールのようにインタラクティブな動作を目的としている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-master---o&amp;#x27;reilly-media&quot;&gt;JavaScript Master - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/9780994346933.do&quot; title=&quot;JavaScript Master - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/9780994346933.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年3月発売&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 26 Jan 2016 18:18:00 +0900</pubDate>
        <link>http://jser.info/2016/01/26/oop-fetch-stream-es6-cheatsheet/</link>
        <guid isPermaLink="true">http://jser.info/2016/01/26/oop-fetch-stream-es6-cheatsheet/</guid>
        
        <category>OOP</category>
        
        <category>Fetch</category>
        
        <category>JavaScript</category>
        
        <category>ES6</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-01-20のJS: jQuery 3.0β、ES.next News、ChakraCore OSS</title>
        <description>&lt;p&gt;JSer.info #262 - jQuery 3.0βがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jquery.com/2016/01/14/jquery-3-0-beta-released/&quot; title=&quot;jQuery 3.0 Beta Released | Official jQuery Blog&quot;&gt;jQuery 3.0 Beta Released | Official jQuery Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jquery.com/2016/01/14/ten-years-of-jquery-and-beyond/&quot;&gt;jQuery 10周年&lt;/a&gt;に合わせてリリースされました。&lt;br&gt;
3.0に向けての変更点がまとめられているので利用している場合は見ておくといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://esnextnews.com/&quot; title=&quot;ES.next News&quot;&gt;ES.next News&lt;/a&gt;は、週5つほどのES.next関連のリンクを紹介していくメルマガサイトです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://javascriptweekly.com/&quot; title=&quot;JavaScript Weekly&quot;&gt;JavaScript Weekly&lt;/a&gt;の補完的な情報を扱うようです。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We see ES.next News as complementary to JavaScript Weekly&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2016/01/esnext-news.html&quot; title=&quot;ES.next News: a weekly email newsletter&quot;&gt;ES.next News: a weekly email newsletter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;関連:&lt;/p&gt;

&lt;p&gt;先週の&lt;a href=&quot;http://jser.info/2016/01/16/jser-5years/&quot; title=&quot;JSer.info 5周年記念イベント&quot;&gt;JSer.info 5周年記念イベント&lt;/a&gt;でも&lt;a href=&quot;http://azu.github.io/slide/2016/jser5years/jser.info.html&quot;&gt;発表&lt;/a&gt;していましたが、&lt;br&gt;
&lt;a href=&quot;http://ecmascript-daily.github.io/&quot; title=&quot;ECMAScript Daily&quot;&gt;ECMAScript Daily&lt;/a&gt;というECMAScriptについて扱うサイトを作りました。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ecmascript-daily.github.io/&quot; title=&quot;ECMAScript Daily News&quot;&gt;ECMAScript Daily News&lt;/a&gt;はJSer.infoの補完的な感じです。&lt;br&gt;
自分のECMAScriptに関するメモを兼ねているので、ECMAScriptの仕様やProposal周りについてが中心です。&lt;br&gt;
(新しいProposalが公開されたとか、V8である仕様が実装されたとか、TC39でこういう議論があったなど)&lt;/p&gt;

&lt;p&gt;ライブラリやツールなどの話は少ないですが、興味ある人は見てみるといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ecmascript-daily.github.io/atom.xml&quot; title=&quot;ECMAScript Daily&quot;&gt;RSS&lt;/a&gt; で購読できます&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/ecmascriptdaily&quot; title=&quot;ECMAScript Daily (@EcmascriptDaily) | Twitter&quot;&gt;ECMAScript Daily (@EcmascriptDaily)&lt;/a&gt; Twitterでも見ることができます&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.us11.list-manage.com/subscribe/post?u=3d2f10a0ac6ad6b41153b027c&amp;amp;id=b591184502&quot; title=&quot;ECMAScript Daily&quot;&gt;メールマガジン&lt;/a&gt; 週刊でまとめて更新が購読できます&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;MSEdgeのJavaScriptエンジンである&lt;a href=&quot;https://github.com/Microsoft/ChakraCore&quot; title=&quot;ChakraCore&quot;&gt;ChakraCore&lt;/a&gt;がOSSとして公開されました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/01/13/chakracore-now-open/&quot; title=&quot;ChakraCore GitHub repository is now open | Microsoft Edge Dev Blog&quot;&gt;ChakraCore GitHub repository is now open | Microsoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;加えて、&lt;a href=&quot;https://github.com/nodejs/node/pull/4765&quot; title=&quot;Enable Node.js to run with Microsoft&amp;#39;s ChakraCore engine by kunalspathak · Pull Request #4765 · nodejs/node&quot;&gt;Node.jsへChakraCoreも利用できるようにするPull Request&lt;/a&gt;が行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/01/19/nodejs-chakracore-mainline/&quot; title=&quot;Submitting a Pull Request to Node.js with ChakraCore | Microsoft Edge Dev Blog&quot;&gt;Submitting a Pull Request to Node.js with ChakraCore | Microsoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ChakraCoreのロードマップでは、LinuxサポートやES2015 Modulesの実装などが予定されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/ChakraCore/wiki/Roadmap&quot; title=&quot;Roadmap · Microsoft/ChakraCore Wiki&quot;&gt;Roadmap · Microsoft/ChakraCore Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-3.0-beta-released-|-official-jquery-blog&quot;&gt;jQuery 3.0 Beta Released | Official jQuery Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jquery.com/2016/01/14/jquery-3-0-beta-released/&quot; title=&quot;jQuery 3.0 Beta Released | Official jQuery Blog&quot;&gt;blog.jquery.com/2016/01/14/jquery-3-0-beta-released/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery 3.0βリリース。&lt;br&gt;
jQuery10周年を記念してのリリース&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---ember.js-2.3-and-2.4-beta-released&quot;&gt;Ember.js - Ember.js 2.3 and 2.4 Beta Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/01/15/ember-2-3-released.html&quot; title=&quot;Ember.js - Ember.js 2.3 and 2.4 Beta Released&quot;&gt;emberjs.com/blog/2016/01/15/ember-2-3-released.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Ember.js 2.3リリース。&lt;br&gt;
FastBootに&lt;code&gt;visit&lt;/code&gt;メソッドの追加&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-6.3-“pro-rege-et-lege”-·-postcss/autoprefixer&quot;&gt;Release 6.3 “Pro rege et lege” · postcss/autoprefixer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/postcss/autoprefixer/releases/tag/6.3.0&quot; title=&quot;Release 6.3 “Pro rege et lege” · postcss/autoprefixer&quot;&gt;github.com/postcss/autoprefixer/releases/tag/6.3.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Autoprefixer 6.3リリース。&lt;br&gt;
Grid Layoutのサポート、自前で用意したUA別のデータからブラウザの種類を決められる機能の追加&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;axios/changelog.md-at-v0.9.0-·-mzabriskie/axios&quot;&gt;axios/CHANGELOG.md at v0.9.0 · mzabriskie/axios&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mzabriskie/axios/blob/v0.9.0/CHANGELOG.md&quot; title=&quot;axios/CHANGELOG.md at v0.9.0 · mzabriskie/axios&quot;&gt;github.com/mzabriskie/axios/blob/v0.9.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;XHR&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;axios 0.9.0リリース。&lt;br&gt;
XDomainRequestの対応改善、&lt;code&gt;adapter&lt;/code&gt;プロパティの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mootools-blog:-1.6.0-is-out!&quot;&gt;MooTools Blog: 1.6.0 is out!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://mootools.net/blog/2016/01/14/mootools-1-6-0-release&quot; title=&quot;MooTools Blog: 1.6.0 is out!&quot;&gt;mootools.net/blog/2016/01/14/mootools-1-6-0-release&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MooTools 1.6.0リリース。&lt;br&gt;
Promises/A+互換の&lt;code&gt;Class.Thenable&lt;/code&gt;を追加。&lt;br&gt;
次回のメジャーアップデートではIE11+のみのサポートとなる。&lt;br&gt;
また&lt;code&gt;Array.from&lt;/code&gt;はES6と名前が被っているためリネームされる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es.next-news:-the-5-best-ecmascript-links-of-the-week&quot;&gt;ES.next News: The 5 best ECMAScript links of the week&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://esnextnews.com/&quot; title=&quot;ES.next News: The 5 best ECMAScript links of the week&quot;&gt;esnextnews.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mail&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES.nextについての週刊メルマガ。&lt;br&gt;
JavaScriptの補完的な感じ。&lt;br&gt;
by Dr.Axel Rauschmayer and Johannes Weber.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.2ality.com/2016/01/esnext-news.html&quot; title=&quot;ES.next News: a weekly email newsletter&quot;&gt;ES.next News: a weekly email newsletter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chakracore-github-repository-is-now-open-|-microsoft-edge-dev-blog&quot;&gt;ChakraCore GitHub repository is now open | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/01/13/chakracore-now-open/&quot; title=&quot;ChakraCore GitHub repository is now open | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2016/01/13/chakracore-now-open/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MSEdgeのJavaScriptエンジンであるChakraのCore部分がオープンソースとして公開された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/Chakracore&quot; title=&quot;Microsoft/ChakraCore&quot;&gt;Microsoft/ChakraCore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;enable-node.js-to-run-with-microsoft&amp;#x27;s-chakracore-engine-by-kunalspathak-·-pull-request-#4765-·-nodejs/node&quot;&gt;Enable Node.js to run with Microsoft&amp;#x27;s ChakraCore engine by kunalspathak · Pull Request #4765 · nodejs/node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/4765&quot; title=&quot;Enable Node.js to run with Microsoft&amp;#39;s ChakraCore engine by kunalspathak · Pull Request #4765 · nodejs/node&quot;&gt;github.com/nodejs/node/pull/4765&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsにChakraCoreビルドを追加するPull Request&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/01/19/nodejs-chakracore-mainline/&quot; title=&quot;Submitting a Pull Request to Node.js with ChakraCore | Microsoft Edge Dev Blog&quot;&gt;Submitting a Pull Request to Node.js with ChakraCore | Microsoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;renaming-jade--&amp;gt;-pug-·-issue-#2184-·-pugjs/jade&quot;&gt;Renaming jade -&amp;gt; pug · Issue #2184 · pugjs/jade&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pugjs/jade/issues/2184&quot; title=&quot;Renaming jade -&amp;gt; pug · Issue #2184 · pugjs/jade&quot;&gt;github.com/pugjs/jade/issues/2184&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Jadeはpugにリネームされる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-plugin-typecheck-を使って-flowtype-文法で書かれたjsをランタイムチェックする---qiita&quot;&gt;babel-plugin-typecheck を使って flowtype 文法で書かれたJSをランタイムチェックする - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/mizchi/items/30a5f9560e86e0d5ab31&quot; title=&quot;babel-plugin-typecheck を使って flowtype 文法で書かれたJSをランタイムチェックする - Qiita&quot;&gt;qiita.com/mizchi/items/30a5f9560e86e0d5ab31&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;FlowTypeの型定義構文を使ってランタイムチェックを行うBabelプラグインについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;browserify-vs-webpack---js-drama&quot;&gt;Browserify VS Webpack - JS Drama&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.namangoel.com/browserify-vs-webpack-js-drama&quot; title=&quot;Browserify VS Webpack - JS Drama&quot;&gt;blog.namangoel.com/browserify-vs-webpack-js-drama&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Browserifyとwebpackの思想の違い、静的リソースの扱い、どちらをどういう理由で選ぶべきかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react.js-best-practices-for-2016-|-@risingstack&quot;&gt;React.js Best Practices for 2016 | @RisingStack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.risingstack.com/react-js-best-practices-for-2016/&quot; title=&quot;React.js Best Practices for 2016 | @RisingStack&quot;&gt;blog.risingstack.com/react-js-best-practices-for-2016/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactの使い方、データの持ち方、テストなどのプラクティス&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsといえばjqueryだったwebデザイナーが、reactを1年間使って感じたメリット-|-dwango-creators&amp;#x27;-blog（ドワンゴクリエイターズブログ）&quot;&gt;JSといえばjQueryだったWebデザイナーが、Reactを1年間使って感じたメリット | dwango creators&amp;#x27; blog（ドワンゴクリエイターズブログ）&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://creator.dwango.co.jp/3413.html&quot; title=&quot;JSといえばjQueryだったWebデザイナーが、Reactを1年間使って感じたメリット | dwango creators&amp;#39; blog（ドワンゴクリエイターズブログ）&quot;&gt;creator.dwango.co.jp/3413.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;design&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;デザイナーから見たReactについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;enumify:-better-enums-for-javascript&quot;&gt;Enumify: better enums for JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2016/01/enumify.html&quot; title=&quot;Enumify: better enums for JavaScript&quot;&gt;www.2ality.com/2016/01/enumify.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;classを使ったEnumのライブラリについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rauschma/enumify&quot; title=&quot;rauschma/enumify&quot;&gt;rauschma/enumify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;michelebertoli/css-in-js---javascript&quot;&gt;MicheleBertoli/css-in-js - JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MicheleBertoli/css-in-js&quot; title=&quot;MicheleBertoli/css-in-js - JavaScript&quot;&gt;github.com/MicheleBertoli/css-in-js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React系のCSS in JSライブラリの比較まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cheeaun/javascript-error-logging&quot;&gt;cheeaun/javascript-error-logging&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cheeaun/javascript-error-logging&quot; title=&quot;cheeaun/javascript-error-logging&quot;&gt;github.com/cheeaun/javascript-error-logging&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのerror loggingサービスのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;progressive-web-apps-|-web-fundamentals---google-developers&quot;&gt;Progressive Web Apps | Web Fundamentals - Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/progressive-web-apps&quot; title=&quot;Progressive Web Apps | Web Fundamentals - Google Developers&quot;&gt;developers.google.com/web/progressive-web-apps&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Progressive Web AppについてのGoogleのまとめページ。&lt;br&gt;
Progressive Web Appとは何かについて書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thejameskyle/babel-handbook&quot;&gt;thejameskyle/babel-handbook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thejameskyle/babel-handbook&quot; title=&quot;thejameskyle/babel-handbook&quot;&gt;github.com/thejameskyle/babel-handbook&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babelのセットアップ方法やプラグイン開発について書かれたハンドブック&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ariporad/pirates&quot;&gt;ariporad/pirates&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ariporad/pirates&quot; title=&quot;ariporad/pirates&quot;&gt;github.com/ariporad/pirates&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;require.extensions&lt;/code&gt;のhookを扱うライブラリ。&lt;br&gt;
一つの拡張子に複数のhookを行う部分を管理する。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kolodny/deact---javascript&quot;&gt;kolodny/deact - JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kolodny/deact&quot; title=&quot;kolodny/deact - JavaScript&quot;&gt;github.com/kolodny/deact&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Template Stringsを使ってJSXライクな書き方ができるテンプレートエンジン。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jotted-—-showcase-self-hosted-html,-css-and-javascript-demos,-with-editable-source&quot;&gt;Jotted — Showcase self-hosted HTML, CSS and JavaScript demos, with editable source&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ghinda.net/jotted/&quot; title=&quot;Jotted — Showcase self-hosted HTML, CSS and JavaScript demos, with editable source&quot;&gt;ghinda.net/jotted/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JS BinとかJSFiddleのような形式でHTML/CSS/JSを埋め込み表示出来るライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 20 Jan 2016 22:57:00 +0900</pubDate>
        <link>http://jser.info/2016/01/20/jquery3beta-esnext-news-chkracore/</link>
        <guid isPermaLink="true">http://jser.info/2016/01/20/jquery3beta-esnext-news-chkracore/</guid>
        
        <category>jQuery</category>
        
        <category>ECMAScript</category>
        
        <category>MSEdge</category>
        
        <category>CHakraCore</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>JSer.info 5周年記念イベントを開催しました</title>
        <description>&lt;p&gt;今日でJSer.infoは丁度5周年となったので、&lt;a href=&quot;http://jser.connpass.com/event/24202/&quot; title=&quot;JSer.info 5周年記念イベント&quot;&gt;JSer.info 5周年記念イベント&lt;/a&gt;を開催しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://togetter.com/li/926573&quot; title=&quot;JSer.info 5周年記念イベント - Togetterまとめ&quot;&gt;JSer.info 5周年記念イベント - Togetterまとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;結局最初から最後まで、発表、JavaScript Discussion、LTとずっと話続けていました。&lt;br&gt;
ご参加頂きありがとうございました。&lt;/p&gt;

&lt;p&gt;何かありましたら、Gitterなどを利用してみると良いです。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gitter.im/jser/jser.info&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/jser/jser.info.png&quot; alt=&quot;Gitter chat&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;合わせて: &lt;a href=&quot;http://jser.info/2016/01/15/how-to-play-jser-info/&quot; title=&quot;JSer.infoの遊び方 - JSer.info&quot;&gt;JSer.infoの遊び方 - JSer.info&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;jser.info-5周年---@azu_re&quot;&gt;&lt;a href=&quot;http://azu.github.io/slide/2016/jser5years/jser.info.html&quot; title=&quot;JSer.info 5周年&quot;&gt;JSer.info 5周年&lt;/a&gt; - @azu_re&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;http://azu.github.io/slide/2016/jser5years/jser.info.html&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;JSer.infoの5年を振り返って、どういう改善をしていったから手戻りのコストをどう減らしているかについて発表しました。&lt;/p&gt;

&lt;p&gt;5年間での総計は以下のような感じになりました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;投稿記事数: 261&lt;/li&gt;
&lt;li&gt;毎週1回投稿: (261*7) / 365 ≒ 5(年)&lt;/li&gt;
&lt;li&gt;合計紹介URL数: 6312&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;javascript情報って何だっけ?---@azu_re&quot;&gt;&lt;a href=&quot;http://azu.github.io/slide/2016/jser5years/javascript-information.html&quot;&gt;JavaScript情報って何だっけ?&lt;/a&gt; - @azu_re&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;http://azu.github.io/slide/2016/jser5years/javascript-information.html&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;そもそも&amp;quot;情報&amp;quot;ってなんだっけ?という話から、JavaScript情報は欲しいけど溢れているという問題。&lt;br&gt;
選択肢が多すぎる問題を切り分けする話、そういった切り分けをするためにはライブラリコミュニティを見ていく必要があるよという話をしました。&lt;/p&gt;

&lt;p&gt;どういう情報の変遷があって、どういう情報の問題が毎年起きてるのかについて話しました。&lt;/p&gt;

&lt;h2 id=&quot;angularの5年とこれから---@armorik83&quot;&gt;&lt;a href=&quot;https://speakerdeck.com/armorik83/angularfalse5nian-tokorekara&quot; title=&quot;Angularの5年とこれから&quot;&gt;Angularの5年とこれから&lt;/a&gt; - @armorik83&lt;/h2&gt;

&lt;p&gt;Angularはどういう経緯で生まれたのか、Angular 2の話。&lt;br&gt;
またアップグレードプロセスについて。&lt;/p&gt;

&lt;h2 id=&quot;webidlを見てみる---@takenspc&quot;&gt;&lt;a href=&quot;http://www.slideshare.net/takenspc/webidl&quot; title=&quot;WebIDLを見てみる&quot;&gt;WebIDLを見てみる&lt;/a&gt; - @Takenspc&lt;/h2&gt;

&lt;p&gt;各種ブラウザはWebIDLからインタフェースを機械生成している実装に使っている&lt;br&gt;
ため、WebIDLがブラウザと仕様を結ぶものと言えます。&lt;/p&gt;

&lt;p&gt;ブラウザと仕様での共通言語の1つであるWebIDLの各種ブラウザでの使い方と読み方について。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;IE8がサポート終了したのを記念としたIE8についての発表枠。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://monosnap.com/file/Pq3FCjpGfeyOxIqxEgLW11zhIMSuRf.png&quot; alt=&quot;[IE8 追悼枠](http://azu.github.io/slide/2016/jser5years/ie-memory.html &amp;quot;IE8 追悼枠&amp;quot;)&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;[ie8枠]-ぼくたちの愛したie8---@hasegawayosuke&quot;&gt;[IE8枠] &lt;a href=&quot;http://utf-8.jp/public/2016/0116/byebyeie8.pdf&quot;&gt;ぼくたちの愛したIE8&lt;/a&gt; - @hasegawayosuke&lt;/h2&gt;

&lt;p&gt;IE8のすごい機能について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;XSSフィルター&lt;/li&gt;
&lt;li&gt;XDomainRequest&lt;/li&gt;
&lt;li&gt;toStaticHTML&lt;/li&gt;
&lt;li&gt;X-Content-Type-Options&lt;/li&gt;
&lt;li&gt;X-Frame-Options&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;[ie8枠]-active-scripting---@makoto_kato&quot;&gt;[IE8枠] &lt;a href=&quot;http://www.slideshare.net/djraven/active-scripting&quot; title=&quot;Active scripting&quot;&gt;Active scripting&lt;/a&gt; - @makoto_kato&lt;/h2&gt;

&lt;p&gt;IE8までサポートされていたActiveScriptingについて。&lt;/p&gt;

&lt;h2 id=&quot;非同期イベントがんばるぞい---@saneyuki_s&quot;&gt;非同期イベントがんばるぞい - @saneyuki_s&lt;/h2&gt;

&lt;p&gt;JavaScriptなどで大量に存在するイベントの扱いについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-on-現場-|-modern-javascript-on-rails---@mizchi&quot;&gt;React on 現場 | Modern JavaScript on Rails - @mizchi&lt;/h2&gt;

&lt;p&gt;モダンJSとは&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;npm/Browserify&lt;/li&gt;
&lt;li&gt;Babel/ES2015&lt;/li&gt;
&lt;li&gt;React/Fux&lt;/li&gt;
&lt;li&gt;Testable&lt;/li&gt;
&lt;li&gt;No more jQuery plugins&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;という構成であるとして、そのような構成をRails上のJavaScriptで実現するために行ったことについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-discussion&quot;&gt;JavaScript Discussion&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://app.sli.do/event/0egbwyxz/ask&quot;&gt;&lt;img src=&quot;https://monosnap.com/file/z2VC0MmCQKox5DjQXlvOpNaYQjVhum.png&quot; alt=&quot;discussion&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://app.sli.do/event/0egbwyxz/ask&quot; title=&quot;[JSer.info] JavaScript Discussion(JavaScriptの良い所/悪い所/気になる事)&quot;&gt;[JSer.info] JavaScript Discussion(JavaScriptの良い所/悪い所/気になる事)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;質問ボードを元にディスカッションをしました。&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;デザイナーさんが jQuery plugin からは考え始める事を止めるような啓蒙記事が必要 &lt;a href=&quot;https://twitter.com/hashtag/jserinfo?src=hash&quot;&gt;#jserinfo&lt;/a&gt;&lt;/p&gt;&amp;mdash; kiyoshi nomo (@kysnm) &lt;a href=&quot;https://twitter.com/kysnm/status/688287523458568192&quot;&gt;January 16, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;modern JavaScript に変えてサーバーの転送量が減った &lt;a href=&quot;https://twitter.com/hashtag/jserinfo?src=hash&quot;&gt;#jserinfo&lt;/a&gt;&lt;/p&gt;&amp;mdash; kiyoshi nomo (@kysnm) &lt;a href=&quot;https://twitter.com/kysnm/status/688287820717281280&quot;&gt;January 16, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;周囲とリテラシーのギャップがあるときに意識的にすること&amp;#10;・ドキュメントとサンプルコードを書くこと&amp;#10;・lintなどで間違いに気付けるフィードバックループを早めること&amp;#10;&lt;a href=&quot;https://twitter.com/hashtag/jserinfo?src=hash&quot;&gt;#jserinfo&lt;/a&gt;&lt;/p&gt;&amp;mdash; よしこ (@yoshiko_pg) &lt;a href=&quot;https://twitter.com/yoshiko_pg/status/688293655992381440&quot;&gt;January 16, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;&lt;a href=&quot;https://twitter.com/janus_wel&quot;&gt;@janus_wel&lt;/a&gt; とはいえ、一人が頑張れば受益者が多いという構図は物事を良い方向に向かわせる起爆剤にはなるので、違いを意識しておくと良いと思います。&lt;/p&gt;&amp;mdash; Takuto Wada (@t_wada) &lt;a href=&quot;https://twitter.com/t_wada/status/688303653300486144&quot;&gt;January 16, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lt&quot;&gt;LT&lt;/h2&gt;

&lt;h2 id=&quot;chrome-api-#jserinfo---kyo_ago&quot;&gt;&lt;a href=&quot;http://0-9.sakura.ne.jp/pub/lt/JSerInfo20160116/start.html&quot; title=&quot;Chrome API #jserinfo&quot;&gt;Chrome API #jserinfo&lt;/a&gt; - kyo_ago&lt;/h2&gt;

&lt;p&gt;Chrome Extension/OSのAPIについて&lt;/p&gt;

&lt;h2 id=&quot;railsのrailから解放される始めの一歩---joe-re&quot;&gt;&lt;a href=&quot;http://www.slideshare.net/masatonoguchi169/railsrails-57123076&quot; title=&quot;RailsのRailから解放される始めの一歩&quot;&gt;RailsのRailから解放される始めの一歩&lt;/a&gt; - joe-re&lt;/h2&gt;

&lt;p&gt;Sprocketsを捨てたい話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-eps---@yosuke_furukawa&quot;&gt;&lt;a href=&quot;https://speakerdeck.com/yosuke_furukawa/nodeeps&quot; title=&quot;nodeeps // Speaker Deck&quot;&gt;node-eps&lt;/a&gt; - @yosuke_furukawa&lt;/h2&gt;

&lt;p&gt;Node.jsのProposalを管理する&lt;a href=&quot;https://github.com/nodejs/node-eps&quot; title=&quot;Node.js Enhancement Proposals&quot;&gt;Node.js Enhancement Proposals&lt;/a&gt;について&lt;/p&gt;

&lt;h2 id=&quot;sc22-ecmascript-ad-hoc委員会---@azu_re&quot;&gt;&lt;a href=&quot;http://azu.github.io/slide/2016/jser5years/sc22-ecmascript-ahodc.html&quot; title=&quot;SC22 ECMAScript Ad hoc委員会&quot;&gt;SC22 ECMAScript Ad hoc委員会&lt;/a&gt; - @azu_re&lt;/h2&gt;

&lt;p&gt;ISO/IEC 16262であるECMASCript仕様の策定プロセスやどういう活動をしてるかという話。&lt;/p&gt;

&lt;h2 id=&quot;ava---@t_wada&quot;&gt;AVA - @t_wada&lt;/h2&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;AVAはエイヴァと読む &lt;a href=&quot;https://twitter.com/hashtag/jserinfo?src=hash&quot;&gt;#jserinfo&lt;/a&gt;&lt;/p&gt;&amp;mdash; Yuki Kodama (@kuy) &lt;a href=&quot;https://twitter.com/kuy/status/688314832416718849&quot;&gt;January 16, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p lang=&quot;ja&quot; dir=&quot;ltr&quot;&gt;AVAはテストのネスティングはさせない、ネストするならファイルをわけさせる。並列で実行させるために &lt;a href=&quot;https://twitter.com/hashtag/jserinfo?src=hash&quot;&gt;#jserinfo&lt;/a&gt;&lt;/p&gt;&amp;mdash; よしこ (@yoshiko_pg) &lt;a href=&quot;https://twitter.com/yoshiko_pg/status/688317833990688773&quot;&gt;January 16, 2016&lt;/a&gt;&lt;/blockquote&gt;

&lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;ortcの話---jxck&quot;&gt;ORTCの話 - jxck&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://openpeer.github.io/ortc/&quot; title=&quot;Object RTC (ORTC) API for WebRTC&quot;&gt;Object RTC (ORTC) API for WebRTC&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/openpeer/ortc&quot; title=&quot;openpeer/ortc&quot;&gt;openpeer/ortc&lt;/a&gt;のHTMLを修正するPull Requestを送っている話。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;会場を貸していただいたサイボウズさん &lt;a href=&quot;https://twitter.com/teppeis&quot; title=&quot;@teppeis&quot;&gt;@teppeis&lt;/a&gt;さん  &lt;a href=&quot;https://twitter.com/windhole&quot; title=&quot;@windhole&quot;&gt;@windhole&lt;/a&gt;さん&lt;br&gt;
ありがとうございました。&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Jan 2016 23:06:00 +0900</pubDate>
        <link>http://jser.info/2016/01/16/jser-5years/</link>
        <guid isPermaLink="true">http://jser.info/2016/01/16/jser-5years/</guid>
        
        <category>JSer</category>
        
        <category>JavaScript</category>
        
        <category>イベント</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>イベント</category>
        
      </item>
    
      <item>
        <title>JSer.infoの遊び方</title>
        <description>&lt;p&gt;JSer.infoに関連するリポジトリやサイトの案内です。&lt;br&gt;
JSer.info自体はただの情報発信ブログというよりは、見ている人も情報を追加できるし、そのデータを使って遊べるみたいなものを目指しています。&lt;/p&gt;

&lt;p&gt;この記事はその辺の仕組みとかツールの紹介です。&lt;/p&gt;

&lt;h2 id=&quot;新しい情報を見たい&quot;&gt;新しい情報を見たい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.info/&quot;&gt;JSer.info&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;JSer.infoサイトそのもの&lt;/li&gt;
&lt;li&gt;週一回程度で更新&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://realtime.jser.info/&quot;&gt;Realtime JSer.info&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;JSer.infoのリアルタイム版&lt;/li&gt;
&lt;li&gt;元データが追加された時点で更新&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;コミュニケーションを取りたい&quot;&gt;コミュニケーションを取りたい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info/issues&quot; title=&quot;Issues · jser/jser.info&quot;&gt;Issues · jser/jser.info&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;JSer.infoに関連する意見や要望などを管理するIssue&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gitter.im/jser/jser.info&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/jser/jser.info.png&quot; alt=&quot;Gitter chat&quot;&gt;&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Gitterを利用したチャット&lt;/li&gt;
&lt;li&gt;Issueを立てるまでもない指摘や感想、疑問、オススメ記事など迷ったらチャットへ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://jser.info/support/&quot; title=&quot;Support - JSer.info&quot;&gt;Support - JSer.info&lt;/a&gt;に書いていますが、&lt;a href=&quot;https://gitter.im/jser/jser.info&quot;&gt;&lt;img src=&quot;https://badges.gitter.im/jser/jser.info.png&quot; alt=&quot;Gitter chat&quot;&gt;&lt;/a&gt;へ&amp;quot;こんなの書いてみました&amp;quot;とかそういうのも気軽に投げてもらって問題ないです。&lt;/p&gt;

&lt;h2 id=&quot;データや記事を修正したい&quot;&gt;データや記事を修正したい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info&quot; title=&quot;jser/jser.info&quot;&gt;jser/jser.info&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;サイトデータを修正したい場合&lt;/li&gt;
&lt;li&gt;記事として掲載後に元データを修正しても、自動的には記事へ反映はされません&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.github.io&quot; title=&quot;jser/jser.github.io&quot;&gt;jser/jser.github.io&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;JSer.infoの記事を修正したい場合&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;記事上部の &lt;strong&gt;Edit on GitHub&lt;/strong&gt; 又は 下部の &lt;strong&gt;この記事へ修正リクエストをする&lt;/strong&gt; から該当記事の編集画面が開けます。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://take.ms/suw5I&quot; alt=&quot;掲載済みの記事へのpull-request&quot;&gt;&lt;/p&gt;

&lt;h2 id=&quot;紹介して欲しい記事/サイト/ライブラリがある&quot;&gt;紹介して欲しい記事/サイト/ライブラリがある&lt;/h2&gt;

&lt;p&gt;JSer.infoに載せて欲しい記事は&lt;a href=&quot;https://github.com/jser/jser.info&quot;&gt;jser.info&lt;/a&gt;へPull Requestできます。&lt;/p&gt;

&lt;p&gt;ただしやっぱり手順が面倒であるので、Gitterを使ってもらっても良いです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/jser.info/blob/gh-pages/CONTRIBUTING.md&quot;&gt;CONTRIBUTING.md&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Pull Requestする方法などの手順がまとめられている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.info/contributing/&quot; title=&quot;JSer.info Pull Request Form&quot;&gt;JSer.info Pull Request Form&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;掲載したい記事がある場合はこちらのフォームからPull Request&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/contributing-preview&quot; title=&quot;jser/contributing-preview&quot;&gt;jser/contributing-preview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;データの表示をプレビューする補助ツール&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;関連: &lt;a href=&quot;http://jser.info/post/75446735069/jser-info-pull-request/&quot; title=&quot;JSer.infoに紹介してもらいたい記事のPull Requestが出来るようになりました - JSer.info&quot;&gt;JSer.infoに紹介してもらいたい記事のPull Requestが出来るようになりました - JSer.info&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;データを分析したい&quot;&gt;データを分析したい&lt;/h2&gt;

&lt;p&gt;JSer.infoのデータを分析したい場合はJSON APIとライブラリが用意されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.info/source-data/items.json&quot;&gt;http://jser.info/source-data/items.json&lt;/a&gt; 掲載サイトデータ&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.info/posts.json&quot;&gt;http://jser.info/posts.json&lt;/a&gt; 記事データ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;の２つのJSONを上手く扱える&lt;a href=&quot;https://github.com/jser/stat-js&quot; title=&quot;jser/stat-js&quot;&gt;jser/stat-js&lt;/a&gt;というライブラリが用意されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/stat-js&quot; title=&quot;jser/stat-js&quot;&gt;jser/stat-js&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;JSer.infoの掲載データを利用出来る統計処理ライブラリ&lt;/li&gt;
&lt;li&gt;特定の期間で紹介した記事一覧の取得、関連記事の検索など&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.info/trends/&quot; title=&quot;JSer.info トレンド&quot;&gt;JSer.info トレンド&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/stat-js&quot; title=&quot;jser/stat-js&quot;&gt;jser/stat-js&lt;/a&gt;を使ったキーワードトレンド情報のビューア&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;素材が欲しい&quot;&gt;素材が欲しい&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/media&quot; title=&quot;jser/media&quot;&gt;jser/media&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;JSer.infoのロゴやアイコンなどの素材&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ライセンス&quot;&gt;ライセンス&lt;/h2&gt;

&lt;p&gt;JSer.infoの記事やデータはCC-BY &lt;a href=&quot;http://creativecommons.org/licenses/by/4.0/&quot;&gt;&lt;img src=&quot;https://i.creativecommons.org/l/by/4.0/88x31.png&quot; alt=&quot;CC-BY&quot;&gt;&lt;/a&gt;で利用できます。&lt;/p&gt;

&lt;p&gt;ソースコードなどはMITライセンスです。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;データの自動更新の仕組み&quot;&gt;データの自動更新の仕組み&lt;/h2&gt;

&lt;p&gt;どんな感じで掲載サイトデータなどが更新されているかの仕組みの話です。&lt;/p&gt;

&lt;p&gt;サイトデータのマスターは&lt;a href=&quot;https://github.com/jser/jser.info/&quot; title=&quot;jser/jser.info&quot;&gt;jser/jser.info&lt;/a&gt;で管理されています。&lt;br&gt;
(月ごとにJSONでまとめられています)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jser/jser.info/&quot; title=&quot;jser/jser.info&quot;&gt;jser/jser.info&lt;/a&gt;のデータが更新されると、CIが自動的に以下のリポジトリも更新します。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/realtime.jser.info&quot; title=&quot;jser/realtime.jser.info&quot;&gt;jser/realtime.jser.info&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;JSONからMarkdownに変換されてpushされます。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://realtime.jser.info/&quot; title=&quot;Realtime JSer.info&quot;&gt;Realtime JSer.info&lt;/a&gt;に反映されます。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jser/source-data&quot; title=&quot;jser/source-data&quot;&gt;jser/source-data&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;掲載サイトデータを&lt;a href=&quot;https://github.com/jser/stat-js&quot; title=&quot;jser/stat-js&quot;&gt;jser/stat-js&lt;/a&gt;向けにまとめています。&lt;/li&gt;
&lt;li&gt;全てのJSONを一つのファイルにマージしたものを作成。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JSer.infoのマスターはJSONデータで管理されていますが、最近はMarkdown + Yaml Headerで管理しているサイトも増えています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://wasm.news/contributing.html&quot; title=&quot;WASM.NEWS | HowTo&quot;&gt;WASM.NEWS | HowTo&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Jekyllを利用&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/platatus/&quot; title=&quot;mozilla/platatus: Project Platform Status&quot;&gt;mozilla/platatus: Project Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JSONに比べてMarkdown + Yaml Headerはヒトが見てもわかりやすいのでPull Requestがしやすいです。&lt;br&gt;
(また必然的に1コンテンツ1ファイルとなるので対応がわかりやすい)&lt;/p&gt;

&lt;p&gt;この辺のデータの扱い方は今後もっと良くしていくかもしれません。&lt;/p&gt;
</description>
        <pubDate>Fri, 15 Jan 2016 10:01:00 +0900</pubDate>
        <link>http://jser.info/2016/01/15/how-to-play-jser-info/</link>
        <guid isPermaLink="true">http://jser.info/2016/01/15/how-to-play-jser-info/</guid>
        
        <category>JSer</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>雑記</category>
        
      </item>
    
      <item>
        <title>2016-01-13のJS: jQuery 2.2、lodash 4.0.0、IE8サポート終了</title>
        <description>&lt;p&gt;JSer.info #261 - jQuery 2.2と1.12がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jquery.com/2016/01/08/jquery-2-2-and-1-12-released/&quot; title=&quot;jQuery 2.2 and 1.12 Released | Official jQuery Blog&quot;&gt;jQuery 2.2 and 1.12 Released | Official jQuery Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;We anticipate this to be the last releases for the 1.x and 2.x branches before we release jQuery 3.0.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;jQuery 3.0の正式リリース後、1.xと2.xに対してはパッチアップデート(修正)のみが提供される予定です。&lt;br&gt;
そのため、これが1.xと2.xに対する最後のマイナーアップデート(機能追加)になる予定となっています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://api.jquery.com/visible-selector/&quot; title=&quot;:visible Selector&quot;&gt;:visible Selector&lt;/a&gt;のような&lt;code&gt;querySelector&lt;/code&gt;にはないセレクタを利用した時のパフォーマンスが改善されています。&lt;br&gt;
毎回、&lt;code&gt;querySelector&lt;/code&gt;が失敗してからSizzleで選択していたため、パフォーマンスの悪くなっている問題が修正されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jquery/sizzle/issues/315&quot; title=&quot;Check existing selector cache and skip matchesSelector when possible · Issue #315 · jquery/sizzle&quot;&gt;Check existing selector cache and skip matchesSelector when possible · Issue #315 · jquery/sizzle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jQueryオブジェクトに&lt;code&gt;Symbol.iterator&lt;/code&gt;が実装されたため、以下のように&lt;code&gt;for...of&lt;/code&gt;でイテレートが可能になりました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$elements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://lodash.com/&quot; title=&quot;lodash&quot;&gt;lodash&lt;/a&gt; 4.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lodash/lodash/releases/tag/4.0.0&quot;&gt;Release 4.0.0 · lodash/lodash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lodash/lodash/wiki/Changelog#v400&quot; title=&quot;Changelog · lodash/lodash Wiki&quot;&gt;Changelog · lodash/lodash Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;多くのメソッドがリネーム、削除、引数の修正などが行われています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lodash/lodash/tree/4.0.0/dist&quot;&gt;core build&lt;/a&gt;と呼ばれる以下のメソッドで構成されるバージョンも公開されています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;_.assignIn&lt;/code&gt;, &lt;code&gt;_.before&lt;/code&gt;, &lt;code&gt;_.bind&lt;/code&gt;, &lt;code&gt;_.chain&lt;/code&gt;, &lt;code&gt;_.clone&lt;/code&gt;, &lt;code&gt;_.compact&lt;/code&gt;, &lt;code&gt;_.concat&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;_.create&lt;/code&gt;, &lt;code&gt;_.defaults&lt;/code&gt;, &lt;code&gt;_.defer&lt;/code&gt;, &lt;code&gt;_.delay&lt;/code&gt;, &lt;code&gt;_.each&lt;/code&gt;, &lt;code&gt;_.escape&lt;/code&gt;, &lt;code&gt;_.every&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;_.filter&lt;/code&gt;, &lt;code&gt;_.find&lt;/code&gt;, &lt;code&gt;_.first&lt;/code&gt;, &lt;code&gt;_.flatten&lt;/code&gt;, &lt;code&gt;_.flattenDeep&lt;/code&gt;, &lt;code&gt;_.forEach&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;_.has&lt;/code&gt;, &lt;code&gt;_.head&lt;/code&gt;, &lt;code&gt;_.identity&lt;/code&gt;, &lt;code&gt;_.indexOf&lt;/code&gt;, &lt;code&gt;_.invokeMap&lt;/code&gt;, &lt;code&gt;_.isArguments&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;_.isArray&lt;/code&gt;, &lt;code&gt;_.isBoolean&lt;/code&gt;, &lt;code&gt;_.isDate&lt;/code&gt;, &lt;code&gt;_.isEmpty&lt;/code&gt;, &lt;code&gt;_.isEqual&lt;/code&gt;, &lt;code&gt;_.isFinite&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;_.isFunction&lt;/code&gt;, &lt;code&gt;_.isNaN&lt;/code&gt;, &lt;code&gt;_.isNull&lt;/code&gt;, &lt;code&gt;_.isNumber&lt;/code&gt;, &lt;code&gt;_.isObject&lt;/code&gt;, &lt;code&gt;_.isRegExp&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;_.isString&lt;/code&gt;, &lt;code&gt;_.isUndefined&lt;/code&gt;, &lt;code&gt;_.iteratee&lt;/code&gt;, &lt;code&gt;_.keys&lt;/code&gt;, &lt;code&gt;_.last&lt;/code&gt;, &lt;code&gt;_.map&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;_.max&lt;/code&gt;, &lt;code&gt;_.min&lt;/code&gt;, &lt;code&gt;_.mixin&lt;/code&gt;, &lt;code&gt;_.negate&lt;/code&gt;, &lt;code&gt;_.noConflict&lt;/code&gt;, &lt;code&gt;_.noop&lt;/code&gt;, &lt;code&gt;_.now&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;_.once&lt;/code&gt;, &lt;code&gt;_.pick&lt;/code&gt;, &lt;code&gt;_.reduce&lt;/code&gt;, &lt;code&gt;_.result&lt;/code&gt;, &lt;code&gt;_.size&lt;/code&gt;, &lt;code&gt;_.slice&lt;/code&gt;, &lt;code&gt;_.some&lt;/code&gt;,&lt;br&gt;
&lt;code&gt;_.sortBy&lt;/code&gt;, &lt;code&gt;_.tap&lt;/code&gt;, &lt;code&gt;_.thru&lt;/code&gt;, &lt;code&gt;_.toArray&lt;/code&gt;, &lt;code&gt;_.uniqueId&lt;/code&gt;, &lt;code&gt;_.value&lt;/code&gt;, &lt;code&gt;_.values&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;これはunderscoreとlodashのフラグメンテーションをどうにかしようという&lt;a href=&quot;https://github.com/underdash/underdash&quot; title=&quot;underdash&quot;&gt;underdash&lt;/a&gt;のゴールに向けての第一歩なのだと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/underdash/underdash/issues/6&quot; title=&quot;End Goal · Issue #6 · underdash/underdash&quot;&gt;End Goal · Issue #6 · underdash/underdash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;2016年1月12日(米国時間)、日本時間の2016年1月13日からIEのサポートポリシーが変更されました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/japan/msbc/Express/ie_support/&quot; title=&quot;Internet Explorer のサポートポリシーが変わります - MSBC&quot;&gt;Internet Explorer のサポートポリシーが変わります - MSBC&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blogs.msdn.com/b/osamum/archive/2016/01/13/legacy-browser-died-good-bye-old-ie.aspx&quot; title=&quot;レガシーブラウザのサポートは本日で 終了です。～さようならOld IE～ - monoe&amp;#39;s blog - Site Home - MSDN Blogs&quot;&gt;レガシーブラウザのサポートは本日で 終了です。～さようならOld IE～ - monoe&amp;#39;s blog - Site Home - MSDN Blogs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;具体的にはIE8のサポートが終了する事になります。また、IE9はVistaのみがサポート対象となります。&lt;/p&gt;

&lt;p&gt;これに合わせてReactなど色々なライブラリがIE8のサポートの終了などを宣言しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://facebook.github.io/react/blog/2016/01/12/discontinuing-ie8-support.html&quot; title=&quot;Discontinuing IE 8 Support in React DOM | React&quot;&gt;Discontinuing IE 8 Support in React DOM | React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;お知らせ&quot;&gt;お知らせ&lt;/h2&gt;

&lt;p&gt;今週の01/16(土曜日)にJSer.info 5周年記念イベントがあるので、よろしくお願いします。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://jser.connpass.com/event/24202/&quot; title=&quot;JSer.info 5周年記念イベント - connpass&quot;&gt;JSer.info 5周年記念イベント - connpass&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また当日JavaScript Discussionというコーナーを予定しています。&lt;br&gt;
これは&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2015/11/11/120753&quot; title=&quot;東京Node学園祭2015&quot;&gt;東京Node学園祭2015&lt;/a&gt;のNode Discussionをインスパイアしています。&lt;br&gt;
参加してる人から気になってる事を書いてもらい、それを元に議論するという事をやりたいと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://togetter.com/li/896787&quot; title=&quot;Node.jsの良いところ悪いところ？みんなでNodeの未来を考える！Nodeディスカッション #nodefest #nodefestB - Togetterまとめ&quot;&gt;Node.jsの良いところ悪いところ？みんなでNodeの未来を考える！Nodeディスカッション #nodefest #nodefestB - Togetterまとめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当日会場で質問とか思いつかなかったりする場合もあると思うので、事前に書き込んでもらって問題ありません。&lt;br&gt;
匿名でも書けるのでJavaScriptについて思ってることを書いてください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://app.sli.do/event/0egbwyxz/ask&quot; title=&quot;[JSer.info] JavaScript Discussion(JavaScriptの良い所/悪い所/気になる事)&quot;&gt;[JSer.info] JavaScript Discussion(JavaScriptの良い所/悪い所/気になる事)&lt;/a&gt;から質問や投票ができます&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、キャンセル待ちの人もいますので、参加できない方は早めにキャンセル処理をお願いします。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-2.2-and-1.12-released-|-official-jquery-blog&quot;&gt;jQuery 2.2 and 1.12 Released | Official jQuery Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jquery.com/2016/01/08/jquery-2-2-and-1-12-released/&quot; title=&quot;jQuery 2.2 and 1.12 Released | Official jQuery Blog&quot;&gt;blog.jquery.com/2016/01/08/jquery-2-2-and-1-12-released/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery 2.2と1.12リリース。&lt;br&gt;
SVGのclass属性を操作可能に、&lt;code&gt;jQuery.post&lt;/code&gt;/&lt;code&gt;jQuery.get&lt;/code&gt;の追加、&lt;code&gt;jQuery.htmlPrefilter&lt;/code&gt;の追加、&lt;code&gt;Symbol.iterator&lt;/code&gt;を実装しjQueryオブジェクトがiterableとなるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-4.0.0-·-lodash/lodash&quot;&gt;Release 4.0.0 · lodash/lodash&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lodash/lodash/releases/tag/4.0.0&quot; title=&quot;Release 4.0.0 · lodash/lodash&quot;&gt;github.com/lodash/lodash/releases/tag/4.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;lodash 4.0.0リリース。&lt;br&gt;
IE8以下のサポート終了、underdashのCore APIを実装したバージョンの提供、ES6との互換性向上、絵文字などのサロゲートペアを扱えるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/lodash/lodash/wiki/Changelog#compatibility-warnings&quot; title=&quot;Changelog · lodash/lodash Wiki&quot;&gt;Changelog · lodash/lodash Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/underdash/underdash&quot; title=&quot;underdash/underdash&quot;&gt;underdash/underdash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.0.0-·-testem/testem&quot;&gt;Release v1.0.0 · testem/testem&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/testem/testem/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 · testem/testem&quot;&gt;github.com/testem/testem/releases/tag/v1.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Test Runnerであるtestem 1.0.0リリース。&lt;br&gt;
MochaなどそれぞれのテストライブラリのファイルはバンドルしないでCDNのものを利用するようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.4.0-·-babel/babel&quot;&gt;Release v6.4.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.4.0&quot; title=&quot;Release v6.4.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.4.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel 6.4.0リリース。&lt;br&gt;
FlowTypeの更新追従、&lt;code&gt;--nolazy&lt;/code&gt;の引数に対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v5.4.0-(stable)-|-node.js&quot;&gt;Node v5.4.0 (Stable) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v5.4.0/&quot; title=&quot;Node v5.4.0 (Stable) | Node.js&quot;&gt;nodejs.org/en/blog/release/v5.4.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v5.4.0リリース。&lt;br&gt;
HTTP Status Codeに&lt;code&gt;451&lt;/code&gt;を追加、&lt;code&gt;process.env&lt;/code&gt;や&lt;code&gt;process.hrtime()&lt;/code&gt;のパフォーマンス改善など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mnot.net/blog/2015/12/18/451&quot; title=&quot;mnot’s blog: Why 451?&quot;&gt;mnot’s blog: Why 451?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;safari-9.1&quot;&gt;Safari 9.1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/prerelease/mac/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_1.html&quot; title=&quot;Safari 9.1&quot;&gt;developer.apple.com/library/prerelease/mac/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_1.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari 9.1のリリースノート。&lt;br&gt;
&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;要素のサポート、Web Inspectorの改善、特定条件下でのタップ遅延の除去、CSS Variableのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-browserify/changelog.markdown-at-v13.0.0-·-substack/node-browserify&quot;&gt;node-browserify/changelog.markdown at v13.0.0 · substack/node-browserify&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/substack/node-browserify/blob/v13.0.0/changelog.markdown&quot; title=&quot;node-browserify/changelog.markdown at v13.0.0 · substack/node-browserify&quot;&gt;github.com/substack/node-browserify/blob/v13.0.0/changelog.markdown&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Browserify 13.0.0リリース。&lt;br&gt;
&lt;code&gt;buffer&lt;/code&gt;モジュールが更新されたため、&lt;code&gt;buffer.toArrayBuffer()&lt;/code&gt;は削除された。&lt;br&gt;
&lt;code&gt;buffer&lt;/code&gt;のパフォーマンス改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;internet-explorer-のサポートポリシーが変わります---msbc&quot;&gt;Internet Explorer のサポートポリシーが変わります - MSBC&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.microsoft.com/japan/msbc/Express/ie_support/&quot; title=&quot;Internet Explorer のサポートポリシーが変わります - MSBC&quot;&gt;www.microsoft.com/japan/msbc/Express/ie_support/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;IE&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;IEのサポートポリシーが変更され、&amp;quot;OSに対応した最新版のIE&amp;quot;のみがサポート対象となった。&lt;br&gt;
それによりIE8はサポート対象から外れた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support&quot; title=&quot;Internet Explorer End of Support&quot;&gt;Internet Explorer End of Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blogs.msdn.com/b/osamum/archive/2016/01/13/legacy-browser-died-good-bye-old-ie.aspx&quot; title=&quot;レガシーブラウザのサポートは本日で 終了です。～さようならOld IE～ - monoe&amp;#39;s blog - Site Home - MSDN Blogs&quot;&gt;レガシーブラウザのサポートは本日で 終了です。～さようならOld IE～ - monoe&amp;#x27;s blog - Site Home - MSDN Blogs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;simple-guide-to-finding-a-javascript-memory-leak-in-node.js&quot;&gt;Simple Guide to Finding a JavaScript Memory Leak in Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.alexkras.com/simple-guide-to-finding-a-javascript-memory-leak-in-node-js/&quot; title=&quot;Simple Guide to Finding a JavaScript Memory Leak in Node.js&quot;&gt;www.alexkras.com/simple-guide-to-finding-a-javascript-memory-leak-in-node-js/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのアプリでメモリリークが起きた場合にどこで起きてるのかを見つける方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rxjsで副作用を扱うにはどうするか---schedulerを交えて---snyk_s-log&quot;&gt;RxJSで副作用を扱うにはどうするか - Schedulerを交えて - snyk_s log&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://saneyukis.hatenablog.com/entry/2016/01/04/055932&quot; title=&quot;RxJSで副作用を扱うにはどうするか - Schedulerを交えて - snyk_s log&quot;&gt;saneyukis.hatenablog.com/entry/2016/01/04/055932&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;RxJSでの副作用を扱うときに考えるべきこと。&lt;br&gt;
意図せず複数回呼ばれないようにHot Observableへ変換する、race conditionを避ける、副作用があった事を後続に通知することについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;promiseはどう動作するのか-–-promiseを実装してみる-|-プログラミング-|-postd&quot;&gt;Promiseはどう動作するのか – Promiseを実装してみる | プログラミング | POSTD&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://postd.cc/how-do-promises-work/&quot; title=&quot;Promiseはどう動作するのか – Promiseを実装してみる | プログラミング | POSTD&quot;&gt;postd.cc/how-do-promises-work/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://robotlolita.me/2015/11/15/how-do-promises-work.html&quot; title=&quot;How do Promises Work? - Quils in Space&quot;&gt;How do Promises Work? - Quils in Space&lt;/a&gt;の翻訳&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;future-javascript-—-&amp;lt;-jedi-js-&amp;gt;-—-medium&quot;&gt;Future JavaScript — &amp;lt; Jedi JS &amp;gt; — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/jedi-js/future-javascript-d9baab4663f3&quot; title=&quot;Future JavaScript — &amp;lt; Jedi JS &amp;gt; — Medium&quot;&gt;medium.com/jedi-js/future-javascript-d9baab4663f3&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6などで追加されている新しい構文についての連載&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;exploring-async/exploring_async.md-at-master-·-thalesmello/exploring-async&quot;&gt;exploring-async/exploring_async.md at master · thalesmello/exploring-async&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thalesmello/exploring-async/blob/master/exploring_async.md&quot; title=&quot;exploring-async/exploring_async.md at master · thalesmello/exploring-async&quot;&gt;github.com/thalesmello/exploring-async/blob/master/exploring_async.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの非同期処理について要素ごとに書かれてる。&lt;br&gt;
コールバック、Promise、Generator、Async/Await、Rx、CSP&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6/whatwg-loader-&amp;amp;-node---google-スライド&quot;&gt;ES6/WhatWG Loader &amp;amp; Node - Google スライド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1tXziuBheum53jk-FgtFkEUGKNVTdHzbpzhJLk7FatGc/edit#slide=id.p&quot; title=&quot;ES6/WhatWG Loader &amp;amp; Node - Google スライド&quot;&gt;docs.google.com/presentation/d/1tXziuBheum53jk-FgtFkEUGKNVTdHzbpzhJLk7FatGc/edit#slide=id.p&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CommonJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6 Modules/WHATWG LoaderとNode.jsについてのスライド/動画。&lt;br&gt;
構文、モジュール内/exportした値の扱いの違い、循環参照、キャッシュ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=NdOKO-6Ty7k&quot; title=&quot;Node &amp;amp; WhatWG Loader - YouTube&quot;&gt;Node &amp;amp; WhatWG Loader - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://whatwg.github.io/loader/&quot; title=&quot;Loader&quot;&gt;Loader&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;overreact&quot;&gt;OverReact&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.overreact.io/&quot; title=&quot;OverReact&quot;&gt;www.overreact.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ワイヤフレームを作ってReact Componentとしてダウンロードすることができるサービス&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-newsletter&quot;&gt;Front End Newsletter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://frontendnewsletter.com/&quot; title=&quot;Front End Newsletter&quot;&gt;frontendnewsletter.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mail&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;フロントエンドに関するWeeklyメールマガジン&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;goessner/g2&quot;&gt;goessner/g2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/goessner/g2&quot; title=&quot;goessner/g2&quot;&gt;github.com/goessner/g2&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;コマンドパターンでCanvasに描画したり、SVGとして出力出来るライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;roman01la/html-to-react-components&quot;&gt;roman01la/html-to-react-components&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/roman01la/html-to-react-components&quot; title=&quot;roman01la/html-to-react-components&quot;&gt;github.com/roman01la/html-to-react-components&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;HTMLをReact Componentに変換するツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;real-time-communication-with-webrtc,-2nd-edition---o&amp;#x27;reilly-media&quot;&gt;Real-Time Communication with WebRTC, 2nd Edition - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/0636920044796.do&quot; title=&quot;Real-Time Communication with WebRTC, 2nd Edition - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/0636920044796.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年3月発売&lt;br&gt;
WebRTCについての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;amazon.co.jp：-フロントエンドエンジニアのための現在とこれからの必須知識:-斉藤-祐也,-水野-隼登,-谷-拓樹,-菅原-のびすけ,-林-優一,-古沢-宏太:-本&quot;&gt;Amazon.co.jp： フロントエンドエンジニアのための現在とこれからの必須知識: 斉藤 祐也, 水野 隼登, 谷 拓樹, 菅原 のびすけ, 林 優一, 古沢 宏太: 本&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.jp/dp/4839956758/&quot; title=&quot;Amazon.co.jp： フロントエンドエンジニアのための現在とこれからの必須知識: 斉藤 祐也, 水野 隼登, 谷 拓樹, 菅原 のびすけ, 林 優一, 古沢 宏太: 本&quot;&gt;www.amazon.co.jp/dp/4839956758/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年1月28日発売&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;フロントエンドを1、2年以上担当した人を対象に、「今知っておかないといけない情報」と、「今後役に立つ情報」をピックアップしてまとめた本&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 13 Jan 2016 20:33:00 +0900</pubDate>
        <link>http://jser.info/2016/01/13/jquer-2.2-lodash4.0-ie8/</link>
        <guid isPermaLink="true">http://jser.info/2016/01/13/jquer-2.2-lodash4.0-ie8/</guid>
        
        <category>jQuery</category>
        
        <category>IE</category>
        
        <category>library</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
  </channel>
</rss>
