<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>http://jser.info/</link>
    <atom:link href="http://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 14 Apr 2016 18:48:19 +0900</pubDate>
    <lastBuildDate>Thu, 14 Apr 2016 18:48:19 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>2016-04-11のJS: Grunt 1.0.0、React 15.0、ツールで学ぶJavaScript</title>
        <description>&lt;p&gt;JSer.info #274 - Grunt 1.0.0が正式リリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gruntjs.com/blog/2016-04-04-grunt-1.0.0-released&quot; title=&quot;Grunt 1.0.0 released - Grunt: The JavaScript Task Runner&quot;&gt;Grunt 1.0.0 released - Grunt: The JavaScript Task Runner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.publickey1.jp/blog/16/javascriptgrunt_1002.html&quot; title=&quot;JavaScript作業自動化ツール「Grunt 1.0.0」が登場。約2年もの開発停滞から復活 － Publickey&quot;&gt;JavaScript作業自動化ツール「Grunt 1.0.0」が登場。約2年もの開発停滞から復活 － Publickey&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.0.0 RC1からは依存パッケージのアップデートがされていますが、&lt;code&gt;grunt.util._&lt;/code&gt;で参照できるlodashが4.3.0に更新されています。&lt;br&gt;
&lt;code&gt;grunt.util._&lt;/code&gt;自体が非推奨であるため、以下のように自分でlodashをインストールして使うことが推奨されています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;lodash&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/04/07/react-v15.html&quot; title=&quot;React v15.0 | React&quot;&gt;React v15.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;幾つか問題があったため、既に&lt;a href=&quot;https://facebook.github.io/react/blog/2016/04/08/react-v15.0.1.html&quot; title=&quot;React v15.0.1&quot;&gt;React v15.0.1&lt;/a&gt;がリリースされていますが、基本的には0.14.xからは非推奨の警告メッセージがなければそのままアップグレードできるようです。&lt;/p&gt;

&lt;p&gt;0.14.xからの変更点は以下にまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/04/07/react-v15.html&quot; title=&quot;React v15.0 | React&quot;&gt;React v15.0 | React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.koba04.com/post/2016/03/09/react-js-v15-changes/&quot; title=&quot;React.js v15.0 changes - blog.koba04.com&quot;&gt;React.js v15.0 changes - blog.koba04.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、Reactのコアチームのミーティングノートが公開されるようになっているので、今後どのような方針でやっていくのかなどが書かれているので気になる人は見るといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/reactjs/core-notes&quot; title=&quot;reactjs/core-notes: Weekly meeting notes from the React core team&quot;&gt;reactjs/core-notes: Weekly meeting notes from the React core team&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/tools-learn-javascript/&quot; title=&quot;Tools to Learn JavaScript By Doing -Telerik Developer Network&quot;&gt;Tools to Learn JavaScript By Doing -Telerik Developer Network&lt;/a&gt;という記事ではツールで学ぶJavaScriptについて書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://nodeschool.io/ja/&quot; title=&quot;NodeSchool&quot;&gt;NodeSchool&lt;/a&gt;や&lt;a href=&quot;https://github.com/rmurphey/js-assessment&quot; title=&quot;js-assessment&quot;&gt;js-assessment&lt;/a&gt;、&lt;a href=&quot;http://adventofcode.com/&quot; title=&quot;Advent of Code&quot;&gt;Advent of Code&lt;/a&gt;などの問題を解きながら学べるサイトやツールについて書かれています。&lt;/p&gt;

&lt;p&gt;ものすごく前に&lt;a href=&quot;http://efcl.info/2012/0414/res3059/&quot; title=&quot;テストで学ぶJavaScriptについて | Web Scratch&quot;&gt;テストで学ぶJavaScriptについて&lt;/a&gt;というのを書いてましたが、実際に解きながら学ぶと結構色々発見があり面白いと思います。&lt;/p&gt;

&lt;p&gt;この中だと&lt;a href=&quot;http://nodeschool.io/ja/&quot; title=&quot;NodeSchool&quot;&gt;NodeSchool&lt;/a&gt;の&lt;a href=&quot;http://nodeschool.io/ja/#workshopper-list&quot;&gt;workshopper&lt;/a&gt;は、ただのJavaScript文法だけではなく色々なライブラリやツールごとにあるので、見てみるとおもしろいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;grunt-1.0.0-released---grunt:-the-javascript-task-runner&quot;&gt;Grunt 1.0.0 released - Grunt: The JavaScript Task Runner&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gruntjs.com/blog/2016-04-04-grunt-1.0.0-released&quot; title=&quot;Grunt 1.0.0 released - Grunt: The JavaScript Task Runner&quot;&gt;gruntjs.com/blog/2016-04-04-grunt-1.0.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Grunt&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Grunt 1.0.0リリース。&lt;br&gt;
Gruntプラグインの&lt;code&gt;peerDependencies&lt;/code&gt;には&lt;code&gt;&amp;quot;grunt&amp;quot;: &amp;quot;&amp;gt;=0.4.0&amp;quot;&lt;/code&gt;を入れることを推奨してる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.0.0---rosebud-·-sboudrias/inquirer.js&quot;&gt;Release v1.0.0 - Rosebud · SBoudrias/Inquirer.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SBoudrias/Inquirer.js/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 - Rosebud · SBoudrias/Inquirer.js&quot;&gt;github.com/SBoudrias/Inquirer.js/releases/tag/v1.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ターミナルで選択肢などインタラクティブな動作を行うInquirer.js 1.0.0リリース。&lt;br&gt;
PromiseベースのAPIへ変更&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;normalize.css/changelog.md-at-4.0.0-·-necolas/normalize.css&quot;&gt;normalize.css/CHANGELOG.md at 4.0.0 · necolas/normalize.css&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/necolas/normalize.css/blob/4.0.0/CHANGELOG.md&quot; title=&quot;normalize.css/CHANGELOG.md at 4.0.0 · necolas/normalize.css&quot;&gt;github.com/necolas/normalize.css/blob/4.0.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;normalize.css 4.0.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hail2u.net/blog/webdesign/modularized-normalize-scss-v4.0.0.html&quot; title=&quot;Normalize.scss v4 - Weblog - Hail2u.net&quot;&gt;Normalize.scss v4 - Weblog - Hail2u.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;aws-lambda-supports-node.js-4.3&quot;&gt;AWS Lambda Supports Node.js 4.3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/about-aws/whats-new/2016/04/aws-lambda-supports-node-js-4-3/&quot; title=&quot;AWS Lambda Supports Node.js 4.3&quot;&gt;aws.amazon.com/about-aws/whats-new/2016/04/aws-lambda-supports-node-js-4-3/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AWS LambdaでNode.js 4.3をサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-8.3.0-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at 8.3.0 · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/8.3.0/Changelog.md&quot; title=&quot;jsdom/Changelog.md at 8.3.0 · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/8.3.0/Changelog.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdom 8.3.0リリース。&lt;br&gt;
Node Canvasを使った外部リソースを使った&lt;code&gt;img&lt;/code&gt;の処理を追加(optional)。&lt;br&gt;
&lt;code&gt;img.naturalWidth&lt;/code&gt;などの実データに基づく値を取れるようになっています。&lt;/p&gt;

&lt;p&gt;また、Page Visibility APIの基本的な実装を追加するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-v15.0-|-react&quot;&gt;React v15.0 | React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/04/07/react-v15.html&quot; title=&quot;React v15.0 | React&quot;&gt;facebook.github.io/react/blog/2016/04/07/react-v15.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React v15.0リリース。&lt;br&gt;
IE8のサポート終了、semverに準拠してアップデートするように変更。&lt;br&gt;
0.14で非推奨なメッセージがでてなければ、そのままアップデートして動作する。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tools-to-learn-javascript-by-doing--telerik-developer-network&quot;&gt;Tools to Learn JavaScript By Doing -Telerik Developer Network&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/tools-learn-javascript/&quot; title=&quot;Tools to Learn JavaScript By Doing -Telerik Developer Network&quot;&gt;developer.telerik.com/featured/tools-learn-javascript/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;js-assessment、NodeSchool、Advent of CodeなどJavaScriptを学べるインタラクティブ性のあるツールについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-the-microsoft-edge-platform-issue-tracker-|-microsoft-edge-dev-blog&quot;&gt;Introducing the Microsoft Edge Platform Issue Tracker | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/04/06/edgehtml-issue-tracker/&quot; title=&quot;Introducing the Microsoft Edge Platform Issue Tracker | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2016/04/06/edgehtml-issue-tracker/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MS EdgeのIssue Trackerがアップデートされた。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/browser-javascript-resource&quot; title=&quot;azu/browser-javascript-resource: Browser JavaScript Resource.&quot;&gt;azu/browser-javascript-resource: Browser JavaScript Resource.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webdriverioで始めるe2eテストとpageobject---qiita&quot;&gt;WebdriverIOで始めるE2EテストとPageObject - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/derui@github/items/9ee72c7533c9a57aa8d2&quot; title=&quot;WebdriverIOで始めるE2EテストとPageObject - Qiita&quot;&gt;qiita.com/derui@github/items/9ee72c7533c9a57aa8d2&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebdriverIOを使ったE2EテストをPageObjectパターンで実装する話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reactコンポーネントをnpmパッケージとして開発する---hatena-developer-blog&quot;&gt;Reactコンポーネントをnpmパッケージとして開発する - Hatena Developer Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.hatenastaff.com/entry/2016/04/09/180000&quot; title=&quot;Reactコンポーネントをnpmパッケージとして開発する - Hatena Developer Blog&quot;&gt;developer.hatenastaff.com/entry/2016/04/09/180000&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactコンポーネントをnpmでライブラリとして公開する方法とメリット/デメリットについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;streaming-template-literals---jakearchibald.com&quot;&gt;Streaming template literals - JakeArchibald.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jakearchibald.com/2016/streaming-template-literals/&quot; title=&quot;Streaming template literals - JakeArchibald.com&quot;&gt;jakearchibald.com/2016/streaming-template-literals/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Template LiteralとWHATWG Streamをあわせる方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-2-—-unit-testing-recipes-—-google-developer-experts-—-medium&quot;&gt;Angular 2 — Unit Testing recipes — Google Developer Experts — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/google-developer-experts/angular-2-unit-testing-with-jasmine-defe20421584&quot; title=&quot;Angular 2 — Unit Testing recipes — Google Developer Experts — Medium&quot;&gt;medium.com/google-developer-experts/angular-2-unit-testing-with-jasmine-defe20421584&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AnguarJS2でのテストパターン&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-to-flux-util-//-speaker-deck&quot;&gt;Introduction to flux-util // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/joere/introduction-to-flux-util&quot; title=&quot;Introduction to flux-util // Speaker Deck&quot;&gt;speakerdeck.com/joere/introduction-to-flux-util&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Facebookのflux utilについてのスライド。&lt;br&gt;
flux utilの機能や担当する役割について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react.run---beta&quot;&gt;React.run - Beta&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.react.run/&quot; title=&quot;React.run - Beta&quot;&gt;www.react.run/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentのコードを実行/共有できるJSFiddle的なサービス&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-edge-developer-resources&quot;&gt;Microsoft Edge Developer Resources&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.windows.com/en-us/microsoft-edge/platform/data/&quot; title=&quot;Microsoft Edge Developer Resources&quot;&gt;dev.windows.com/en-us/microsoft-edge/platform/data/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;統計&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MSEdgeのウェブサイトでのCSSプロパティの使用率やブラウザのAPIサポート率などのデータ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features&quot; title=&quot;Chrome Platform Status&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jdonaghue/es-search:-search-ecmascript-structurally&quot;&gt;jdonaghue/es-search: Search ECMAScript structurally&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jdonaghue/es-search&quot; title=&quot;jdonaghue/es-search: Search ECMAScript structurally&quot;&gt;github.com/jdonaghue/es-search&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;検索&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ASTベースでJavaScriptのコードから構造に一致する部分を検索するツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redfin/react-server:-react-server-monorepo&quot;&gt;redfin/react-server: React server monorepo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/redfin/react-server&quot; title=&quot;redfin/react-server: React server monorepo&quot;&gt;github.com/redfin/react-server&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;サーバー&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactを使ったexpress middlewareなどのサーバ関連の実装&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mohayonao/web-audio-engine:-pure-js-implementation-of-the-web-audio-api&quot;&gt;mohayonao/web-audio-engine: Pure JS implementation of the Web Audio API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mohayonao/web-audio-engine&quot; title=&quot;mohayonao/web-audio-engine: Pure JS implementation of the Web Audio API&quot;&gt;github.com/mohayonao/web-audio-engine&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Audio APIのPure JavaScript実装。&lt;br&gt;
PCM audioをNode Streamに吐くことができる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kenwheeler/cash:-an-absurdly-small-jquery-alternative-for-modern-browsers&quot;&gt;kenwheeler/cash: An absurdly small jQuery alternative for modern browsers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kenwheeler/cash&quot; title=&quot;kenwheeler/cash: An absurdly small jQuery alternative for modern browsers&quot;&gt;github.com/kenwheeler/cash&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery Alternativeなライブラリ。&lt;br&gt;
jQueryのDOM周りのメソッドを集めた感じ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;brigand/babel-plugin-flow-react-proptypes:-a-babel-plugin-to-generate-react-proptypes-definitions-from-flow-type-declarations.&quot;&gt;brigand/babel-plugin-flow-react-proptypes: A babel plugin to generate React PropTypes definitions from Flow type declarations.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/brigand/babel-plugin-flow-react-proptypes&quot; title=&quot;brigand/babel-plugin-flow-react-proptypes: A babel plugin to generate React PropTypes definitions from Flow type declarations.&quot;&gt;github.com/brigand/babel-plugin-flow-react-proptypes&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;FlowTypeでReactのpropTypesを書くと、JavaScriptのpropTypesに変換してくれるBabelプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;c58/marsdb:-marsdb-is-a-promise-based-lightweight-database-with-mongodb-query-syntax,-written-on-es6&quot;&gt;c58/marsdb: MarsDB is a Promise based lightweight database with MongoDB query syntax, written on ES6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/c58/marsdb&quot; title=&quot;c58/marsdb: MarsDB is a Promise based lightweight database with MongoDB query syntax, written on ES6&quot;&gt;github.com/c58/marsdb&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;minimongoのようなクライアントサイド向けのデータベースライブラリ。&lt;br&gt;
Adpterでバックエンドとなる保存方法を変更できるため、BrowserやElectron、Node.jsなどで動作する&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;plasmapower/assert-request:-assert-responses-to-http-requests-in-node.js&quot;&gt;PlasmaPower/assert-request: Assert responses to HTTP requests in Node.JS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/PlasmaPower/assert-request&quot; title=&quot;PlasmaPower/assert-request: Assert responses to HTTP requests in Node.JS&quot;&gt;github.com/PlasmaPower/assert-request&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでrequestに対してresponseのassertを行うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;amazon.com:-isomorphic-application-development-with-javascrip-ebook:-konstantin-tarkus:-kindle-store&quot;&gt;Amazon.com: Isomorphic Application Development with JavaScrip eBook: Konstantin Tarkus: Kindle Store&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.com/Isomorphic-Application-Development-JavaScrip-Konstantin-ebook/dp/B01DWFRFVG&quot; title=&quot;Amazon.com: Isomorphic Application Development with JavaScrip eBook: Konstantin Tarkus: Kindle Store&quot;&gt;www.amazon.com/Isomorphic-Application-Development-JavaScrip-Konstantin-ebook/dp/B01DWFRFVG&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2017年2月4日発売&lt;br&gt;
Isomorphic JavaScriptについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 11 Apr 2016 20:00:00 +0900</pubDate>
        <link>http://jser.info/2016/04/11/grunt-100react-150javascript/</link>
        <guid isPermaLink="true">http://jser.info/2016/04/11/grunt-100react-150javascript/</guid>
        
        <category>Grunt</category>
        
        <category>React</category>
        
        <category>Tutorial</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-04-04のJS: Node.js 5.10.0、npm security fix、Safari Technology Preview</title>
        <description>&lt;p&gt;JSer.info #273 - &lt;a href=&quot;https://nodejs.org/en/blog/release/v5.10.0/&quot; title=&quot;Node v5.10.0 (Stable)&quot;&gt;Node v5.10.0 (Stable)&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;後述する&lt;a href=&quot;https://www.npmjs.com/&quot; title=&quot;npm&quot;&gt;npm&lt;/a&gt;のセキュリティ的な問題の修正がされたバージョンも含まれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jser.info/2016/03/17/react-webassembly-art-of-javascript/&quot; title=&quot;2016-03-17のJS&quot;&gt;2016-03-17のJS&lt;/a&gt;でも紹介していましたが、Node.js v6ではBuffer APIの変更が予定されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/@jasnell/node-js-buffer-api-changes-3c21f1048f97#.qk7fmic6y&quot; title=&quot;Node.js Buffer API Changes — Medium&quot;&gt;Node.js Buffer API Changes — Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;このAPIの変更と&lt;code&gt;--zero-fill-buffers&lt;/code&gt;コマンドラインオプションが、Node.js 5.10.0にもバックポートされています。&lt;/p&gt;

&lt;p&gt;また、主にNW.jsやElectron環境向けだと思いますが、&lt;code&gt;--no-browser-globals&lt;/code&gt;フラグで、&lt;br&gt;
以下のようなブラウザにグローバルとの互換APIを露出させないオプションが追加されいます。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;setTimeout, clearTimeout, setInterval, clearInterval, setImmediate, clearImmediate
console
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.npmjs.org/post/142036323955/fixing-a-bearer-token-vulnerability&quot; title=&quot;The npm Blog — fixing a bearer token vulnerability&quot;&gt;The npm Blog — fixing a bearer token vulnerability&lt;/a&gt;では&lt;code&gt;npm &amp;lt; 2.15.1&lt;/code&gt; or &lt;code&gt;npm &amp;lt; 3.8.3&lt;/code&gt;にあった脆弱性について解説されています。&lt;/p&gt;

&lt;p&gt;npmのCLIで発生したリクエストにて、registry以外にもtoken情報を送信していたという問題で、&lt;a href=&quot;https://www.npmjs.com/settings/tokens&quot;&gt;既存のtokenはこちらから取り消せます&lt;/a&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://nodejs.org/en/blog/vulnerability/npm-tokens-leak-march-2016/&quot; title=&quot;npm security updates v2.15.1 and v3.8.3 | Node.js&quot;&gt;npm security updates v2.15.1 and v3.8.3 | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;該当コミット: &lt;a href=&quot;https://github.com/npm/npm/commit/f67ecad59e99a03e5aad8e93cd1a086ae087cb29&quot; title=&quot;config: only send token to registry hosts · npm/npm@f67ecad&quot;&gt;config: only send token to registry hosts · npm/npm@f67ecad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;npm 2.xと3.x それぞれアップデートされています。&lt;br&gt;
Node.js自体のアップデート または &lt;code&gt;npm i -g npm&lt;/code&gt;でアップデートする必要があります。&lt;/p&gt;

&lt;p&gt;Windowsの場合は&lt;a href=&quot;https://github.com/felixrieseberg/npm-windows-upgrade&quot; title=&quot;npm-windows-upgrade&quot;&gt;npm-windows-upgrade&lt;/a&gt;を使うことで&lt;code&gt;npm i -g npm&lt;/code&gt;と同様のことが行えます。&lt;/p&gt;

&lt;p&gt;npmは&lt;a href=&quot;http://blog.npmjs.org/post/141577284765/kik-left-pad-and-npm&quot; title=&quot;Azer&quot;&gt;AzerのKik問題&lt;/a&gt;を受けて、色々な変更や改善を最近行っているので合わせてチェックするとよいかと思います。&lt;/p&gt;

&lt;p&gt;簡単にまとめると&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/142077474335/npm-registry-is-now-fully-https&quot; title=&quot;The npm Blog — npm registry is now fully HTTPS!&quot;&gt;npm registry is now fully HTTPS!&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;registryの完全HTTPS化&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/141905368000/changes-to-npms-unpublish-policy&quot; title=&quot;The npm Blog — changes to npm’s unpublish policy&quot;&gt;changes to npm’s unpublish policy&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm unpublish&lt;/code&gt;ポリシーの変更&lt;/li&gt;
&lt;li&gt;publishして24時間以内なら、今まで通り&lt;code&gt;npm unpublish&lt;/code&gt;できる。&lt;/li&gt;
&lt;li&gt;それ以降は&lt;code&gt;support@npmjs.com&lt;/code&gt;へ連絡が必要&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;完全にunpublish(remove)されたモジュールは&lt;a href=&quot;https://github.com/npm/security-holder&quot; title=&quot;Security holding package&quot;&gt;Security holding package&lt;/a&gt;に置き換えるように変更

&lt;ul&gt;
&lt;li&gt;パッケージの名前空間の乗っとり防止の対策&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/141702881055/package-install-scripts-vulnerability&quot; title=&quot;The npm Blog — Package install scripts vulnerability&quot;&gt;Package install scripts vulnerability&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm install &amp;lt;module&amp;gt;&lt;/code&gt;した際に&lt;code&gt;postinstall&lt;/code&gt;で任意のスクリプトが実行できる問題と対策&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://teppeis.hatenablog.com/entry/2016/03/npm-vulnerability-and-open-source-trust&quot; title=&quot;npm install scriptの脆弱性とオープンソースと信頼 - teppeis blog&quot;&gt;npm install scriptの脆弱性とオープンソースと信頼 - teppeis blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/safari/technology-preview/&quot; title=&quot;Safari Technology Preview&quot;&gt;Safari Technology Preview&lt;/a&gt;が公開されています。&lt;br&gt;
2週間ごとに更新される開発者向けのバージョンで、&lt;a href=&quot;https://www.mozilla.org/ja/firefox/developer/&quot; title=&quot;Firefox Developer Edition — Mozilla&quot;&gt;Firefox Developer Edition&lt;/a&gt;やChrome Dev Channelのような感じです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/6017/introducing-safari-technology-preview/&quot; title=&quot;Introducing Safari Technology Preview | WebKit&quot;&gt;Introducing Safari Technology Preview | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Safari Technology Previewで問題を見つけたら、BugzillaやBug Reporterを使ってバグ報告することができます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/github/fetch/issues/303&quot; title=&quot;Fetch polyfill not working with Safari Technology Preview · Issue #303 · github/fetch&quot;&gt;Fetch polyfill not working with Safari Technology Preview · Issue #303 · github/fetch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/browser-javascript-resource&quot; title=&quot;azu/browser-javascript-resource: Browser JavaScript Resource.&quot;&gt;azu/browser-javascript-resource: Browser JavaScript Resource.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v5.10.0-(stable)-|-node.js&quot;&gt;Node v5.10.0 (Stable) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v5.10.0/&quot; title=&quot;Node v5.10.0 (Stable) | Node.js&quot;&gt;nodejs.org/en/blog/release/v5.10.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 5.10.0リリース。&lt;br&gt;
npmのセキュリティアップデートしたバージョンが含まれている。&lt;br&gt;
また、&lt;code&gt;Buffer(size)&lt;/code&gt;のallocation問題に対して&lt;code&gt;Buffer.alloc&lt;/code&gt;/&lt;code&gt;Buffer.allocUnsafe&lt;/code&gt;/&lt;code&gt;Buffer.from&lt;/code&gt;と&lt;code&gt;--zero-fill-buffers&lt;/code&gt;コマンドライン引数の追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.npmjs.org/post/142036323955/fixing-a-bearer-token-vulnerability&quot; title=&quot;The npm Blog — fixing a bearer token vulnerability&quot;&gt;The npm Blog — fixing a bearer token vulnerability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linux.com/news/software/applications/893109-nodejs-buffer-api-changes&quot; title=&quot;Node.js Buffer API Changes | Linux.com&quot;&gt;Node.js Buffer API Changes | Linux.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-safari-technology-preview-|-webkit&quot;&gt;Introducing Safari Technology Preview | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6017/introducing-safari-technology-preview/&quot; title=&quot;Introducing Safari Technology Preview | WebKit&quot;&gt;webkit.org/blog/6017/introducing-safari-technology-preview/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safariの開発者プレビュー版が公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pixi.js-v4-arrives---goodboy™-—-goodboy™&quot;&gt;Pixi.JS v4 Arrives - Goodboy™ — Goodboy™&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.goodboydigital.com/pixi-js-v4/&quot; title=&quot;Pixi.JS v4 Arrives - Goodboy™ — Goodboy™&quot;&gt;www.goodboydigital.com/pixi-js-v4/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PixiJS v4 RCリリース。&lt;br&gt;
pixi-gl-coreというWebGL部分のコア実装を分離、RenderTextureのGCを任意のタイミングで走らせることが出来るように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pixijs/pixi-gl-core&quot; title=&quot;pixijs/pixi-gl-core: A set of tidy little pixi objects that make working with webGL simpler (WIP, will be moved to pixi group when ready)&quot;&gt;pixijs/pixi-gl-core: A set of tidy little pixi objects that make working with webGL simpler (WIP, will be moved to pixi group when ready)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-npm-blog-—-fixing-a-bearer-token-vulnerability&quot;&gt;The npm Blog — fixing a bearer token vulnerability&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.npmjs.org/post/142036323955/fixing-a-bearer-token-vulnerability&quot; title=&quot;The npm Blog — fixing a bearer token vulnerability&quot;&gt;blog.npmjs.org/post/142036323955/fixing-a-bearer-token-vulnerability&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npmにMITMできる脆弱性があったため2.xと3.xそれぞれセキュリティアップデートされている。&lt;br&gt;
&lt;code&gt;npm i -g&lt;/code&gt;または&lt;code&gt;npm-windows-upgrade&lt;/code&gt;を使うことで&lt;code&gt;npm&lt;/code&gt;自体をアップデートできる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/felixrieseberg/npm-windows-upgrade&quot; title=&quot;felixrieseberg/npm-windows-upgrade: Upgrade npm on Windows&quot;&gt;felixrieseberg/npm-windows-upgrade: Upgrade npm on Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack-2-tree-shaking-configuration-—-modus-create:-front-end-development-—-medium&quot;&gt;Webpack 2 Tree Shaking Configuration — Modus Create: Front End Development — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/modus-create-front-end-development/webpack-2-tree-shaking-configuration-9f1de90f3233&quot; title=&quot;Webpack 2 Tree Shaking Configuration — Modus Create: Front End Development — Medium&quot;&gt;medium.com/modus-create-front-end-development/webpack-2-tree-shaking-configuration-9f1de90f3233&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpack 1から2へのマイグレーションについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-vs-angular2:-the-fight-rages-on-–-evojam-technology-blog&quot;&gt;React vs Angular2: The fight rages on – Evojam Technology Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.evojam.com/2016/03/31/react-vs-angular2-the-fight-rages-on/&quot; title=&quot;React vs Angular2: The fight rages on – Evojam Technology Blog&quot;&gt;tech.evojam.com/2016/03/31/react-vs-angular2-the-fight-rages-on/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactとAngularJS 2の比較&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;houdini:-maybe-the-most-exciting-development-in-css-you&amp;#x27;ve-never-heard-of-–-smashing-magazine&quot;&gt;Houdini: Maybe The Most Exciting Development In CSS You&amp;#x27;ve Never Heard Of – Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/03/houdini-maybe-the-most-exciting-development-in-css-youve-never-heard-of/&quot; title=&quot;Houdini: Maybe The Most Exciting Development In CSS You&amp;#39;ve Never Heard Of – Smashing Magazine&quot;&gt;www.smashingmagazine.com/2016/03/houdini-maybe-the-most-exciting-development-in-css-youve-never-heard-of/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;W3C task forceのHoudiniは何を解決するのが目的でどういうものなのかについての解説。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-javascript-event-loop:-explained&quot;&gt;The JavaScript Event Loop: Explained&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/&quot; title=&quot;The JavaScript Event Loop: Explained&quot;&gt;blog.carbonfive.com/2013/10/27/the-javascript-event-loop-explained/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのイベントループについての解説、図解。&lt;br&gt;
DOM EventやWebWorkerについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#x27;s-new-in-typescript?-|-build-2016-|-channel-9&quot;&gt;What&amp;#x27;s New in TypeScript? | Build 2016 | Channel 9&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://channel9.msdn.com/Events/Build/2016/B881&quot; title=&quot;What&amp;#39;s New in TypeScript? | Build 2016 | Channel 9&quot;&gt;channel9.msdn.com/Events/Build/2016/B881&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;近年のTypeScriptのリリースについて。&lt;br&gt;
またnon-nullable typeやnpmとd.tsについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;let&amp;#x27;s-learn-es6---youtube&quot;&gt;Let&amp;#x27;s Learn ES6 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PL57atfCFqj2h5fpdZD-doGEIs0NZxeJTX&quot; title=&quot;Let&amp;#39;s Learn ES6 - YouTube&quot;&gt;www.youtube.com/playlist?list=PL57atfCFqj2h5fpdZD-doGEIs0NZxeJTX&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6について学ぶスクリーンキャストの連載&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;buzinas/tslint-eslint-rules:-improve-your-tslint-with-the-missing-eslint-rules&quot;&gt;buzinas/tslint-eslint-rules: Improve your TSLint with the missing ESLint rules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/buzinas/tslint-eslint-rules&quot; title=&quot;buzinas/tslint-eslint-rules: Improve your TSLint with the missing ESLint rules&quot;&gt;github.com/buzinas/tslint-eslint-rules&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TSLint向けのESLintルール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;aadsm/jschardet:-character-encoding-auto-detection-in-javascript-(port-of-python&amp;#x27;s-chardet)&quot;&gt;aadsm/jschardet: Character encoding auto-detection in JavaScript (port of python&amp;#x27;s chardet)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/aadsm/jschardet&quot; title=&quot;aadsm/jschardet: Character encoding auto-detection in JavaScript (port of python&amp;#39;s chardet)&quot;&gt;github.com/aadsm/jschardet&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;文字コード&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptで文字コード判定をするライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rbuckton/prex:-async-coordination-primitives-and-extensions-on-top-of-es6-promises&quot;&gt;rbuckton/prex: Async coordination primitives and extensions on top of ES6 Promises&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rbuckton/prex&quot; title=&quot;rbuckton/prex: Async coordination primitives and extensions on top of ES6 Promises&quot;&gt;github.com/rbuckton/prex&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promise周りの補助ライブラリ。&lt;br&gt;
Cancellation、Semaphore、SchedulingのAPIを提供してる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;liquidlabsgmbh/retractor:-expose-react-internals-for-e2e-testing&quot;&gt;LiquidLabsGmbH/retractor: Expose react internals for E2E testing&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/LiquidLabsGmbH/retractor&quot; title=&quot;LiquidLabsGmbH/retractor: Expose react internals for E2E testing&quot;&gt;github.com/LiquidLabsGmbH/retractor&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webdriver&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;selenium-webderiverにReact Elementoを受け取れる&lt;code&gt;findElement&lt;/code&gt;を拡張するライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bfred-it/object-fit-images:-adds-support-to-object-fit-to-images-on-ie9,-ie10,-ie11,-edge-and-other-old-browsers.&quot;&gt;bfred-it/object-fit-images: Adds support to object-fit to images on IE9, IE10, IE11, Edge and other old browsers.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/bfred-it/object-fit-images&quot; title=&quot;bfred-it/object-fit-images: Adds support to object-fit to images on IE9, IE10, IE11, Edge and other old browsers.&quot;&gt;github.com/bfred-it/object-fit-images&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;object-fit&lt;/code&gt;をIEでも動かすJavaScriptライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thejameskyle/the-super-tiny-compiler:-possibly-the-smallest-compiler-ever&quot;&gt;thejameskyle/the-super-tiny-compiler: Possibly the smallest compiler ever&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thejameskyle/the-super-tiny-compiler&quot; title=&quot;thejameskyle/the-super-tiny-compiler: Possibly the smallest compiler ever&quot;&gt;github.com/thejameskyle/the-super-tiny-compiler&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptで書かれた小さなCompiler/Transpilerの実装。&lt;br&gt;
コメントがしっかり付けられているのでコンパイルの作りについての学習する向け&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gajus/create-index:-creates-es6-./index.js-file-in-target-directories-that-imports-and-exports-all-sibling-files-and-directories.&quot;&gt;gajus/create-index: Creates ES6 ./index.js file in target directories that imports and exports all sibling files and directories.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gajus/create-index&quot; title=&quot;gajus/create-index: Creates ES6 ./index.js file in target directories that imports and exports all sibling files and directories.&quot;&gt;github.com/gajus/create-index&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ディレクトリを指定すると、そこにあるモジュールを&lt;code&gt;import&lt;/code&gt;した&lt;code&gt;index.js&lt;/code&gt;を作成してくれるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-starter-kit-∙-a-project-template-for-authoring-and-publishing-javascript-libraries&quot;&gt;Babel Starter Kit ∙ A project template for authoring and publishing JavaScript libraries&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kriasoft.com/babel-starter-kit/&quot; title=&quot;Babel Starter Kit ∙ A project template for authoring and publishing JavaScript libraries&quot;&gt;www.kriasoft.com/babel-starter-kit/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babelを使ったStarter Kit&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecss:-home-page&quot;&gt;ECSS: Home Page&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://ecss.io/&quot; title=&quot;ECSS: Home Page&quot;&gt;ecss.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECSS(Enduring CSS)についての書籍&lt;br&gt;
CSSの設計、考え方について扱ってる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://benfrain.com/enduring-css-writing-style-sheets-rapidly-changing-long-lived-projects/&quot; title=&quot;Enduring CSS: writing style sheets for rapidly changing, long-lived projects – Ben Frain&quot;&gt;Enduring CSS: writing style sheets for rapidly changing, long-lived projects – Ben Frain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 04 Apr 2016 19:46:00 +0900</pubDate>
        <link>http://jser.info/2016/04/04/nodejs-5100npm-security-fixsafari-technology-preview/</link>
        <guid isPermaLink="true">http://jser.info/2016/04/04/nodejs-5100npm-security-fixsafari-technology-preview/</guid>
        
        <category>Node.js</category>
        
        <category>npm</category>
        
        <category>security</category>
        
        <category>safari</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-03-29のJS: Safari 9.1、Backbone.jsの近況、Web Performance API</title>
        <description>&lt;p&gt;JSer.info #272 - Backbone.js &lt;a href=&quot;http://backbonejs.org/#changelog&quot; title=&quot;1.3.2&quot;&gt;1.3.2&lt;/a&gt;がリリースされていますが、&lt;br&gt;
&lt;a href=&quot;http://benmccormick.org/2016/03/07/the-sad-state-of-the-backbone-ecosystem/&quot; title=&quot;The Sad State of the Backbone Ecosystem&quot;&gt;The Sad State of the Backbone Ecosystem&lt;/a&gt;という記事では近年のBackbone.js周りのエコシステムについて書かれています。&lt;/p&gt;

&lt;p&gt;Backbone.js本体のPulseや&lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/&quot; title=&quot;Marionette.js&quot;&gt;Marionette.js&lt;/a&gt;、他の関連ライブラリの状況について書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://azu.github.io/slide/2016/jser5years/javascript-information.html&quot; title=&quot;JavaScript情報ってなんだっけ?&quot;&gt;JavaScript情報ってなんだっけ?&lt;/a&gt;でもGitHubリポジトリのPulseを見ることで、状況はある程度分かるという話をしました。&lt;br&gt;
Backbone.jsの場合は枯れているというのもありますが、これ以上大きな進化をするのが難しい状況にも見えます。&lt;/p&gt;

&lt;p&gt;Backbone.jsを使っている人は状況を把握するのに読んでみると面白いかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_1.html&quot; title=&quot;Safari 9.1&quot;&gt;Safari 9.1&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_1.html&quot; title=&quot;Safari 9.1&quot;&gt;Safari 9.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/5989/css-variables-in-webkit/&quot;&gt;CSS Variables in WebKit | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mobilexweb.com/blog/safari-on-ios-9-3-picture-shrink-fit-iphone-se&quot;&gt;Safari on iOS 9.3, Responsive Images, iPhone SE, shrink-to-fit and other new APIs | Breaking the Mobile Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Safari 9.1で使えるようになった機能について上記の記事では解説されています。&lt;br&gt;
CSS Custom Properties、CSS Will-Change、&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;要素、Fast Tapの対応など新しい機能も色々増えています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/kawada_hiroshi/performance-api&quot; title=&quot;ブラウザのPerformance APIの話&quot;&gt;ブラウザのPerformance APIの話&lt;/a&gt;というスライドでは、ブラウザで利用できるパフォーマンス計測のAPIについて書かれています。&lt;/p&gt;

&lt;p&gt;スライド内でも紹介されていますが、Timing APIについては&lt;a href=&quot;https://w3c.github.io/perf-timing-primer/&quot; title=&quot;A Primer for Web Performance Timing APIs&quot;&gt;A Primer for Web Performance Timing APIs&lt;/a&gt;というドキュメントによくまとめられています。&lt;/p&gt;

&lt;p&gt;またパフォーマンス関連して、Google等が主導の&lt;a href=&quot;https://www.ampproject.org/&quot; title=&quot;Accelerated Mobile Pages (AMP)&quot;&gt;Accelerated Mobile Pages (AMP)&lt;/a&gt;に対抗して、&lt;a href=&quot;https://discourse.wicg.io/t/content-performance-policy/1380/1&quot; title=&quot;Content Performance Policy&quot;&gt;Content Performance Policy (CPP)&lt;/a&gt;の提案などがありました。&lt;/p&gt;

&lt;p&gt;CPPはまだアイデアに近い話ですが、この話に加えてSandbox Policyという提案が&lt;a href=&quot;https://github.com/igrigorik&quot; title=&quot;igrigorik&quot;&gt;@igrigorik&lt;/a&gt;から出されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://discourse.wicg.io/t/proposal-sandbox-policy/1414&quot; title=&quot;Proposal: Sandbox Policy - HTML - WICG&quot;&gt;Proposal: Sandbox Policy - HTML - WICG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;これは既存の&lt;code&gt;&amp;lt;iframe sandbox&amp;gt;&lt;/code&gt;を拡張した概念(オプトイン、オプトアウトな違いはある)で、&lt;code&gt;document.write&lt;/code&gt;を禁止するディレクティブの追加などが含まれています。&lt;/p&gt;

&lt;p&gt;どの話も、開発側がある種サブセットのような制限を受け入れてより高速な表示などが出来るようにするためのルールを決めている形です。&lt;/p&gt;

&lt;p&gt;パフォーマンスに興味がある人はこの辺も見てみると面白いかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;backbone.js&quot;&gt;Backbone.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://backbonejs.org/&quot; title=&quot;Backbone.js&quot;&gt;backbonejs.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;backbone.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Backbone. 1.3.2リリース。&lt;br&gt;
&lt;code&gt;findIndex&lt;/code&gt;、&lt;code&gt;findLastIndex&lt;/code&gt;の追加、&lt;code&gt;component.json&lt;/code&gt;のサポートを終了&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/2601&quot; title=&quot;Remove component.json support? · Issue #2601 · marionettejs/backbone.marionette&quot;&gt;Remove component.json support? · Issue #2601 · marionettejs/backbone.marionette&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.0.0-·-mozilla/sweet.js&quot;&gt;Release v1.0.0 · mozilla/sweet.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mozilla/sweet.js/releases/tag/v1.0.0&quot; title=&quot;Release v1.0.0 · mozilla/sweet.js&quot;&gt;github.com/mozilla/sweet.js/releases/tag/v1.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptにhygienic macrosを導入するsweet.js 1.0.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mozilla/sweet.js/pull/485&quot; title=&quot;Redesign by disnet · Pull Request #485 · mozilla/sweet.js&quot;&gt;Redesign by disnet · Pull Request #485 · mozilla/sweet.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.5.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.5.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/03/eslint-v2.5.0-released&quot; title=&quot;ESLint v2.5.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/03/eslint-v2.5.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 2.5.0リリース。&lt;br&gt;
依存してるライブラリもESLintのパッケージに含めて配布できる&lt;code&gt;bundledDependencies&lt;/code&gt;を利用するように、ルールの追加/修正など。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/7018ca26abfa7701debc&quot; title=&quot;ESLint v2.5.0 - Qiita&quot;&gt;ESLint v2.5.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;safari-9.1&quot;&gt;Safari 9.1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/library/mac/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_1.html&quot; title=&quot;Safari 9.1&quot;&gt;developer.apple.com/library/mac/releasenotes/General/WhatsNewInSafari/Articles/Safari_9_1.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari 9.1の変更点について。&lt;br&gt;
&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;要素のサポート、Web Inspectorの改善、Fast Tap、Canvasが&lt;code&gt;imageSmoothingQuality&lt;/code&gt;プロパティ、CSS Custom Propertiesのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-variables-in-webkit-|-webkit&quot;&gt;CSS Variables in WebKit | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/5989/css-variables-in-webkit/&quot; title=&quot;CSS Variables in WebKit | WebKit&quot;&gt;webkit.org/blog/5989/css-variables-in-webkit/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari 9.1でサポートされたCSS Custom Propertiesについての解説&lt;br&gt;
&lt;code&gt;--name&lt;/code&gt;で変数を定義し、CSS内から&lt;code&gt;var(--name)&lt;/code&gt;で参照できる。&lt;br&gt;
JavaScriptからも&lt;code&gt;getPropertyValue/setProperty&lt;/code&gt;で読み書きができる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;safari-on-ios-9.3,-responsive-images,-iphone-se,-shrink-to-fit-and-other-new-apis-|-breaking-the-mobile-web&quot;&gt;Safari on iOS 9.3, Responsive Images, iPhone SE, shrink-to-fit and other new APIs | Breaking the Mobile Web&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mobilexweb.com/blog/safari-on-ios-9-3-picture-shrink-fit-iphone-se&quot; title=&quot;Safari on iOS 9.3, Responsive Images, iPhone SE, shrink-to-fit and other new APIs | Breaking the Mobile Web&quot;&gt;www.mobilexweb.com/blog/safari-on-ios-9-3-picture-shrink-fit-iphone-se&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ios&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;iOS 9.3のSafariについて。&lt;br&gt;
&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;、Fast Tap、CSS Custom Properties、ダイアログの変更、&lt;code&gt;shrink-to-fit&lt;/code&gt;、Remote Inspectorなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdocをランタイムassertに変換するbabelプラグインを書いた-|-web-scratch&quot;&gt;JSDocをランタイムassertに変換するBabelプラグインを書いた | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/03/25/jsdoc-to-assert/&quot; title=&quot;JSDocをランタイムassertに変換するBabelプラグインを書いた | Web Scratch&quot;&gt;efcl.info/2016/03/25/jsdoc-to-assert/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSDocをassertに変換するBabelプラグインについて。&lt;br&gt;
JSDocの型をランタイムassertにすることで、定義されてる型と実際の値が一致しているかを検証できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;shadow-dom-css-cheat-sheet&quot;&gt;Shadow DOM CSS Cheat Sheet&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://robdodson.me/shadow-dom-css-cheat-sheet/&quot; title=&quot;Shadow DOM CSS Cheat Sheet&quot;&gt;robdodson.me/shadow-dom-css-cheat-sheet/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Shadown DOMのCSS(&lt;code&gt;:host&lt;/code&gt;など)、CSS Custom Properties(&lt;code&gt;--var&lt;/code&gt;)についてのチートシート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;status-of-static-typing-in-ecmascript-|-ecmascript-daily&quot;&gt;Status of Static Typing in ECMAScript | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/pages/status-of-static-typing-in-ecmascript/&quot; title=&quot;Status of Static Typing in ECMAScript | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/pages/status-of-static-typing-in-ecmascript/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptにおける静的型関連Proposalのステータスまとめ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gordux.js---the-redux-pattern-in-vanilla.js&quot;&gt;Gordux.js - The redux pattern in vanilla.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://k94n.com/gordux-js-the-redux-pattern-in-vanilla-js&quot; title=&quot;Gordux.js - The redux pattern in vanilla.js&quot;&gt;k94n.com/gordux-js-the-redux-pattern-in-vanilla-js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reduxのようなデータフローを素のJavaScriptで実装してみるという話。&lt;br&gt;
EventにはCustom Eventを使ってPub/Subを行っている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-sad-state-of-the-backbone-ecosystem&quot;&gt;The Sad State of the Backbone Ecosystem&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://benmccormick.org/2016/03/07/the-sad-state-of-the-backbone-ecosystem/&quot; title=&quot;The Sad State of the Backbone Ecosystem&quot;&gt;benmccormick.org/2016/03/07/the-sad-state-of-the-backbone-ecosystem/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;backbone.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Backbone.jsのエコシステムのアクティビティについて。&lt;br&gt;
Backbone.js本体やMarionette、関連するライブラリの状況についてまとめてる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;github---benoitvallon/computer-science-in-javascript:-computer-science-reimplemented-in-javascript&quot;&gt;GitHub - benoitvallon/computer-science-in-javascript: Computer science reimplemented in JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/benoitvallon/computer-science-in-javascript&quot; title=&quot;GitHub - benoitvallon/computer-science-in-javascript: Computer science reimplemented in JavaScript&quot;&gt;github.com/benoitvallon/computer-science-in-javascript&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;algorithm&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでデータ構造やソートアルゴリズムの実装例&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.benoitvallon.com/category/data-structures-in-javascript/&quot; title=&quot;Data Structures in JavaScript posts - Ben&amp;amp;#x27;s Blog&quot;&gt;Data Structures in JavaScript posts - Ben&amp;#x27;s Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sinon-tutorial:-javascript-testing-with-mocks,-spies-&amp;amp;-stubs&quot;&gt;Sinon Tutorial: JavaScript Testing with Mocks, Spies &amp;amp; Stubs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sitepoint.com/sinon-tutorial-javascript-testing-mocks-spies-stubs/&quot; title=&quot;Sinon Tutorial: JavaScript Testing with Mocks, Spies &amp;amp; Stubs&quot;&gt;www.sitepoint.com/sinon-tutorial-javascript-testing-mocks-spies-stubs/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Sinon.jsを使ったテストについて。&lt;br&gt;
Sinon.jsのmock, stub, spyについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;promise-based-functions-should-not-throw-exceptions&quot;&gt;Promise-based functions should not throw exceptions&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2016/03/promise-rejections-vs-exceptions.html&quot; title=&quot;Promise-based functions should not throw exceptions&quot;&gt;www.2ality.com/2016/03/promise-rejections-vs-exceptions.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promiseをベースとしてるasync/awaitを見据えながら、Promiseを返す関数は例外を投げないで&lt;code&gt;reject&lt;/code&gt;したPromiseオブジェクトを返すべきという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/promises-book/#not-throw-use-reject&quot; title=&quot;JavaScript Promiseの本&quot;&gt;JavaScript Promiseの本&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ng-japan-2016-セッション資料まとめ---qiita&quot;&gt;ng-japan 2016 セッション資料まとめ - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/nyamogera/items/b83833d1e15a55d0bb66&quot; title=&quot;ng-japan 2016 セッション資料まとめ - Qiita&quot;&gt;qiita.com/nyamogera/items/b83833d1e15a55d0bb66&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ng-japan 2016の動画とスライドまとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://ngjapan.org/&quot; title=&quot;ng-japan - The Angular conference in Tokyo, Japan (2016/3/21)&quot;&gt;ng-japan - The Angular conference in Tokyo, Japan (2016/3/21)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-case-for-css-modules&quot;&gt;The Case for CSS Modules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://markdalgleish.github.io/presentation-the-case-for-css-modules/&quot; title=&quot;The Case for CSS Modules&quot;&gt;markdalgleish.github.io/presentation-the-case-for-css-modules/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS Modulesについてのスライド&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/css-modules/css-modules&quot; title=&quot;css-modules/css-modules: Documentation about css-modules&quot;&gt;css-modules/css-modules: Documentation about css-modules&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fluent-conf-2016:-jeremy-fairbank---the-rise-of-async-javascript---youtube&quot;&gt;Fluent Conf 2016: Jeremy Fairbank - The rise of async JavaScript - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=QtgR94Q2pt4&quot; title=&quot;Fluent Conf 2016: Jeremy Fairbank - The rise of async JavaScript - YouTube&quot;&gt;www.youtube.com/watch?v=QtgR94Q2pt4&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/awaitがどのように動くのかをPromiseをベースとして解説してる。&lt;br&gt;
エラーハンドリングの動作やasync functionがどのように動くのかを見ていく話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/jfairbank/fluent-conf-rise-of-async-javascript&quot; title=&quot;Fluent Conf: Rise of Async JavaScript // Speaker Deck&quot;&gt;Fluent Conf: Rise of Async JavaScript // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-primer-for-web-performance-timing-apis&quot;&gt;A Primer for Web Performance Timing APIs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://w3c.github.io/perf-timing-primer/&quot; title=&quot;A Primer for Web Performance Timing APIs&quot;&gt;w3c.github.io/perf-timing-primer/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Performance Timing APIの概要をまとめたドキュメント&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/kawada_hiroshi/performance-api&quot; title=&quot;ブラウザのPerformance APIの話&quot;&gt;ブラウザのPerformance APIの話&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpackbin&quot;&gt;WebpackBin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.webpackbin.com/&quot; title=&quot;WebpackBin&quot;&gt;www.webpackbin.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;http://requirebin.com/ のwebpack版。&lt;br&gt;
HTML/CSS/JavaScriptを書いて公開出来るサービス&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;github---ozkxr/match:-an-javascript-library-to-test-json-with-some-nice-features.&quot;&gt;GitHub - ozkxr/match: An JavaScript library to test JSON with some nice features.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ozkxr/match&quot; title=&quot;GitHub - ozkxr/match: An JavaScript library to test JSON with some nice features.&quot;&gt;github.com/ozkxr/match&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSONなどのオブジェクトに対してpredicate関数の結果を使ったmatchライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tusharmath/funjector:-dependency-injection-for-functional-paradigm&quot;&gt;tusharmath/funjector: Dependency injection for functional paradigm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tusharmath/funjector&quot; title=&quot;tusharmath/funjector: Dependency injection for functional paradigm&quot;&gt;github.com/tusharmath/funjector&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;関数に対するDIライブラリ。&lt;br&gt;
部分適応した関数を作り、それに対してinjectできる仕組みを提供する&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pmdartus/snapline:-unleash-your-screenshots-stored-in-chrome-devtool-timeline-files&quot;&gt;pmdartus/snapline: Unleash your screenshots stored in Chrome Devtool timeline files&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pmdartus/snapline&quot; title=&quot;pmdartus/snapline: Unleash your screenshots stored in Chrome Devtool timeline files&quot;&gt;github.com/pmdartus/snapline&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;画像&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome開発者ツールのタイムラインをGIFアニメーション画像に変換出来るツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;majesty-of…-by-alex-kyriakidis-et-al.-[leanpub-pdf/ipad/kindle]&quot;&gt;Majesty Of… by Alex Kyriakidis et al. [Leanpub PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/vuejs/&quot; title=&quot;Majesty Of… by Alex Kyriakidis et al. \[Leanpub PDF/iPad/Kindle\]&quot;&gt;leanpub.com/vuejs/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue.jsについての書籍&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/hootlex/the-majesty-of-vuejs&quot; title=&quot;hootlex/the-majesty-of-vuejs: educational&quot;&gt;hootlex/the-majesty-of-vuejs: educational&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 29 Mar 2016 09:46:00 +0900</pubDate>
        <link>http://jser.info/2016/03/29/safari-91backbonejsweb-performance-api/</link>
        <guid isPermaLink="true">http://jser.info/2016/03/29/safari-91backbonejsweb-performance-api/</guid>
        
        <category>Safari</category>
        
        <category>perf</category>
        
        <category>backbone.js</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-03-23のJS: Chrome 50β、Reactのパフォーマンス調査改善、Node.js compat table</title>
        <description>&lt;p&gt;JSer.info #271 - &lt;a href=&quot;http://blog.chromium.org/2016/03/chrome-50-beta-push-notification.html&quot; title=&quot;Chrome 50 Beta&quot;&gt;Chrome 50 Beta&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;ページを完全に表示するために必要なリソースを先に読み込める&lt;a href=&quot;https://w3c.github.io/preload/&quot; title=&quot;link rel=&amp;amp;#34;preload&amp;amp;#34;&quot;&gt;link rel=&amp;quot;preload&amp;quot;&lt;/a&gt;がサポートされています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt;について詳しくは以下の記事にまとまっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/&quot; title=&quot;Preload: What Is It Good For? – Smashing Magazine&quot;&gt;Preload: What Is It Good For? – Smashing Magazine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、FirefoxやIEには実装されていましたがChromeでも&lt;a href=&quot;http://blog.chromium.org/2016/03/chrome-50-beta-push-notification.html&quot; title=&quot;HTMLCanvasElement.toBlob()&quot;&gt;`HTMLCanvasElement.toBlob()&lt;/a&gt;がサポートされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/uupaa/items/8bc48e904141be9224c4&quot; title=&quot;Chromium で Canvas.toBlob が試験的に利用可能になっています - Qiita&quot;&gt;Chromium で Canvas.toBlob が試験的に利用可能になっています - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.gmo-media.jp/post/141458071484/react-perf-tuning&quot;&gt;Reactを使ったプロダクトのパフォーマンスを改善した話 | GMOメディア エンジニアブログ&lt;/a&gt;という記事ではReactを使ったウェブアプリのパフォーマンス改善方法につえ書かれています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;react-addons-perf&lt;/code&gt;を使い計測し、どこに問題があって、どうやって解決したのかという話が書かれています。&lt;br&gt;
合わせて以下の記事や&lt;a href=&quot;https://facebook.github.io/react/docs/perf.html&quot;&gt;公式のドキュメント&lt;/a&gt;を見るといいかと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://benchling.engineering/deep-dive-react-perf-debugging/&quot; title=&quot;A Deep Dive into React Perf Debugging&quot;&gt;A Deep Dive into React Perf Debugging&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://swizec.com/blog/animating-with-react-redux-and-d3/swizec/6775&quot;&gt;Animating with React, Redux, and d3 | A geek with a hat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://node.green/&quot; title=&quot;Node.js ES2015/ES6 support&quot;&gt;Node.js ES2015/ES6 support&lt;/a&gt;というサイトではNode.jsのバージョン別ECMAScriptサポート状況がまとめられています。&lt;/p&gt;

&lt;p&gt;Node.js版&lt;a href=&quot;http://kangax.github.io/compat-table/es6/&quot; title=&quot;ECMAScript 6 compatibility table&quot;&gt;ECMAScript 6 compatibility table&lt;/a&gt;というのが分かりやすいかもしれません。&lt;/p&gt;

&lt;p&gt;Node.js v6ではES6の大分部がサポートされる予定ですが、v6は&lt;a href=&quot;http://v8project.blogspot.jp/2016/03/v8-release-50.html&quot; title=&quot;V8 5.0&quot;&gt;V8 5.0&lt;/a&gt;のリリースを待ってから公開される予定となっています。&lt;br&gt;
そのため、Node.js v6は4月後半にリリース予定となるようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/5766&quot; title=&quot;Planning for v6 · Issue #5766 · nodejs/node&quot;&gt;Planning for v6 · Issue #5766 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-marko-v3:-from-html-to-html-js-|-marko&quot;&gt;Announcing Marko v3: From HTML to HTML-JS | Marko&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://markojs.com/blog/announcing-marko-v3/&quot; title=&quot;Announcing Marko v3: From HTML to HTML-JS | Marko&quot;&gt;markojs.com/blog/announcing-marko-v3/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;テンプレートエンジンのMarko v3リリース。&lt;br&gt;
HTML-JS syntaxというJavaScriptのように書けるテンプレート表現のサポート、コンパイル時最適化の対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-50-beta:-push-notification-improvements-and-declarative-preload&quot;&gt;Chromium Blog: Chrome 50 Beta: Push notification improvements and declarative preload&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.chromium.org/2016/03/chrome-50-beta-push-notification.html&quot; title=&quot;Chromium Blog: Chrome 50 Beta: Push notification improvements and declarative preload&quot;&gt;blog.chromium.org/2016/03/chrome-50-beta-push-notification.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 50 Betaリリース。&lt;br&gt;
&lt;code&gt;&amp;lt;link rel=&amp;#39;preload&amp;#39;&amp;gt;&lt;/code&gt;、&lt;code&gt;HTMLCanvasElement.toBlob()&lt;/code&gt;のサポート、iframeのsandbox属性値がサポートされているかを判定出来るように、&lt;code&gt;Document.defaultCharset&lt;/code&gt;を削除など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/03/domtokenlist-validation-added-in-chrome-50?hl=en&quot; title=&quot;DOMTokenList Validation Added in Chrome 50 | Web Updates - Google Developers&quot;&gt;DOMTokenList Validation Added in Chrome 50 | Web Updates - Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/&quot; title=&quot;Preload: What Is It Good For? – Smashing Magazine&quot;&gt;Preload: What Is It Good For? – Smashing Magazine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;protractor/changelog.md-at-3.2.0-·-angular/protractor&quot;&gt;protractor/CHANGELOG.md at 3.2.0 · angular/protractor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/angular/protractor/blob/3.2.0/CHANGELOG.md&quot; title=&quot;protractor/CHANGELOG.md at 3.2.0 · angular/protractor&quot;&gt;github.com/angular/protractor/blob/3.2.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Protractor 3.2.0リリース。&lt;br&gt;
TypeScriptサポートのための変更追加、任意のバージョンのWebDriverを指定できるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/protractor/issues/1203#issuecomment-168777170&quot; title=&quot;Typescript support · Issue #1203 · angular/protractor&quot;&gt;Typescript support · Issue #1203 · angular/protractor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-cloud-platform-blog:-node.js-on-google-app-engine-goes-beta&quot;&gt;Google Cloud Platform Blog: Node.js on Google App Engine goes beta&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cloudplatform.googleblog.com/2016/03/Node.js-on-Google-App-Engine-goes-beta.html&quot; title=&quot;Google Cloud Platform Blog: Node.js on Google App Engine goes beta&quot;&gt;cloudplatform.googleblog.com/2016/03/Node.js-on-Google-App-Engine-goes-beta.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;GAEでNode.jsがβサポートされた&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developer-edition-47-–-user-agent-emulation,-popup-debugging-and-more-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Developer Edition 47 – User agent emulation, popup debugging and more ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/03/developer-edition-47-user-agent-emulation-popup-debugging-and-more/&quot; title=&quot;Developer Edition 47 – User agent emulation, popup debugging and more ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/03/developer-edition-47-user-agent-emulation-popup-debugging-and-more/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 47の開発者ツールの新しい機能について。&lt;br&gt;
どういう流れでオブジェクトが保持されているのかを可視化、コンソールへ複数行入力出来るように、Storage InspectorでCache APIをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debugging-with-node&quot;&gt;Debugging with Node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://krasimirtsonev.com/blog/article/debugging-with-node&quot; title=&quot;Debugging with Node&quot;&gt;krasimirtsonev.com/blog/article/debugging-with-node&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsに元々入っている&lt;code&gt;node debug&lt;/code&gt;コマンドの使い方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rebem:-react-♥-bem-—-medium&quot;&gt;reBEM: React ♥ BEM — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@mistadikay/rebem-react-bem-20d875157017&quot; title=&quot;reBEM: React ♥ BEM — Medium&quot;&gt;medium.com/@mistadikay/rebem-react-bem-20d875157017&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactとBEMの組み合わせについて。&lt;br&gt;
reBEM layersという考え方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-introduction-to-jquery&amp;#x27;s-deferred-objects&quot;&gt;An Introduction to jQuery&amp;#x27;s Deferred Objects&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.sitepoint.com/introduction-jquery-deferred-objects/&quot; title=&quot;An Introduction to jQuery&amp;#39;s Deferred Objects&quot;&gt;www.sitepoint.com/introduction-jquery-deferred-objects/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery Deferredの歴史や使い方について&lt;br&gt;
1.x、2.x、3.xそれぞれでの違いについて書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;animating-with-react,-redux,-and-d3-|-a-geek-with-a-hat&quot;&gt;Animating with React, Redux, and d3 | A geek with a hat&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://swizec.com/blog/animating-with-react-redux-and-d3/swizec/6775&quot; title=&quot;Animating with React, Redux, and d3 | A geek with a hat&quot;&gt;swizec.com/blog/animating-with-react-redux-and-d3/swizec/6775&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;d3.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactとD3.jsを組み合わせてアニメーションするComponentを作る話。&lt;br&gt;
Container ComponentにStateが出てくるためReduxで管理している。&lt;br&gt;
パーティクルを表示するなかでどこにボトルネックがあるかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reactを使ったプロダクトのパフォーマンスを改善した話-|-gmoメディア-エンジニアブログ&quot;&gt;Reactを使ったプロダクトのパフォーマンスを改善した話 | GMOメディア エンジニアブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.gmo-media.jp/post/141458071484/react-perf-tuning&quot; title=&quot;Reactを使ったプロダクトのパフォーマンスを改善した話 | GMOメディア エンジニアブログ&quot;&gt;tech.gmo-media.jp/post/141458071484/react-perf-tuning&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentで作成したアプリにのボトルネックの調査方法や改善手法について。&lt;br&gt;
react-addons-perfを使ってプロファイルを見ながらやっていく話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redux-middleware-in-depth---qiita&quot;&gt;Redux Middleware in Depth - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/kuy/items/c6784fe443f1d5c7bbdc&quot; title=&quot;Redux Middleware in Depth - Qiita&quot;&gt;qiita.com/kuy/items/c6784fe443f1d5c7bbdc&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reduxのmiddlewareについて。&lt;br&gt;
middlewareの適応順や実行順により起きる問題や解決方法について詳しく書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-i-write-plain-javascript-modules&quot;&gt;Why I Write Plain JavaScript Modules&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ponyfoo.com/articles/why-i-write-plain-javascript-modules&quot; title=&quot;Why I Write Plain JavaScript Modules&quot;&gt;ponyfoo.com/articles/why-i-write-plain-javascript-modules&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;なぜDOMのライブラリをReact/AngularJSなど特定のフレームワーク向けではなく、PureなDOMライブラリとして書くのかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-browser-apis---1&quot;&gt;The State of Browser APIs - 1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://hwclass.in/2016/03/09/the-next-generation-of-browser-apis/&quot; title=&quot;The State of Browser APIs - 1&quot;&gt;hwclass.in/2016/03/09/the-next-generation-of-browser-apis/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;現在ブラウザで使える色々な新しいAPIについての紹介&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/AurelioDeRosa/HTML5-API-demos&quot; title=&quot;AurelioDeRosa/HTML5-API-demos: A repository where you can find information about many JavaScript and HTML5 APIs.&quot;&gt;AurelioDeRosa/HTML5-API-demos: A repository where you can find information about many JavaScript and HTML5 APIs.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascriptのpromiseオブジェクトについて調べた事-|-quartetcom-tech-blog&quot;&gt;JavaScriptのPromiseオブジェクトについて調べた事 | QUARTETCOM TECH BLOG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.quartetcom.co.jp/2016/03/22/javascript-promise/&quot; title=&quot;JavaScriptのPromiseオブジェクトについて調べた事 | QUARTETCOM TECH BLOG&quot;&gt;tech.quartetcom.co.jp/2016/03/22/javascript-promise/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promiseについて簡潔にまとまった内容。&lt;br&gt;
AngularJSの&lt;code&gt;$q&lt;/code&gt;についても扱われてる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js-es2015/es6-support&quot;&gt;Node.js ES2015/ES6 support&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://node.green/&quot; title=&quot;Node.js ES2015/ES6 support&quot;&gt;node.green/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js版 ECMAScript compat-table&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;your-first-progressive-web-app&quot;&gt;Your first Progressive Web App&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codelabs.developers.google.com/codelabs/your-first-pwapp/&quot; title=&quot;Your first Progressive Web App&quot;&gt;codelabs.developers.google.com/codelabs/your-first-pwapp/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ProgressiveWebApp&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Progressive Web Appについて学ぶワークショップ資料&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gravmatt/force-js:-the-easy-way-to-scroll-and-animate-your-page&quot;&gt;gravmatt/force-js: The easy way to scroll and animate your page&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gravmatt/force-js&quot; title=&quot;gravmatt/force-js: The easy way to scroll and animate your page&quot;&gt;github.com/gravmatt/force-js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;animation&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;要素をアニメーションする依存のないライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;danigb/tonal:-music-tonal-elements-—pitches,-chords,-scales,-keys—-in-javascript&quot;&gt;danigb/tonal: Music tonal elements —pitches, chords, scales, keys— in Javascript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/danigb/tonal&quot; title=&quot;danigb/tonal: Music tonal elements —pitches, chords, scales, keys— in Javascript&quot;&gt;github.com/danigb/tonal&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web MIDI、Web Audio APIを扱う小さなライブラリを集めたmono repo。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;googlechrome/proxy-polyfill:-proxy-object-polyfill&quot;&gt;GoogleChrome/proxy-polyfill: Proxy object polyfill&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/proxy-polyfill&quot; title=&quot;GoogleChrome/proxy-polyfill: Proxy object polyfill&quot;&gt;github.com/GoogleChrome/proxy-polyfill&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6 Proxyのpolyfillライブラリ。&lt;br&gt;
get/set/apply/constructなど一部のtrapのみをサポートしている&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 23 Mar 2016 23:26:00 +0900</pubDate>
        <link>http://jser.info/2016/03/23/chrom50beta-react-perf-node-compat-table/</link>
        <guid isPermaLink="true">http://jser.info/2016/03/23/chrom50beta-react-perf-node-compat-table/</guid>
        
        <category>Chrome</category>
        
        <category>React</category>
        
        <category>perf</category>
        
        <category>Node.js</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-03-17のJS: React.js v15.0 RC、WebAssembly、最近のJavaScriptツール/ライブラリ</title>
        <description>&lt;p&gt;JSer.info #270 - &lt;a href=&quot;https://facebook.github.io/react/blog/2016/03/16/react-v15-rc2.html&quot; title=&quot;React v15.0 Release Candidate 2&quot;&gt;React v15.0 RC2&lt;/a&gt;がリリースされています。&lt;br&gt;
RC2は&lt;a href=&quot;https://github.com/facebook/react/issues/6246&quot;&gt;RC1で見つかったバグ&lt;/a&gt;やSVGに関する変更がrevertされています。&lt;/p&gt;

&lt;p&gt;RC1を含め変更点については下記の記事にまとまっているので、Reactを使っている人は見ておくといいかと思います。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.koba04.com/post/2016/03/09/react-js-v15-changes/&quot; title=&quot;React.js v15.0 changes - blog.koba04.com&quot;&gt;React.js v15.0 changes - blog.koba04.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;MSEdge(&lt;a href=&quot;https://github.com/microsoft/chakracore&quot; title=&quot;ChakraCore&quot;&gt;ChakraCore&lt;/a&gt;)、Firefox、Chrome(V8)からそれぞれ&lt;a href=&quot;http://webassembly.github.io/&quot; title=&quot;WebAssembly&quot;&gt;WebAssembly&lt;/a&gt;を試験的にサポートしたというアナウンスがされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2016/03/experimental-support-for-webassembly.html&quot;&gt;V8 JavaScript Engine: Experimental support for WebAssembly in V8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/03/a-webassembly-milestone/&quot;&gt;A WebAssembly Milestone: Experimental Support in Multiple Browsers ★ Mozilla Hacks – the Web developer blog&lt;/a&gt; (&lt;a href=&quot;https://www.mozilla.jp/blog/entry/10539/&quot;&gt;翻訳&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/03/15/previewing-webassembly-experiments/&quot;&gt;Previewing WebAssembly experiments in Microsoft Edge | Microsoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WebKitは、特にアナウンスはありませんが&lt;a href=&quot;https://webkit.org/status/#specification-webassembly&quot; title=&quot;WebKit Feature Status | WebKit&quot;&gt;ステータスは開発中&lt;/a&gt;で&lt;a href=&quot;http://trac.webkit.org/browser/trunk/Source/JavaScriptCore/wasm&quot;&gt;テスト実装&lt;/a&gt;をしています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-and-opinions/state-of-the-art-javascript-in-2016-ab67fc68eb0b&quot; title=&quot;State of the Art JavaScript in 2016 — JavaScript and Opinions — Medium&quot;&gt;State of the Art JavaScript in 2016 — JavaScript and Opinions — Medium&lt;/a&gt;という記事では最近のライブラリやツールの定番的なものについてまとめられています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you don’t need it, don’t use it&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;という一言が表しているように、全ての人がこれらを必要になるわけでもないということも書かれています。&lt;/p&gt;

&lt;p&gt;最近は、このようなツールを使う流れから&lt;a href=&quot;http://www.2ality.com/2016/02/js-fatigue-fatigue.html&quot; title=&quot;JavaScript fatigue&quot;&gt;JavaScript fatigue fatigue &lt;/a&gt;が話題となったりしていました。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don’t try to know everything&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;全てを試す必要はなかったり、&lt;a href=&quot;https://medium.com/javascript-inside/learn-the-concepts-part-1-418952d968cb&quot;&gt;ツールを使わないでReactを始める方法&lt;/a&gt;など色々なやり方や意見もあったりします。&lt;/p&gt;

&lt;p&gt;自分なりに疲れないやり方で行うのがいいと思います。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-5.0&quot;&gt;V8 JavaScript Engine: V8 Release 5.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/03/v8-release-50.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.0&quot;&gt;v8project.blogspot.com/2016/03/v8-release-50.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8 5.0リリース。&lt;br&gt;
RegExp Unicode flagのサポート、RegExpのwell-known symbolsをサポート、&lt;code&gt;Object.keys()&lt;/code&gt;やrest parameterの速度改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.7.0-·-babel/babel&quot;&gt;Release v6.7.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.7.0&quot; title=&quot;Release v6.7.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.7.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel v6.7.0リリース。&lt;br&gt;
async/await周りのバグ修正、内部的な変更してAST上に存在したキャッシュをWeakMapベースで保存するように変更。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node/changelog.md-at-v5.8.0-·-nodejs/node&quot;&gt;node/CHANGELOG.md at v5.8.0 · nodejs/node&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodejs/node/blob/v5.8.0/CHANGELOG.md&quot; title=&quot;node/CHANGELOG.md at v5.8.0 · nodejs/node&quot;&gt;github.com/nodejs/node/blob/v5.8.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 5.8.0リリース。&lt;br&gt;
&lt;code&gt;path.normalize&lt;/code&gt;のレグレッションを修正、&lt;code&gt;util.format&lt;/code&gt;のパフォーマンス改善。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/5585&quot; title=&quot;Node 5.7.1 path.normalize broken · Issue #5585 · nodejs/node&quot;&gt;Node 5.7.1 path.normalize broken · Issue #5585 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/5360&quot; title=&quot;util: improve util.format performance by evanlucas · Pull Request #5360 · nodejs/node&quot;&gt;util: improve util.format performance by evanlucas · Pull Request #5360 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v5.9.0-(stable)-|-node.js&quot;&gt;Node v5.9.0 (Stable) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v5.9.0/&quot; title=&quot;Node v5.9.0 (Stable) | Node.js&quot;&gt;nodejs.org/en/blog/release/v5.9.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 5.9.0リリース。&lt;br&gt;
&lt;code&gt;vm&lt;/code&gt;モジュールのメモリ使用量の削減、&lt;code&gt;zlib&lt;/code&gt;モジュールがconcatenated archivesをサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1.5.0-·-testem/testem&quot;&gt;Release v1.5.0 · testem/testem&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/testem/testem/releases/tag/v1.5.0&quot; title=&quot;Release v1.5.0 · testem/testem&quot;&gt;github.com/testem/testem/releases/tag/v1.5.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;testem v1.5.0リリース。&lt;br&gt;
複数のTest Pageを指定するとparallel実行できるように、Mochaのテストにかかった時間を表示できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react.js-v15.0-changes---blog.koba04.com&quot;&gt;React.js v15.0 changes - blog.koba04.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.koba04.com/post/2016/03/09/react-js-v15-changes/&quot; title=&quot;React.js v15.0 changes - blog.koba04.com&quot;&gt;blog.koba04.com/post/2016/03/09/react-js-v15-changes/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React.js v15.0 RCの変更点まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-webassembly-milestone:-experimental-support-in-multiple-browsers-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;A WebAssembly Milestone: Experimental Support in Multiple Browsers ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/03/a-webassembly-milestone/&quot; title=&quot;A WebAssembly Milestone: Experimental Support in Multiple Browsers ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/03/a-webassembly-milestone/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;status&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebAssemblyの仕様、ブラウザの実装のステータスについて。&lt;br&gt;
最初のbinary formatドラフト仕様がでており、Firefox、Chrome、ChackraCoreのNightlyで試験的な実装がされている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://v8project.blogspot.jp/2016/03/experimental-support-for-webassembly.html&quot; title=&quot;V8 JavaScript Engine: Experimental support for WebAssembly in V8&quot;&gt;V8 JavaScript Engine: Experimental support for WebAssembly in V8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/03/15/previewing-webassembly-experiments/&quot; title=&quot;Previewing WebAssembly experiments in Microsoft Edge | Microsoft Edge Dev Blog&quot;&gt;Previewing WebAssembly experiments in Microsoft Edge | Microsoft Edge Dev Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-開発ツールを使った-service-workers-と-push-のデバッグ-|-mozilla-developer-street-(modest)&quot;&gt;Firefox 開発ツールを使った Service Workers と Push のデバッグ | Mozilla Developer Street (modest)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.mozilla.jp/2016/03/debugging-service-workers-and-push-with-firefox-devtools/&quot; title=&quot;Firefox 開発ツールを使った Service Workers と Push のデバッグ | Mozilla Developer Street (modest)&quot;&gt;dev.mozilla.jp/2016/03/debugging-service-workers-and-push-with-firefox-devtools/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;FirefoxでのService WorkerとPush Notificationsのデバッグについて。&lt;br&gt;
&lt;code&gt;about:debugging&lt;/code&gt;というデバッグのダッシュボード画面についても書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;state-of-the-art-javascript-in-2016-—-javascript-and-opinions-—-medium&quot;&gt;State of the Art JavaScript in 2016 — JavaScript and Opinions — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-and-opinions/state-of-the-art-javascript-in-2016-ab67fc68eb0b&quot; title=&quot;State of the Art JavaScript in 2016 — JavaScript and Opinions — Medium&quot;&gt;medium.com/javascript-and-opinions/state-of-the-art-javascript-in-2016-ab67fc68eb0b&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;最近のJavaScriptにおける主流となったライブラリやツールについて。&lt;br&gt;
React、Redux、Babel、ESLint、npm、webpack、mochaなどのテストツールなどや人について&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you don’t need it, don’t use it&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;と書かれているように全てに対するベストではないという話も書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learning-react-without-using-react-part-1-—-javascript-inside-—-medium&quot;&gt;Learning React Without Using React Part 1 — JavaScript Inside — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-inside/learn-the-concepts-part-1-418952d968cb&quot; title=&quot;Learning React Without Using React Part 1 — JavaScript Inside — Medium&quot;&gt;medium.com/javascript-inside/learn-the-concepts-part-1-418952d968cb&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ツールなどは使わないで学ぶReactのチュートリアル。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webpack-ftw!!!!&quot;&gt;Webpack FTW!!!!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://k94n.com/webpack-ftw&quot; title=&quot;Webpack FTW!!!!&quot;&gt;k94n.com/webpack-ftw&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackはどんなことができるのかというのをわかりやすく簡単に紹介してる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/k9ordon/webpack-ftw&quot; title=&quot;Webpack FTW // Speaker Deck&quot;&gt;Webpack FTW // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;特集：c#×javascript：ecmascriptの最新情報を得るには-(1/2)---＠it&quot;&gt;特集：C#×JavaScript：ECMAScriptの最新情報を得るには (1/2) - ＠IT&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.atmarkit.co.jp/ait/articles/1603/11/news042.html&quot; title=&quot;特集：C#×JavaScript：ECMAScriptの最新情報を得るには (1/2) - ＠IT&quot;&gt;www.atmarkit.co.jp/ait/articles/1603/11/news042.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptの仕様策定のプロセスやリソースがどこにあるかがまとまってる記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jest-|-&amp;quot;javascript-unit-testing-performance&amp;quot;&quot;&gt;Jest | &amp;quot;JavaScript Unit Testing Performance&amp;quot;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/jest/blog/2016/03/11/javascript-unit-testing-performance.html&quot; title=&quot;Jest | &amp;quot;JavaScript Unit Testing Performance&amp;quot;&quot;&gt;facebook.github.io/jest/blog/2016/03/11/javascript-unit-testing-performance.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;テストフレームワークのJestが実行時間を改善するためにやっていることについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-proposal-for-weak-references:-weakref&quot;&gt;JavaScript Proposal for weak references: WeakRef&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ponyfoo.com/articles/weakref&quot; title=&quot;JavaScript Proposal for weak references: WeakRef&quot;&gt;ponyfoo.com/articles/weakref&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;WeakRef&lt;/code&gt; Proposalについての解説。&lt;br&gt;
WeakMapと同じようにWeakな扱いだが、WeakMapと違いGCで回収された時に呼ばれる&lt;code&gt;executor&lt;/code&gt;を指定できる。(WeakMap/Setは回収されたタイミングを知ることができない)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-weakrefs/blob/master/specs/weakrefs.md&quot; title=&quot;proposal-weakrefs/weakrefs.md at master · tc39/proposal-weakrefs&quot;&gt;proposal-weakrefs/weakrefs.md at master · tc39/proposal-weakrefs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js-buffer-api-changes-—-medium&quot;&gt;Node.js Buffer API Changes — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@jasnell/node-js-buffer-api-changes-3c21f1048f97&quot; title=&quot;Node.js Buffer API Changes — Medium&quot;&gt;medium.com/@jasnell/node-js-buffer-api-changes-3c21f1048f97&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js v6で予定されているBuffer APIの変更についての解説&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fluent-conference-2016-(san-francisco,-ca)---youtube&quot;&gt;Fluent Conference 2016 (San Francisco, CA) - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=9UYoKyuFXrM&amp;amp;amp;list=PL055Epbe6d5bQubu5EWf_kUNA3ef_qbmL&quot; title=&quot;Fluent Conference 2016 (San Francisco, CA) - YouTube&quot;&gt;www.youtube.com/watch?v=9UYoKyuFXrM&amp;amp;list=PL055Epbe6d5bQubu5EWf_kUNA3ef_qbmL&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fluent Conference 2016の動画が公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;postcss.parts-|-a-searchable-catalog-of-postcss-plugins&quot;&gt;PostCSS.parts | A searchable catalog of PostCSS plugins&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://postcss.parts/&quot; title=&quot;PostCSS.parts | A searchable catalog of PostCSS plugins&quot;&gt;postcss.parts/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;PostCSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;検索&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PostCSSのカタログサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-inversifyjs-2.0&quot;&gt;Introducing InversifyJS 2.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.wolksoftware.com/introducing-inversify-2&quot; title=&quot;Introducing InversifyJS 2.0&quot;&gt;blog.wolksoftware.com/introducing-inversify-2&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Inversion of control (IoC)コンテナーのTypeScript向けライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rajasegar/compack:-an-awesome-bundler-for-web-components&quot;&gt;rajasegar/compack: An awesome bundler for Web Components&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rajasegar/compack&quot; title=&quot;rajasegar/compack: An awesome bundler for Web Components&quot;&gt;github.com/rajasegar/compack&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsのscaffoldingとbundleするツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eanplatter/enclave:-a-simpler-way-to-compile-react-applications-http://enclave.js.org&quot;&gt;eanplatter/enclave: A simpler way to compile React applications http://enclave.js.org&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eanplatter/enclave&quot; title=&quot;eanplatter/enclave: A simpler way to compile React applications http://enclave.js.org&quot;&gt;github.com/eanplatter/enclave&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;して&lt;code&gt;npm start&lt;/code&gt;するだけで、React+Babelな環境を動かせるブートストラップ的なツール&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 17 Mar 2016 22:03:00 +0900</pubDate>
        <link>http://jser.info/2016/03/17/react-webassembly-art-of-javascript/</link>
        <guid isPermaLink="true">http://jser.info/2016/03/17/react-webassembly-art-of-javascript/</guid>
        
        <category>React</category>
        
        <category>WebAssembly</category>
        
        <category>JavaScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-03-08のJS: React v15.0 RC、Reactパフォーマンス調査、DDD</title>
        <description>&lt;p&gt;JSer.info #269 - React v15.0 RC1がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/03/07/react-v15-rc1.html&quot; title=&quot;React v15.0 Release Candidate | React&quot;&gt;React v15.0 Release Candidate | React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html&quot; title=&quot;New Versioning Scheme&quot;&gt;New Versioning Scheme&lt;/a&gt;で書かれているように、Reactの次のメジャーバージョンはv0.14 -&amp;gt; v15.0となります。&lt;/p&gt;

&lt;p&gt;v15.0 RC1では&lt;code&gt;data-reactid&lt;/code&gt;がクライアントサイドのレンダリングではなくなる、&lt;code&gt;null&lt;/code&gt;をコメントとしてレンダリングするようになるなどレンダリングに関する変更がおこなわれています。&lt;br&gt;
&lt;a href=&quot;http://facebook.github.io/react/blog/2015/10/07/react-v0.14.html&quot; title=&quot;React v0.14&quot;&gt;React v0.14&lt;/a&gt;で&lt;code&gt;react&lt;/code&gt;と&lt;code&gt;react-dom&lt;/code&gt;にパッケージが分けられ、それぞれでメソッドも分離されたため非推奨となっていたメソッドがありました。&lt;/p&gt;

&lt;p&gt;v15.0ではこれらの非推奨メソッドの削除や警告メッセージの改善などが行われています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://benchling.engineering/performance-engineering-with-react/&quot; title=&quot;Performance Engineering with React&quot;&gt;Performance Engineering with React&lt;/a&gt;という記事ではReactを使ったアプリのボトルネック調査方法について書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/docs/perf.html&quot; title=&quot;Performance Tools | React&quot;&gt;Performance Tools | React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;react-addons-perf&lt;/code&gt;を使った計測方法や、どのように改善するかなどについて書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/armorik83/da-xing-hurontoendokai-fa-niokerutypescripttoddd&quot; title=&quot;大型フロントエンド開発におけるTypeScriptとDDD // Speaker Deck&quot;&gt;大型フロントエンド開発におけるTypeScriptとDDD // Speaker Deck&lt;/a&gt;というスライドでは、大規模なアプリケーションにおける設計や考え方、悩みどころについて書かれています。&lt;/p&gt;

&lt;p&gt;Viewとドメインロジックを切り離すための考え方やTypeScriptとDDDについて書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://labs.gree.jp/blog/2013/12/9330/&quot; title=&quot;SNSチームでのドメイン駆動設計の実践 | GREE Engineers&amp;amp;#39; Blog&quot;&gt;SNSチームでのドメイン駆動設計の実践 | GREE Engineers&amp;#39; Blog&lt;/a&gt;なども合わせてみるといいかもしれませんが、フロントエンドと呼ばれる分野でもこういう話が増えてきているようです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/yukieen/hurontoendohadddfalsemeng-wojian-ruka&quot; title=&quot;フロントエンドはDDDの夢を見るか // Speaker Deck&quot;&gt;フロントエンドはDDDの夢を見るか // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-v15.0-release-candidate-|-react&quot;&gt;React v15.0 Release Candidate | React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/03/07/react-v15-rc1.html&quot; title=&quot;React v15.0 Release Candidate | React&quot;&gt;facebook.github.io/react/blog/2016/03/07/react-v15-rc1.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React v15.0 RC1リリース。&lt;br&gt;
&lt;code&gt;data-reactid&lt;/code&gt;がクライアントサイドのレンダリングではなくなる、&lt;code&gt;null&lt;/code&gt;をコメントとしてレンダリングするようになる。&lt;br&gt;
また非推奨となっていたメソッドが&lt;code&gt;react&lt;/code&gt;と&lt;code&gt;react-dom&lt;/code&gt;それぞれから削除された。&lt;br&gt;
また、警告メッセージの改善などが行われている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.3.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.3.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/03/eslint-v2.3.0-released&quot; title=&quot;ESLint v2.3.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/03/eslint-v2.3.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint v2.3.0リリース。&lt;br&gt;
ルールのoff/wan/errorを0,1,2という数字ではなく文字列で指定出来るように、ES2016で追加される&lt;code&gt;**&lt;/code&gt;の対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-engineering-with-react&quot;&gt;Performance Engineering with React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://benchling.engineering/performance-engineering-with-react/&quot; title=&quot;Performance Engineering with React&quot;&gt;benchling.engineering/performance-engineering-with-react/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactにおけるパフォーマンス調査の手法やどのようにボトルネックを見つけるかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;僕がネイティブな-css-変数にわくわくする理由&quot;&gt;僕がネイティブな CSS 変数にわくわくする理由&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://terkel.github.io/why-im-excited-about-native-css-variables/&quot; title=&quot;僕がネイティブな CSS 変数にわくわくする理由&quot;&gt;terkel.github.io/why-im-excited-about-native-css-variables/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS Custom Propertyについて書かれた&amp;quot;Why I&amp;#39;m Excited About Native CSS Variables&amp;quot;の翻訳。&lt;br&gt;
コンポーネント名接頭辞にした変数名を使うという命名規則についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://terkel.github.io/why-im-excited-about-native-css-variables/&quot; title=&quot;僕がネイティブな CSS 変数にわくわくする理由&quot;&gt;僕がネイティブな CSS 変数にわくわくする理由&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;high-performance-web-worker-messages-|-read-the-tea-leaves&quot;&gt;High-performance Web Worker messages | Read the Tea Leaves&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://nolanlawson.com/2016/02/29/high-performance-web-worker-messages/&quot; title=&quot;High-performance Web Worker messages | Read the Tea Leaves&quot;&gt;nolanlawson.com/2016/02/29/high-performance-web-worker-messages/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;単純なデータ転送についてのWeb Workerのパフォーマンステスト。&lt;br&gt;
- &lt;code&gt;JSON.stringify()&lt;/code&gt;/&lt;code&gt;JSON.parse()&lt;/code&gt;の利用&lt;br&gt;
- 一部のみ適応&lt;br&gt;
- 生オブジェクトのまま&lt;br&gt;
をそれぞれ比較したもの&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2015/07/how-fast-are-web-workers/&quot; title=&quot;How fast are web workers? ★ Mozilla Hacks – the Web developer blog&quot;&gt;How fast are web workers? ★ Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://glebbahmutov.com/blog/fast-legoization/&quot; title=&quot;Fast legoization | Better world by better software&quot;&gt;Fast legoization | Better world by better software&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fast-legoization-|-better-world-by-better-software&quot;&gt;Fast legoization | Better world by better software&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://glebbahmutov.com/blog/fast-legoization/&quot; title=&quot;Fast legoization | Better world by better software&quot;&gt;glebbahmutov.com/blog/fast-legoization/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Workerを使って画像データを効率よく処理するテクニックについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;なぜ絵文字を含む文字を1文字ずつに分けるのにarray.fromだけで十分なのか？---qiita&quot;&gt;なぜ絵文字を含む文字を1文字ずつに分けるのにArray.fromだけで十分なのか？ - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/alucky0707/items/697598e49ff56191c139&quot; title=&quot;なぜ絵文字を含む文字を1文字ずつに分けるのにArray.fromだけで十分なのか？ - Qiita&quot;&gt;qiita.com/alucky0707/items/697598e49ff56191c139&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;split(&amp;quot;&amp;quot;)&lt;/code&gt;だと絵文字などでサロゲートペアの問題が起きるため、ES6で追加された&lt;code&gt;Array.from&lt;/code&gt;などを使うことで正しく扱えるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-astを始める最初の一歩-|-web-scratch&quot;&gt;JavaScript ASTを始める最初の一歩 | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/03/06/ast-first-step/&quot; title=&quot;JavaScript ASTを始める最初の一歩 | Web Scratch&quot;&gt;efcl.info/2016/03/06/ast-first-step/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのASTを扱ったツールを書きたい人が最初に把握しておくといい部分についてのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;data-structures-in-javascript---ben&amp;#x27;s-blog&quot;&gt;Data structures in JavaScript - Ben&amp;#x27;s Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/&quot; title=&quot;Data structures in JavaScript - Ben&amp;#39;s Blog&quot;&gt;blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アルゴリズム&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでデータ構造やアルゴリズムについて学ぶシリーズ記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-the-webvr-1.0-api-proposal-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Introducing the WebVR 1.0 API Proposal ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/03/introducing-the-webvr-1-0-api-proposal/&quot; title=&quot;Introducing the WebVR 1.0 API Proposal ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/03/introducing-the-webvr-1-0-api-proposal/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VR&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebVR 1.0 APIについての解説記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecma262のiteration-protocolsで遅延評価するiteratorを作る---snyk_s-log&quot;&gt;ECMA262のIteration protocolsで遅延評価するIteratorを作る - snyk_s log&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://saneyukis.hatenablog.com/entry/2016/03/04/030337&quot; title=&quot;ECMA262のIteration protocolsで遅延評価するIteratorを作る - snyk\_s log&quot;&gt;saneyukis.hatenablog.com/entry/2016/03/04/030337&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScriptの&lt;code&gt;Symbol.iterator&lt;/code&gt;を使い遅延評価出来るコレクション処理を行うという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-transducers-in-javascript-—-medium&quot;&gt;Understanding Transducers in JavaScript — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@roman01la/understanding-transducers-in-javascript-3500d3bd9624&quot; title=&quot;Understanding Transducers in JavaScript — Medium&quot;&gt;medium.com/@roman01la/understanding-transducers-in-javascript-3500d3bd9624&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Transformer protocolを実装したコレクション処理を実装することで、一度の処理で同時に複数の変換を行うことが出来るようにする仕組みであるTransducersについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cognitect-labs/transducers-js&quot; title=&quot;cognitect-labs/transducers-js: Transducers for JavaScript&quot;&gt;cognitect-labs/transducers-js: Transducers for JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;matthewmueller/28kb-react-redux-routing:-react-+-redux-+-routing-stack-for-just-28kb&quot;&gt;matthewmueller/28kb-react-redux-routing: React + Redux + Routing Stack for just 28kb&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/matthewmueller/28kb-react-redux-routing&quot; title=&quot;matthewmueller/28kb-react-redux-routing: React + Redux + Routing Stack for just 28kb&quot;&gt;github.com/matthewmueller/28kb-react-redux-routing&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React + Redux + ルーティングというよくある構成を28kbで実現するというコンセプトリポジトリ。&lt;br&gt;
Reactの代わりにPreact、Reduxの代わりにラップしたSocrates、ルーティングはenroute + Reduxミドルウェアを使っている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;大型フロントエンド開発におけるtypescriptとddd-//-speaker-deck&quot;&gt;大型フロントエンド開発におけるTypeScriptとDDD // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/armorik83/da-xing-hurontoendokai-fa-niokerutypescripttoddd&quot; title=&quot;大型フロントエンド開発におけるTypeScriptとDDD // Speaker Deck&quot;&gt;speakerdeck.com/armorik83/da-xing-hurontoendokai-fa-niokerutypescripttoddd&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DDD&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;大規模なクライアントサイドを書く場合の構造やテスト、環境についてのスライド。&lt;br&gt;
TypeScriptでちゃんとしたドメインモデルを構築し、Viewのレイヤーとの分離を図る仕組みの作り方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react.js-conf-2016---steve-mcguire---performance-without-compromise---youtube&quot;&gt;React.js Conf 2016 - Steve McGuire - Performance Without Compromise - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=kDARP5QZ6nU&amp;amp;amp;list=PLb0IAmt7-GS0M8Q95RIc2lOM6nc77q1IY&amp;amp;amp;index=28&quot; title=&quot;React.js Conf 2016 - Steve McGuire - Performance Without Compromise - YouTube&quot;&gt;www.youtube.com/watch?v=kDARP5QZ6nU&amp;amp;list=PLb0IAmt7-GS0M8Q95RIc2lOM6nc77q1IY&amp;amp;index=28&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Netflixのクライアントサイドのアーキテクチャについて。&lt;br&gt;
mixinじゃなくて高階関数でレイヤーを表現、宣言的にするためのルールとしての&amp;quot;No refs&amp;quot;。&lt;br&gt;
またパフォーマンス面では、Transducersの話、静的なpropと動的なpropは分けることでの最適化についてなど。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;designing-in-react:-why-and-how-//-speaker-deck&quot;&gt;Designing in React: Why and How // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/fand/designing-in-react-why-and-how&quot; title=&quot;Designing in React: Why and How // Speaker Deck&quot;&gt;speakerdeck.com/fand/designing-in-react-why-and-how&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React語圏でどういう試みがあって何を解決しようとしてたかという話&lt;br&gt;
CSS、アニメーションについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gulp:-the-good-parts-//-speaker-deck&quot;&gt;gulp: The Good Parts // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/jmblog/gulp-the-good-parts&quot; title=&quot;gulp: The Good Parts // Speaker Deck&quot;&gt;speakerdeck.com/jmblog/gulp-the-good-parts&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;gulp&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;gulpのプラクティスについて。&lt;br&gt;
タスクの分割、設定の外部ファイル化、v4を見据えたタスクの書き方、v4の変更点について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;code-cartoons-—-medium&quot;&gt;Code Cartoons — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://code-cartoons.com/&quot; title=&quot;Code Cartoons — Medium&quot;&gt;code-cartoons.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Cartoonsで学ぶFlux、Redux、Relayなどのデータコントロールフロー&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rebass&quot;&gt;Rebass&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://jxnblk.com/rebass/&quot; title=&quot;Rebass&quot;&gt;jxnblk.com/rebass/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactを使ったUIライブラリ。&lt;br&gt;
ステートレスコンポーネントとして実装されている。&lt;br&gt;
コンポーネントづくりの参考になりそう&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tryolabs/fetch-it:-an-enhanced-http-client-based-on-fetch.&quot;&gt;tryolabs/fetch-it: An enhanced HTTP client based on fetch.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tryolabs/fetch-it&quot; title=&quot;tryolabs/fetch-it: An enhanced HTTP client based on fetch.&quot;&gt;github.com/tryolabs/fetch-it&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Fetch APIをベースにしたHTTPクライアントライブラリ。&lt;br&gt;
middlewareで処理を追加できる仕組みを持っている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.tryolabs.com/2016/03/02/fetch-it-enhanced-http-client-based-on-fetch/&quot; title=&quot;fetch-it: enhanced HTTP client based on fetch | Tryolabs | Blog&quot;&gt;fetch-it: enhanced HTTP client based on fetch | Tryolabs | Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cognitect-labs/transducers-js:-transducers-for-javascript&quot;&gt;cognitect-labs/transducers-js: Transducers for JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cognitect-labs/transducers-js&quot; title=&quot;cognitect-labs/transducers-js: Transducers for JavaScript&quot;&gt;github.com/cognitect-labs/transducers-js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Transformer protocolを実装したコレクション処理を実装することで、一度の処理で同時に複数の変換を行うことが出来るようにする仕組みとライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;uber-common/react-vis&quot;&gt;uber-common/react-vis&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/uber-common/react-vis&quot; title=&quot;uber-common/react-vis&quot;&gt;github.com/uber-common/react-vis&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;グラフ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Uberのグラフやビジュアライズ系のReact Componentライブラリ。&lt;br&gt;
棒グラフ、折れ線グラフ、円グラフ、テーブル、ツリーマップなど色々な表現が用意されてる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;quick-browserify-by-sandeep-kumar-patel-[leanpub-pdf/ipad/kindle]&quot;&gt;Quick Browserify by Sandeep Kumar Patel [Leanpub PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/browserify&quot; title=&quot;Quick Browserify by Sandeep Kumar Patel \[Leanpub PDF/iPad/Kindle\]&quot;&gt;leanpub.com/browserify&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Browserifyについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 08 Mar 2016 23:49:00 +0900</pubDate>
        <link>http://jser.info/2016/03/08/react15.0rc-perf-ddd/</link>
        <guid isPermaLink="true">http://jser.info/2016/03/08/react15.0rc-perf-ddd/</guid>
        
        <category>JavaScript</category>
        
        <category>DDD</category>
        
        <category>React</category>
        
        <category>Perf</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-03-03のJS: Ember.js LTS、ECMA i18n API 3rd Edition RC、jQuery 3での変更点</title>
        <description>&lt;p&gt;JSer.info #268 - &lt;a href=&quot;http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html&quot; title=&quot;Ember.js - Announcing Ember&amp;amp;#39;s First LTS Release&quot;&gt;Ember.js - Announcing Ember&amp;#39;s First LTS Release&lt;/a&gt;ではEmber.jsのLTS(Long Term Support)について書かれています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/02/29/ember-2-4-released.html&quot; title=&quot;Ember.js 2.4&quot;&gt;Ember.js 2.4&lt;/a&gt;が最初のLTSリリースとなります。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://emberjs.com/images/blog/2016-02/Releases@3x.svg&quot; alt=&quot;LTS&quot;&gt;&lt;/p&gt;

&lt;p&gt;LTSでは36週の間バグ修正のリリースが行われ、60週間はセキュリティパッチのリリースが行われるリリースサイクルになります。&lt;br&gt;
つまりEmber.js 2.4は2016年11月までバグ修正が行われ、2017年4月までセキュリティリリースが継続される形になります。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;ECMA-402ことECMAScript i18n APIの3rd EditionがRCリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://tc39.github.io/ecma402/&quot; title=&quot;ECMAScript® 2016 Internationalization API Specification (3rd Edition)&quot;&gt;ECMAScript® 2016 Internationalization API Specification (3rd Edition)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma402/releases/tag/3.0-rc-1&quot; title=&quot;Release 3rd Edition - Release Candidate · tc39/ecma402&quot;&gt;Release 3rd Edition - Release Candidate · tc39/ecma402&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/Intl&quot; title=&quot;Intl オブジェクト&quot;&gt;Intl オブジェクト&lt;/a&gt;と呼ばれる国際化関連のAPIを定めている仕様です。&lt;/p&gt;

&lt;p&gt;2nd Editionからのユーザーにとっての違いは&lt;a href=&quot;http://tc39.github.io/ecma402/#sec-intl.getcanonicallocales&quot; title=&quot;Intl.getCanonicalLocales (locales)&quot;&gt;&lt;code&gt;Intl.getCanonicalLocales (locales)&lt;/code&gt;&lt;/a&gt;のAPIが増えただけぐらいになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/rwaldron/tc39-notes/blob/master/es7/2015-11/nov-19.md#abstract-locale-operations&quot;&gt;tc39-notes/nov-19.md at master · rwaldron/tc39-notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma402/pull/78&quot;&gt;Exposing &lt;code&gt;CanonicalizeLocaleList()&lt;/code&gt; abstract operation via &lt;code&gt;Intl.getCanonicalLocales()&lt;/code&gt; by caridy · Pull Request #78 · tc39/ecma402&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ECMA-402もECMAScript(ECMA-262)と同じく&lt;a href=&quot;https://tc39.github.io/process-document/&quot; title=&quot;The TC39 Process&quot;&gt;The TC39 Process&lt;/a&gt;を採用しています。&lt;br&gt;
そのため毎年リリース + StageでのProposal管理が&lt;a href=&quot;https://github.com/tc39/ecma402&quot; title=&quot;tc39/ecma402: Status, process, and documents for ECMA 402&quot;&gt;tc39/ecma402: Status, process, and documents for ECMA 402&lt;/a&gt;で行われています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://azu.github.io/slide-what-is-ecmascript/&quot; title=&quot;Introduction | ECMAScriptとは何か？&quot;&gt;Introduction | ECMAScriptとは何か？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/whats-new-in-jquery-3/&quot; title=&quot;What&amp;amp;#39;s New in jQuery 3 - Telerik Developer Network&quot;&gt;What&amp;#39;s New in jQuery 3 - Telerik Developer Network&lt;/a&gt;という記事では、現在&lt;a href=&quot;https://blog.jquery.com/2016/01/14/jquery-3-0-beta-released/&quot; title=&quot;Beta&quot;&gt;Beta&lt;/a&gt;リリースされているjQuery 3について詳しく解説されています。&lt;/p&gt;

&lt;p&gt;細かな変更点について書かれているので、jQueryに興味がある人は見てみるといいです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.6.0-·-babel/babel&quot;&gt;Release v6.6.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.6.0&quot; title=&quot;Release v6.6.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.6.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel 6.6.0リリース。&lt;br&gt;
transform-es3-member-expression-literalsが再度組み合わせて利用できるように、Babel 6で削除されたオプションに関するエラーをわかりやすく表示されるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---announcing-ember&amp;#x27;s-first-lts-release&quot;&gt;Ember.js - Announcing Ember&amp;#x27;s First LTS Release&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html&quot; title=&quot;Ember.js - Announcing Ember&amp;#39;s First LTS Release&quot;&gt;emberjs.com/blog/2016/02/25/announcing-embers-first-lts.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Ember.jsがLTS(Long Term Support)リリースを行う予定。&lt;br&gt;
Ember.js 2.4が最初のLTSリリースとなる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---ember.js-2.4-and-2.5-beta-released&quot;&gt;Ember.js - Ember.js 2.4 and 2.5 Beta Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/02/29/ember-2-4-released.html&quot; title=&quot;Ember.js - Ember.js 2.4 and 2.5 Beta Released&quot;&gt;emberjs.com/blog/2016/02/29/ember-2-4-released.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Ember.js 2.4と2.5 Betaリリース。&lt;br&gt;
2.5では&lt;code&gt;Object.assign&lt;/code&gt;のpolyfillである&lt;code&gt;Ember.assign&lt;/code&gt;の追加、イベントのテストヘルパーの追加&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-3rd-edition---release-candidate-·-tc39/ecma402-·-github&quot;&gt;Release 3rd Edition - Release Candidate · tc39/ecma402 · GitHub&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/ecma402/releases/tag/3.0-rc-1&quot; title=&quot;Release 3rd Edition - Release Candidate · tc39/ecma402 · GitHub&quot;&gt;github.com/tc39/ecma402/releases/tag/3.0-rc-1&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript Internationalization API 3rd Edition RCリリース。 i18n APIについて定義されてる仕様書&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what&amp;#x27;s-new-in-jquery-3---telerik-developer-network&quot;&gt;What&amp;#x27;s New in jQuery 3 - Telerik Developer Network&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.telerik.com/featured/whats-new-in-jquery-3/&quot; title=&quot;What&amp;#39;s New in jQuery 3 - Telerik Developer Network&quot;&gt;developer.telerik.com/featured/whats-new-in-jquery-3/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery 3についての解説。&lt;br&gt;
for/ofでの列挙、&lt;code&gt;$.get&lt;/code&gt;/&lt;code&gt;$.post&lt;/code&gt;のシグネチャ追加、requestAnimationFrameの対応、&lt;code&gt;data()&lt;/code&gt;の動作変更、DeferredがPromise/A+互換に、SVGのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;step-by-step-guide-to-building-react-redux-apps-—-medium&quot;&gt;Step by Step Guide To Building React Redux Apps — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@rajaraodv/step-by-step-guide-to-building-react-redux-apps-using-mocks-48ca0f47f9a&quot; title=&quot;Step by Step Guide To Building React Redux Apps — Medium&quot;&gt;medium.com/@rajaraodv/step-by-step-guide-to-building-react-redux-apps-using-mocks-48ca0f47f9a&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React+Reduxをステップバイステップで学ぶチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;design-by-contract-with-flow,-react,-and-eslint-·-jeff-winkler&quot;&gt;Design by Contract with Flow, React, and ESLint · Jeff Winkler&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://react.rocks/blog/post/propTypes_React_Flow/&quot; title=&quot;Design by Contract with Flow, React, and ESLint · Jeff Winkler&quot;&gt;react.rocks/blog/post/propTypes_React_Flow/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactのコードをESLint + FlowTypeでチェックする仕組みについての記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;preload:-what-is-it-good-for?-–-smashing-magazine&quot;&gt;Preload: What Is It Good For? – Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/&quot; title=&quot;Preload: What Is It Good For? – Smashing Magazine&quot;&gt;www.smashingmagazine.com/2016/02/preload-what-is-it-good-for/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt;でのpreloadについての詳しい解説。&lt;br&gt;
ブラウザがちゃんと優先度を扱える、CSPと同居できる、&lt;code&gt;as&lt;/code&gt;属性を使い適切な形でリソースを読み込めるなどの特徴について書かれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;building-command-line-tools-with-node.js---atlassian-developers&quot;&gt;Building command line tools with Node.js - Atlassian Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.atlassian.com/blog/2015/11/scripting-with-node/?categories=node.js&quot; title=&quot;Building command line tools with Node.js - Atlassian Developers&quot;&gt;developer.atlassian.com/blog/2015/11/scripting-with-node/?categories=node.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでCLI作るチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;falcor入門-1日目-falcorとは何者か---qiita&quot;&gt;Falcor入門 1日目 Falcorとは何者か - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/Quramy/items/5cf4f112d715c2e2d300&quot; title=&quot;Falcor入門 1日目 Falcorとは何者か - Qiita&quot;&gt;qiita.com/Quramy/items/5cf4f112d715c2e2d300&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;API&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Falcorとはどういうものなのかについての解説。&lt;br&gt;
データの透過性と一貫性について&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Falcorを利用する大きなメリットの1つは「データがサーバにあるのか、クライアントにあるのか意識することなく扱えるようになること」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescriptの型定義管理ツールtypingsについて---qiita&quot;&gt;TypeScriptの型定義管理ツールTypingsについて - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/literalice/items/d83249a5646abcb0bec6&quot; title=&quot;TypeScriptの型定義管理ツールTypingsについて - Qiita&quot;&gt;qiita.com/literalice/items/d83249a5646abcb0bec6&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;typingsの使い方について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;async/await:-it’s-good-and-bad-—-medium&quot;&gt;async/await: It’s Good and Bad — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@benlesh/async-await-it-s-good-and-bad-15cf121ade40&quot; title=&quot;async/await: It’s Good and Bad — Medium&quot;&gt;medium.com/@benlesh/async-await-it-s-good-and-bad-15cf121ade40&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/awaitのメリット/デメリットについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gaearon/react-makes-you-sad:-here’s-a-flowchart-to-make-you-happy-again!&quot;&gt;gaearon/react-makes-you-sad: Here’s a flowchart to make you happy again!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gaearon/react-makes-you-sad&quot; title=&quot;gaearon/react-makes-you-sad: Here’s a flowchart to make you happy again!&quot;&gt;github.com/gaearon/react-makes-you-sad&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;画像&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactの学ぶ手順やエコシステムについてのアドバイス的な図&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/kuy/items/bfe5975205c9237ebd26&quot;&gt;日本語訳&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;examples-of-name-clashes-in-javascript’s-standard-library&quot;&gt;Examples of name clashes in JavaScript’s standard library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.2ality.com/2016/02/js-name-clashes.html&quot; title=&quot;Examples of name clashes in JavaScript’s standard library&quot;&gt;www.2ality.com/2016/02/js-name-clashes.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;新たに追加するメソッド名が衝突したBreak the webの例とSymbolについて。&lt;br&gt;
&lt;code&gt;Symbol.unscopables&lt;/code&gt;が導入された経緯について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;elmish:-functional-programming-in-javascript-—-medium&quot;&gt;Elmish: Functional Programming in Javascript — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@chetcorcos/elmish-functional-programming-in-javascript-50995f1d4b9e&quot; title=&quot;Elmish: Functional Programming in Javascript — Medium&quot;&gt;medium.com/@chetcorcos/elmish-functional-programming-in-javascript-50995f1d4b9e&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Elm的なアーキテクチャをJavaScriptで実装しながら学んでみたという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ccorcos/elmish&quot; title=&quot;ccorcos/elmish: A Javascript UI library inspired by Elm&quot;&gt;ccorcos/elmish: A Javascript UI library inspired by Elm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;confoo:-measuring-spa-performance-//-speaker-deck&quot;&gt;ConFoo: Measuring SPA Performance // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/bluesmoon/confoo-measuring-spa-performance&quot; title=&quot;ConFoo: Measuring SPA Performance // Speaker Deck&quot;&gt;speakerdeck.com/bluesmoon/confoo-measuring-spa-performance&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SPAでパフォーマンスをどう計測するについてのスライド。&lt;br&gt;
XHRのhook、MutationObserver、FetchObserverについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react.js-conf-2016---youtube&quot;&gt;React.js Conf 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLb0IAmt7-GS0M8Q95RIc2lOM6nc77q1IY&quot; title=&quot;React.js Conf 2016 - YouTube&quot;&gt;www.youtube.com/playlist?list=PLb0IAmt7-GS0M8Q95RIc2lOM6nc77q1IY&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;イベント&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画 &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React.js Conf 2016の動画まとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;doclets&quot;&gt;Doclets&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.doclets.io/&quot; title=&quot;Doclets&quot;&gt;www.doclets.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Markdown&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSDocとMarkdownのドキュメントホスティングサイト。&lt;br&gt;
ymlにソースとMarkdownファイルを指定すれば、ドキュメントを作ってくれる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;html-standard-日本語訳&quot;&gt;HTML Standard 日本語訳&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://momdo.github.io/html/&quot; title=&quot;HTML Standard 日本語訳&quot;&gt;momdo.github.io/html/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WHATWG Living Standardの日本語訳&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://momdo.hatenablog.jp/entry/20160301/1456833788&quot; title=&quot;HTML Living Standard訳はじめました - 水底の血&quot;&gt;HTML Living Standard訳はじめました - 水底の血&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rtsao/csjs:-modular,-scoped-css-with-es6&quot;&gt;rtsao/csjs: Modular, scoped CSS with ES6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rtsao/csjs&quot; title=&quot;rtsao/csjs: Modular, scoped CSS with ES6&quot;&gt;github.com/rtsao/csjs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Template Stringsを使ったCSSのカプセル化を行うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mohayonao/web-audio-mock-api:-mock-api-which-implements-the-web-audio-api&amp;#x27;s-interfaces-only&quot;&gt;mohayonao/web-audio-mock-api: mock API which implements the Web Audio API&amp;#x27;s interfaces only&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mohayonao/web-audio-mock-api&quot; title=&quot;mohayonao/web-audio-mock-api: mock API which implements the Web Audio API&amp;#39;s interfaces only&quot;&gt;github.com/mohayonao/web-audio-mock-api&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;API&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Audio APIのモックライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-|-react-webpack-cookbook&quot;&gt;Introduction | React Webpack cookbook&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://christianalfoni.github.io/react-webpack-cookbook/&quot; title=&quot;Introduction | React Webpack cookbook&quot;&gt;christianalfoni.github.io/react-webpack-cookbook/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackとReactでのビルド環境構築系のGitBook&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;amazon.co.jp：-ブラウザハック-webブラウザからの攻撃手法とその防御法総覧:-wade-alcorn,-christian-frichot,-michele-orru,-園田-道夫,-はせがわ-ようすけ,-西村-宗晃,-株式会社プロシステムエルオーシー:-本&quot;&gt;Amazon.co.jp： ブラウザハック Webブラウザからの攻撃手法とその防御法総覧: Wade Alcorn, Christian Frichot, Michele Orru, 園田 道夫, はせがわ ようすけ, 西村 宗晃, 株式会社プロシステムエルオーシー: 本&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.amazon.co.jp/%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%83%8F%E3%83%83%E3%82%AF-Web%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%8B%E3%82%89%E3%81%AE%E6%94%BB%E6%92%83%E6%89%8B%E6%B3%95%E3%81%A8%E3%81%9D%E3%81%AE%E9%98%B2%E5%BE%A1%E6%B3%95%E7%B7%8F%E8%A6%A7-Wade-Alcorn/dp/479814343X&quot; title=&quot;Amazon.co.jp： ブラウザハック Webブラウザからの攻撃手法とその防御法総覧: Wade Alcorn, Christian Frichot, Michele Orru, 園田 道夫, はせがわ ようすけ, 西村 宗晃, 株式会社プロシステムエルオーシー: 本&quot;&gt;www.amazon.co.jp/%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%83%8F%E3%83%83%E3%82%AF-Web%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%8B%E3%82%89%E3%81%AE%E6%94%BB%E6%92%83%E6%89%8B%E6%B3%95%E3%81%A8%E3%81%9D%E3%81%AE%E9%98%B2%E5%BE%A1%E6%B3%95%E7%B7%8F%E8%A6%A7-Wade-Alcorn/dp/479814343X&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年3月16日発売&lt;br&gt;
攻撃者目線から学ぶブラウザ/ウェブのセキュリティについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 03 Mar 2016 21:53:00 +0900</pubDate>
        <link>http://jser.info/2016/03/03/ember-lts-402-i18n-rc-jquery3/</link>
        <guid isPermaLink="true">http://jser.info/2016/03/03/ember-lts-402-i18n-rc-jquery3/</guid>
        
        <category>Ember</category>
        
        <category>i18n</category>
        
        <category>ECMAScript</category>
        
        <category>jQuery</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-02-24のJS: TypeScript 1.8、Reactのバージョニング、Draft.js</title>
        <description>&lt;p&gt;JSer.info #267 - &lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/02/22/announcing-typescript-1-8-2/&quot; title=&quot;TypeScript 1.8&quot;&gt;TypeScript 1.8&lt;/a&gt;が正式リリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/releases/tag/v1.8.2&quot; title=&quot;Release v1.8.2 · Microsoft/TypeScript&quot;&gt;Release v1.8.2 · Microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#typescript-18&quot; title=&quot;What&amp;amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&quot;&gt;What&amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JavaScriptファイルをTypeScriptプロジェクトに含めやすくする&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What&amp;#x27;s-new-in-TypeScript#including-js-files-with---allowjs&quot; title=&quot;--allowJs&quot;&gt;--allowJs&lt;/a&gt;オプションやTypeScriptファイルをそのまま1つのJavaScriptにbundleする機能が追加されています。&lt;/p&gt;

&lt;p&gt;また、String Literal Typesの対応やフローコントロールを解析し到達できていないコードの検知などの機能も追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html&quot; title=&quot;New Versioning Scheme | React&quot;&gt;New Versioning Scheme | React&lt;/a&gt;ではReactの次期バージョンはv15.0.0となることについて書かれています。&lt;/p&gt;

&lt;p&gt;いわゆる&lt;a href=&quot;http://semver.org/&quot; title=&quot;Semantic Versioning&quot;&gt;Semantic Versioning&lt;/a&gt;の1.0.0以降の方式でアップデートしていくという方針について書かれています。&lt;/p&gt;

&lt;p&gt;また、Reactに依存したライブラリにおけるReactバージョンに指定方法についても書かれているので、&lt;br&gt;
React Componentのライブラリを作っている人は参照するといいかもしれません。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://facebook.github.io/react/img/blog/versioning-6.png&quot; alt=&quot;react versioning&quot;&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;FacebookのNoteやMessengerで使われているReactベースのリッチテキストエディタフレームワークである&lt;a href=&quot;https://facebook.github.io/draft-js/&quot; title=&quot;Draft.js&quot;&gt;Draft.js&lt;/a&gt;が公開されています。&lt;/p&gt;

&lt;p&gt;Reactでコンポーネントを作る際に、テキストエディタのような仕組みは色々悩みどころが出てくるので、&lt;br&gt;
その辺の仕組みを見てみると面白いかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/draft-js/docs/advanced-topics-issues-and-pitfalls.html#content&quot; title=&quot;Issues and Pitfalls&quot;&gt;Issues and Pitfalls&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v5.7.0-(stable)-|-node.js&quot;&gt;Node v5.7.0 (Stable) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v5.7.0/&quot; title=&quot;Node v5.7.0 (Stable) | Node.js&quot;&gt;nodejs.org/en/blog/release/v5.7.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js 5.7.0リリース。&lt;br&gt;
&lt;code&gt;Buffer#fill&lt;/code&gt;が&lt;code&gt;encoding&lt;/code&gt;引数をサポート、&lt;code&gt;spawn()&lt;/code&gt;が&lt;code&gt;shell&lt;/code&gt;オプションをサポートするなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-1.12.1-and-2.2.1-released-|-official-jquery-blog&quot;&gt;jQuery 1.12.1 and 2.2.1 Released | Official jQuery Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jquery.com/2016/02/22/jquery-1-12-1-and-2-2-1-released/&quot; title=&quot;jQuery 1.12.1 and 2.2.1 Released | Official jQuery Blog&quot;&gt;blog.jquery.com/2016/02/22/jquery-1-12-1-and-2-2-1-released/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery 1.12.1と2.2.1リリース&lt;br&gt;
&lt;code&gt;.position()&lt;/code&gt;のバグを修正&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-1.8-|-typescript&quot;&gt;Announcing TypeScript 1.8 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/02/22/announcing-typescript-1-8-2/&quot; title=&quot;Announcing TypeScript 1.8 | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2016/02/22/announcing-typescript-1-8-2/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 1.8リリース。&lt;br&gt;
String Literal Typesのサポート、コントロールフローを解析しUnreachableなコードを検出するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.2.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.2.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/02/eslint-v2.2.0-released&quot; title=&quot;ESLint v2.2.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/02/eslint-v2.2.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 2.2.0リリース&lt;br&gt;
&lt;code&gt;// eslint-disable-next-line&lt;/code&gt;のサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-es2016-draft-2016-02-15-·-tc39/ecma262&quot;&gt;Release ES2016 Draft 2016-02-15 · tc39/ecma262&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases/tag/es2016-draft-20160215&quot; title=&quot;Release ES2016 Draft 2016-02-15 · tc39/ecma262&quot;&gt;github.com/tc39/ecma262/releases/tag/es2016-draft-20160215&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2016 Draft 2016-02-15リリース。&lt;br&gt;
exponentiation operatorの追加、&lt;code&gt;Object.prototype&lt;/code&gt;はimmutableに、Unicode 8.0へアップデート、&lt;code&gt;[[Enumerate]]&lt;/code&gt;と&lt;code&gt;Reflect.enumerate&lt;/code&gt;の削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2.10.0-·-jscs-dev/node-jscs&quot;&gt;Release v2.10.0 · jscs-dev/node-jscs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jscs-dev/node-jscs/releases/tag/v2.10.0&quot; title=&quot;Release v2.10.0 · jscs-dev/node-jscs&quot;&gt;github.com/jscs-dev/node-jscs/releases/tag/v2.10.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSCS 2.10.0リリース。&lt;br&gt;
&lt;code&gt;disallowSpacesInsideTemplateStringPlaceholders&lt;/code&gt;、&lt;code&gt;requireImportsAlphabetized&lt;/code&gt;の追加&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-versioning-scheme-|-react&quot;&gt;New Versioning Scheme | React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html&quot; title=&quot;New Versioning Scheme | React&quot;&gt;facebook.github.io/react/blog/2016/02/19/new-versioning-scheme.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactの次期バージョンは15.0.0としてリリース予定。&lt;br&gt;
Semver的なバージョニングに合わせるため。また、React ComponentにおけるReactの依存バージョンの書き方についても解説されてる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-using-&amp;#x60;_.chain&amp;#x60;-is-a-mistake.-—-making-internets-—-medium&quot;&gt;Why using &amp;#x60;_.chain&amp;#x60; is a mistake. — Making Internets — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/making-internets/why-using-chain-is-a-mistake-9bc1f80d51ba&quot; title=&quot;Why using \`\_.chain\` is a mistake. — Making Internets — Medium&quot;&gt;medium.com/making-internets/why-using-chain-is-a-mistake-9bc1f80d51ba&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;lodashの&lt;code&gt;_.chanin&lt;/code&gt;は拡張が難しい、lodashに含めることでbundleサイズが大きいという問題がある。&lt;br&gt;
4.1から&lt;code&gt;lodash/fp&lt;/code&gt;にfunctionalな関数が用意されており、同等の表現はより小さなbundleサイズで実現できるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;devtools-へのセキュリティ-パネル導入について---google-developers-japan&quot;&gt;DevTools へのセキュリティ パネル導入について - Google Developers Japan&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://googledevjp.blogspot.com/2016/02/draft-devtools.html&quot; title=&quot;DevTools へのセキュリティ パネル導入について - Google Developers Japan&quot;&gt;googledevjp.blogspot.com/2016/02/draft-devtools.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome開発者ツールに&amp;quot;Security&amp;quot;パネルが追加された。&lt;br&gt;
TLS証明書、Mixed Contentなどを確認出来る&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-safe-navigation&quot;&gt;JavaScript Safe Navigation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/dakaraphi/6a87168db66fd8f032d2&quot; title=&quot;JavaScript Safe Navigation&quot;&gt;gist.github.com/dakaraphi/6a87168db66fd8f032d2&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proxy&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ProxyとSymbolを使って &lt;code&gt;?.&lt;/code&gt; 的なプロパティチェインを繋げるように書く実装。&lt;br&gt;
&lt;code&gt;safe(o).isNull.next.next.$&lt;/code&gt; のように書ける&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;aerotwist---the-hack-is-back!&quot;&gt;Aerotwist - The Hack is Back!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aerotwist.com/blog/the-hack-is-back/&quot; title=&quot;Aerotwist - The Hack is Back!&quot;&gt;aerotwist.com/blog/the-hack-is-back/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;createImageBitmap&lt;/code&gt;とWebWorkerを使うことで、画像のデコード処理を別スレッドで行う方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;delivering-octicons-with-svg&quot;&gt;Delivering Octicons with SVG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/blog/2112-delivering-octicons-with-svg&quot; title=&quot;Delivering Octicons with SVG&quot;&gt;github.com/blog/2112-delivering-octicons-with-svg&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;fonts&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;GitHubはアイコンフォントをやめて、SVGを使ったアイコンを利用するように切り替えた。&lt;br&gt;
SVGをアイコンとして埋め込む方法、パフォーマンス、欠点や落とし穴について&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;talk/webtalk_2016-02-20.pdf-at-master-·-momdo/talk&quot;&gt;talk/webtalk_2016-02-20.pdf at master · momdo/talk&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/momdo/talk/blob/master/webtalk_2016-02-20.pdf&quot; title=&quot;talk/webtalk\_2016-02-20.pdf at master · momdo/talk&quot;&gt;github.com/momdo/talk/blob/master/webtalk_2016-02-20.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ウェブの仕様は継続的に更新されているという話。&lt;br&gt;
WHATWG HTMLから見るW3C HTML、CSS SnapshotはCSS WGが安定していると認識したものを記述しているという話について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-と-udacity-による-javascript-promise-オンライン-コースのご紹介---google-developers-japan&quot;&gt;Google と Udacity による JavaScript Promise オンライン コースのご紹介 - Google Developers Japan&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://googledevjp.blogspot.com/2016/02/google-udacity-javascript-promise.html&quot; title=&quot;Google と Udacity による JavaScript Promise オンライン コースのご紹介 - Google Developers Japan&quot;&gt;googledevjp.blogspot.com/2016/02/google-udacity-javascript-promise.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promiseに関するオンラインコース&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;npm-discover-·-see-what-everyone-else-is-using&quot;&gt;npm Discover · see what everyone else is using&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.npmdiscover.com/&quot; title=&quot;npm Discover · see what everyone else is using&quot;&gt;www.npmdiscover.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;検索&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;特定のnpmパッケージとよく一緒に使われているものを一覧表示してくれるサイト。&lt;br&gt;
「&lt;code&gt;react&lt;/code&gt;と一緒に使われているツールやライブラリが何か」という事を検索できる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;trueadm/inferno:-an-extremely-fast,-isomorphic-javascript-library-for-building-modern-user-interfaces&quot;&gt;trueadm/inferno: An extremely fast, isomorphic JavaScript library for building modern user interfaces&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/trueadm/inferno&quot; title=&quot;trueadm/inferno: An extremely fast, isomorphic JavaScript library for building modern user interfaces&quot;&gt;github.com/trueadm/inferno&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VirtualDOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactライクなVirtual DOMライブラリ。&lt;br&gt;
テンプレートからVirtual DOM Elementを作る段階で、静的/動的なのかを調べている。&lt;br&gt;
これにより実行時にはdiff/patchを行わないフラグメントを作ることでパフォーマンスの向上を狙っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/trueadm/inferno/issues/21&quot; title=&quot;What&amp;amp;#x27;s the difference from virtual dom libraries? · Issue #21 · trueadm/inferno&quot;&gt;What&amp;#x27;s the difference from virtual dom libraries? · Issue #21 · trueadm/inferno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ziyasal/scientist.js:-a-javascript-interpretation-of-the-ruby-library-scientist,-a-library-for-carefully-refactoring-critical-paths.&quot;&gt;ziyasal/scientist.js: A JavaScript interpretation of the Ruby library Scientist, a library for carefully refactoring critical paths.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ziyasal/scientist.js&quot; title=&quot;ziyasal/scientist.js: A JavaScript interpretation of the Ruby library Scientist, a library for carefully refactoring critical paths.&quot;&gt;github.com/ziyasal/scientist.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;リファクタリングを補助するRubyライブラリであるscienceのJavaScript版&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/trello/scientist&quot; title=&quot;trello/scientist: A Node.js library for carefully refactoring critical paths in production&quot;&gt;trello/scientist: A Node.js library for carefully refactoring critical paths in production&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/github/scientist&quot; title=&quot;github/scientist: A Ruby library for carefully refactoring critical paths.&quot;&gt;github/scientist: A Ruby library for carefully refactoring critical paths.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dthree/cash:-cross-platform-linux-commands-in-pure-es6&quot;&gt;dthree/cash: Cross-platform Linux commands in pure ES6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dthree/cash&quot; title=&quot;dthree/cash: Cross-platform Linux commands in pure ES6&quot;&gt;github.com/dthree/cash&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptで書かれたLinuxコマンド集。&lt;br&gt;
クロスプラットフォームで動く&lt;code&gt;mv&lt;/code&gt;や&lt;code&gt;cp&lt;/code&gt;といった単体のコマンドとしてもインストールできる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;draft.js-|-rich-text-editor-framework-for-react&quot;&gt;Draft.js | Rich Text Editor Framework for React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/draft-js/&quot; title=&quot;Draft.js | Rich Text Editor Framework for React&quot;&gt;facebook.github.io/draft-js/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;facebook&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Facebook Notesやmessengerで使われてるReactのリッチエディタフレームワーク。&lt;br&gt;
immutable-jsを利用している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;projectseptemberinc/gl-react:-opengl-/-webgl-bindings-for-react-to-implement-complex-effects-over-images-and-content,-in-the-descriptive-vdom-paradigm&quot;&gt;ProjectSeptemberInc/gl-react: OpenGL / WebGL bindings for React to implement complex effects over images and content, in the descriptive VDOM paradigm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ProjectSeptemberInc/gl-react&quot; title=&quot;ProjectSeptemberInc/gl-react: OpenGL / WebGL bindings for React to implement complex effects over images and content, in the descriptive VDOM paradigm&quot;&gt;github.com/ProjectSeptemberInc/gl-react&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;OpenGL / WebGLを使ったReact Componentライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;happy-learn-javascript-tutorial&quot;&gt;Happy Learn JavaScript Tutorial&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.happylearnjavascripttutorial.com/&quot; title=&quot;Happy Learn JavaScript Tutorial&quot;&gt;www.happylearnjavascripttutorial.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScript楽しく学ぶ目的の書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-mancy-by-jaime-gonzález-garcía-[pdf/ipad/kindle]&quot;&gt;JavaScript-mancy by Jaime González García [PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/javascriptmancy-mastering-arcane-art-of-writing-awesome-javascript-for-csharp-developers&quot; title=&quot;JavaScript-mancy by Jaime González García \[PDF/iPad/Kindle\]&quot;&gt;leanpub.com/javascriptmancy-mastering-arcane-art-of-writing-awesome-javascript-for-csharp-developers&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;C#開発者向けJavaScript本&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 24 Feb 2016 10:11:00 +0900</pubDate>
        <link>http://jser.info/2016/02/24/typescript1.8-react-semver-draft/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/24/typescript1.8-react-semver-draft/</guid>
        
        <category>TypeScript</category>
        
        <category>React</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-02-15のJS: Grunt 1.0.0 RC1、ESLint 2.0.0、Underscore/Lodash</title>
        <description>&lt;p&gt;JSer.info #266 - Grunt 1.0.0 RC1がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gruntjs.com/blog/2016-02-11-grunt-1.0.0-rc1-released&quot;&gt;Grunt 1.0.0 rc1 released - Grunt: The JavaScript Task Runner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Gruntはコミットが止まっていましたが、jQuery Foundation協力のもと再出発しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.jquery.com/2015/11/19/grunt-rebooted/&quot; title=&quot;Grunt, Rebooted&quot;&gt;Grunt, Rebooted&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.0.0 RC1では、&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v3.0.0&quot;&gt;npm 3で挙動が変更&lt;/a&gt;された&lt;code&gt;peerDependencies&lt;/code&gt;への対応、依存モジュールのアップデートなどが行われています。&lt;/p&gt;

&lt;p&gt;今までは&lt;code&gt;grunt&lt;/code&gt;というコマンドを利用する際には別途&lt;code&gt;grunt-cli&lt;/code&gt;をインストールする必要がありました。&lt;br&gt;
1.0.0からは&lt;code&gt;grunt&lt;/code&gt;のdependenciesに&lt;code&gt;grunt-cli&lt;/code&gt;が含まれれるため、&lt;code&gt;npm install grunt&lt;/code&gt;するだけで&lt;code&gt;grunt&lt;/code&gt;コマンドを利用できます。&lt;/p&gt;

&lt;p&gt;これは、npm run-scriptでの利用を想定した作りとなっています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ npm info grunt@1.0.0-rc1 | grep grunt-cli -B 10
  engines: { node: &amp;#39;&amp;gt;=0.10.0&amp;#39; },
  scripts: { test: &amp;#39;grunt test&amp;#39;, &amp;#39;test-tap&amp;#39;: &amp;#39;grunt test:tap&amp;#39; },
  main: &amp;#39;lib/grunt&amp;#39;,
  dependencies:
   { &amp;#39;coffee-script&amp;#39;: &amp;#39;~1.10.0&amp;#39;,
     dateformat: &amp;#39;~1.0.12&amp;#39;,
     eventemitter2: &amp;#39;~0.4.13&amp;#39;,
     exit: &amp;#39;~0.1.1&amp;#39;,
     &amp;#39;findup-sync&amp;#39;: &amp;#39;~0.3.0&amp;#39;,
     glob: &amp;#39;~6.0.4&amp;#39;,
     &amp;#39;grunt-cli&amp;#39;: &amp;#39;1.0.0-rc1&amp;#39;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;グローバルに&lt;code&gt;grunt&lt;/code&gt;コマンドをインストールしたい場合は、今まで通り&lt;code&gt;npm install grunt-cli -g&lt;/code&gt;とすることで利用できます。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;https://github.com/gruntjs/rfcs&quot; title=&quot;gruntjs/rfcs: RFCs for changes to Grunt&quot;&gt;gruntjs/rfcs&lt;/a&gt;というリポジトリが公開され、RFC(Request for Comments)を受け付ける仕組みづくりなどが進められています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;JavaScript Lintツールの&lt;a href=&quot;http://eslint.org/&quot; title=&quot;ESLint&quot;&gt;ESLint&lt;/a&gt; 2.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/blog/2016/02/eslint-v2.0.0-released&quot;&gt;ESLint v2.0.0 released - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/8bcecd821cca9e849078&quot; title=&quot;ESLint v2.0.0 の変更点まとめ - Qiita&quot;&gt;ESLint v2.0.0 の変更点まとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ルールの設定やプラグイン作成に関連するAPIの変更などが行われているため、以下のページでマイグレーションガイドが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/docs/user-guide/migrating-to-2.0.0&quot; title=&quot;Documentation - ESLint - Pluggable JavaScript linter&quot;&gt;Migrating to v2.0.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cht8687/You-Dont-Need-Lodash-Underscore&quot;&gt;cht8687/You-Dont-Need-Lodash-Underscore: Lists of Javascript methods which you can use natively&lt;/a&gt;ではLodash/Underscoreの中で、ECMAScriptにも同様の機能があるものをまとめています。&lt;/p&gt;

&lt;p&gt;また、それに対するレスポンスとして&lt;a href=&quot;https://github.com/stevemao/You-Dont-Know-About-Lodash-Underscore&quot;&gt;stevemao/You-Dont-Know-About-Lodash-Underscore: In response to You-Dont-Need-Lodash-Underscore&lt;/a&gt;というまとめも公開されています。&lt;br&gt;
Lodash/Underscoreのメソッドは単純に置き換え出来るもの以外の機能も持っているということについて書かれています。&lt;/p&gt;

&lt;p&gt;こちらとは関係ないですが、UnderscoreとLodashのマージを考える&lt;a href=&quot;https://github.com/underdash/underdash&quot; title=&quot;Underdash&quot;&gt;Underdash&lt;/a&gt;のステータスがアップデートされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/underdash/underdash/issues/14&quot; title=&quot;Merge update. · Issue #14 · underdash/underdash&quot;&gt;Merge update. · Issue #14 · underdash/underdash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;So as to the merge I think it&amp;#39;s already happened as Lodash v4.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とLodash側の人が書いています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.1.0---2016.02.09-·-zloirock/core-js&quot;&gt;Release 2.1.0 - 2016.02.09 · zloirock/core-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases/tag/v2.1.0&quot; title=&quot;Release 2.1.0 - 2016.02.09 · zloirock/core-js&quot;&gt;github.com/zloirock/core-js/releases/tag/v2.1.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;core-js 2.1.0リリース。&lt;br&gt;
ES5 polyfillの分離。&lt;br&gt;
&lt;code&gt;Reflect.enumerate&lt;/code&gt;の削除、Metadata Reflection APIの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jonathandturner/decorators/blob/master/specs/metadata.md&quot; title=&quot;decorators/metadata.md at master · jonathandturner/decorators&quot;&gt;decorators/metadata.md at master · jonathandturner/decorators&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;february-2016-security-release-summary-|-node.js&quot;&gt;February 2016 Security Release Summary | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/february-2016-security-releases/&quot; title=&quot;February 2016 Security Release Summary | Node.js&quot;&gt;nodejs.org/en/blog/vulnerability/february-2016-security-releases/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;セキュリティ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのセキュリティアップデート。&lt;br&gt;
0.1x、4.x、5.xのアップデートがそれぞれ公開されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;grunt-1.0.0-rc1-released---grunt:-the-javascript-task-runner&quot;&gt;Grunt 1.0.0 rc1 released - Grunt: The JavaScript Task Runner&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gruntjs.com/blog/2016-02-11-grunt-1.0.0-rc1-released&quot; title=&quot;Grunt 1.0.0 rc1 released - Grunt: The JavaScript Task Runner&quot;&gt;gruntjs.com/blog/2016-02-11-grunt-1.0.0-rc1-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Grunt&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Grunt 1.0.0 RC1リリース。&lt;br&gt;
メジャーアップデートとなるため&lt;code&gt;peerDependencies&lt;/code&gt;についての注意、&lt;code&gt;grant&lt;/code&gt;モジュールにCLIが含まれるように、依存モジュールのアップデートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v2.0.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v2.0.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/02/eslint-v2.0.0-released&quot; title=&quot;ESLint v2.0.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/02/eslint-v2.0.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 2.0.0リリース。&lt;br&gt;
&lt;code&gt;eslint --init&lt;/code&gt;で既存コードから判定して利用するルールの設定を作為する機能の追加、&lt;code&gt;eslint:recommended&lt;/code&gt;のアップデート、既存ルールの挙動変更やオプションの非互換な変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/8bcecd821cca9e849078&quot; title=&quot;ESLint v2.0.0 の変更点まとめ - Qiita&quot;&gt;ESLint v2.0.0 の変更点まとめ - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://eslint.org/docs/user-guide/migrating-to-2.0.0&quot; title=&quot;Documentation - ESLint - Pluggable JavaScript linter&quot;&gt;Documentation - ESLint - Pluggable JavaScript linter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;strongloop-|-a-new-day-for-express!&quot;&gt;StrongLoop | A New Day for Express!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://strongloop.com/strongblog/a-new-day-for-express/&quot; title=&quot;StrongLoop | A New Day for Express!&quot;&gt;strongloop.com/strongblog/a-new-day-for-express/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;community&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;expressがNode.js FoundationのTop-Level Projectとなり、strongloop(IBM)から  https://github.com/expressjs へ移管された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/TSC/blob/master/Applications/Express.md&quot; title=&quot;TSC/Express.md at master · nodejs/TSC&quot;&gt;TSC/Express.md at master · nodejs/TSC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-the-accessible-modal-dialog&quot;&gt;Introducing the Accessible Modal Dialog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.edenspiekermann.com/2016/02/11/introducing-accessible-modal-dialog/&quot; title=&quot;Introducing the Accessible Modal Dialog&quot;&gt;dev.edenspiekermann.com/2016/02/11/introducing-accessible-modal-dialog/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アクセシビリティ&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WAI-ARIA&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AccessibleなモーダルUIライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;timaschew/postcss-compare-packs:-compare-most-popular-postcss-packs-like-cssnext,-rucksack-and-precss&quot;&gt;timaschew/postcss-compare-packs: compare most popular postcss packs like cssnext, rucksack and precss&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/timaschew/postcss-compare-packs&quot; title=&quot;timaschew/postcss-compare-packs: compare most popular postcss packs like cssnext, rucksack and precss&quot;&gt;github.com/timaschew/postcss-compare-packs&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;PostCSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;cssnext、rucksack、precssなどのPostCSSパックの比較&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript,-tc39-meeting-notesの読み方と修正方法-|-web-scratch&quot;&gt;ECMAScript, TC39 Meeting Notesの読み方と修正方法 | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/02/12/tc39-meeting-notes/&quot; title=&quot;ECMAScript, TC39 Meeting Notesの読み方と修正方法 | Web Scratch&quot;&gt;efcl.info/2016/02/12/tc39-meeting-notes/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ECMA TC39ミーティングノートの読み方とこのミーティングノートにはどういうことが書かれているのかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cht8687/you-dont-need-lodash-underscore:-lists-of-javascript-methods-which-you-can-use-natively&quot;&gt;cht8687/You-Dont-Need-Lodash-Underscore: Lists of Javascript methods which you can use natively&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cht8687/You-Dont-Need-Lodash-Underscore&quot; title=&quot;cht8687/You-Dont-Need-Lodash-Underscore: Lists of Javascript methods which you can use natively&quot;&gt;github.com/cht8687/You-Dont-Need-Lodash-Underscore&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;underscore/lodashのメソッドをネイティブで同じ表現をする書き方について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/stevemao/You-Dont-Know-About-Lodash-Underscore&quot; title=&quot;stevemao/You-Dont-Know-About-Lodash-Underscore: In response to You-Dont-Need-Lodash-Underscore&quot;&gt;stevemao/You-Dont-Know-About-Lodash-Underscore: In response to You-Dont-Need-Lodash-Underscore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-update-on-strong-mode---google-グループ&quot;&gt;An update on strong mode - Google グループ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://groups.google.com/forum/#!msg/strengthen-js/ojj3TDxbHpQ/5ENNAiUzEgAJ&quot; title=&quot;An update on strong mode - Google グループ&quot;&gt;groups.google.com/forum/#!msg/strengthen-js/ojj3TDxbHpQ/5ENNAiUzEgAJ&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8のstrong modeの実装ステータスや結果について。&lt;br&gt;
性能が想定よりでなかった、ES6の仕様に性能のブロッカーがある。複雑になりすぎるなど。&lt;br&gt;
そのため次期V8ではstrong modeのサポートは削除予定&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-perf/react-worker-dom:-experiments-to-see-the-advantages-of-using-web-workers-to-render-react-virtual-dom&quot;&gt;web-perf/react-worker-dom: Experiments to see the advantages of using Web Workers to Render React Virtual DOM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/web-perf/react-worker-dom&quot; title=&quot;web-perf/react-worker-dom: Experiments to see the advantages of using Web Workers to Render React Virtual DOM&quot;&gt;github.com/web-perf/react-worker-dom&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactをWebWorkerで動かす実装とデモ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ariafallah/webpacktutorial:-a-simple-webpack-tutorial&quot;&gt;AriaFallah/WebpackTutorial: A simple webpack tutorial&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/AriaFallah/WebpackTutorial&quot; title=&quot;AriaFallah/WebpackTutorial: A simple webpack tutorial&quot;&gt;github.com/AriaFallah/WebpackTutorial&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackのチュートリアル。&lt;br&gt;
色々なパターンについて設定やなぜそう書くのかについて書かれてる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-newsletter&quot;&gt;React Newsletter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://reactjsnewsletter.com/&quot; title=&quot;React Newsletter&quot;&gt;reactjsnewsletter.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mail&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactのWeeklyメールマガジン&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;marten-de-vries/kneden:-transpile-es7-async/await-to-vanilla-es6-promise-chains:-a-babel-plugin&quot;&gt;marten-de-vries/kneden: Transpile ES7 async/await to vanilla ES6 Promise chains: a Babel plugin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/marten-de-vries/kneden&quot; title=&quot;marten-de-vries/kneden: Transpile ES7 async/await to vanilla ES6 Promise chains: a Babel plugin&quot;&gt;github.com/marten-de-vries/kneden&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async/awaitをPromiseを使ったreadableなコードへ変換する目的のBabelプラグイン&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ruyadorno/ntl:-npm-task-list:-interactive-cli-menu-to-list/run-npm-tasks&quot;&gt;ruyadorno/ntl: Npm Task List: Interactive cli menu to list/run npm tasks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ruyadorno/ntl&quot; title=&quot;ruyadorno/ntl: Npm Task List: Interactive cli menu to list/run npm tasks&quot;&gt;github.com/ruyadorno/ntl&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npm run-scriptをインタラクティブに選択肢て実行出来るツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-glossary…-by-andrea-giammarchi-[pdf/ipad/kindle]&quot;&gt;JavaScript glossary… by Andrea Giammarchi [PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/jsglossary&quot; title=&quot;JavaScript glossary… by Andrea Giammarchi \[PDF/iPad/Kindle\]&quot;&gt;leanpub.com/jsglossary&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptを使った開発に出てくる用語を解説することを目的とした書籍&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.webreflection.co.uk/blog/2016/02/08/jsglossary&quot; title=&quot;My new JavaScript book&quot;&gt;My new JavaScript book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 15 Feb 2016 20:07:00 +0900</pubDate>
        <link>http://jser.info/2016/02/15/grunt-eslint2.0.0-underscore-lodash/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/15/grunt-eslint2.0.0-underscore-lodash/</guid>
        
        <category>JavaScript</category>
        
        <category>Grunt</category>
        
        <category>ESLint</category>
        
        <category>underscore</category>
        
        <category>lodash</category>
        
        <category>Vanilla</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-02-08のJS: Babel 6.5.0、Angular 1.5、letとconst</title>
        <description>&lt;p&gt;JSer.info #265 - Babel 6.5.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.5.0&quot; title=&quot;Release v6.5.0 · babel/babel&quot;&gt;Release v6.5.0 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Babel 6.0.0から一度の走査で全ての変換処理(プラグイン)を適用することで高速化しています。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Babel 6 implements a new optimization which merges all plugins together into a single traversal.&lt;br&gt;&lt;br&gt;
-- &lt;a href=&quot;https://babeljs.io/blog/2015/10/29/6.0.0&quot; title=&quot;6.0.0 Released · Babel&quot;&gt;6.0.0 Released · Babel&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;逆に全ての処理が一度に行われるのでプラグイン間で競合を起こしやすかったり、特定のプラグインの前後で処理したい場合などに問題が発生していました。&lt;/p&gt;

&lt;p&gt;Babel 6.5.0では&lt;code&gt;passPerPreset&lt;/code&gt;というオプションが追加され、preset毎にtraversalが作られて処理出来るようになりました。&lt;br&gt;
これにより、プラグイン毎の衝突といったものを制御しやすくなっています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;passPerPreset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;presets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;plugin-1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;preset-2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;plugin-2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また、コード生成の処理を最適化し、最大2倍程度早くなっています。&lt;br&gt;
以下にて解説されていますが、V8の文字列処理の特性を利用した最適化なので特殊なやり方です。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/pull/3283#discussion-diff-50198857&quot; title=&quot;Improve generator performance by gzzhanghao · Pull Request #3283 · babel/babel&quot;&gt;Improve generator performance by gzzhanghao · Pull Request #3283 · babel/babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;V8では文字列結合した文字列を&lt;a href=&quot;https://github.com/v8/v8/blob/b23d5389e024a85cdc5c7d343fe5cc68a14f4d49/src/objects.h#L9141-L9187&quot; title=&quot;ConsString&quot;&gt;ConsString&lt;/a&gt;として保持しています。&lt;br&gt;
そして、その文字列の添字アクセスした時に初めて&lt;a href=&quot;https://github.com/v8/v8/blob/b23d5389e024a85cdc5c7d343fe5cc68a14f4d49/src/objects.cc#L1717-L1743&quot; title=&quot;String::SlowFlatten&quot;&gt;String::SlowFlatten&lt;/a&gt;を行います。&lt;/p&gt;

&lt;p&gt;この&lt;a href=&quot;https://github.com/v8/v8/blob/b23d5389e024a85cdc5c7d343fe5cc68a14f4d49/src/objects.cc#L1717-L1743&quot; title=&quot;String::SlowFlatten&quot;&gt;String::SlowFlatten&lt;/a&gt;の処理が重たいため、Babelのコード生成のような文字列を結合していく処理に、これをできるだけ避けるような変更が入っています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jsbin.com/kekaweheda/edit?js,console&quot;&gt;https://jsbin.com/kekaweheda/edit?js,console&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(JavaScriptエンジンの実装次第ではあります)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.jp/2016/02/angular-150-ennoblement-facilitation.html&quot; title=&quot;Angular 1.5.0 - ennoblement-facilitation has been released!&quot;&gt;Angular 1.5.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular.js/blob/master/CHANGELOG.md#150-ennoblement-facilitation-2016-02-05&quot; title=&quot;angular.js/CHANGELOG.md at master · angular/angular.js&quot;&gt;angular.js/CHANGELOG.md at master · angular/angular.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.5.0ではAngularJS 2へのマイグレーションがしやすなるような機能の追加などが行われています。&lt;br&gt;
&lt;code&gt;module.component()&lt;/code&gt;の追加、one-wayバインディングの対応、ES6 Classesの対応改善、また&lt;code&gt;ngSanitize&lt;/code&gt;のセキュリティ改善が行われています。&lt;/p&gt;

&lt;p&gt;コンポーネントを定義する&lt;code&gt;module.component()&lt;/code&gt;については以下の記事を参照するといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/laco0416/items/edfa917583af4593ad6c&quot; title=&quot;その使い方はもう古いかも？AngularJS老化チェック（ディレクティブ篇） - Qiita&quot;&gt;その使い方はもう古いかも？AngularJS老化チェック（ディレクティブ篇） - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://mathiasbynens.be/notes/es6-const&quot; title=&quot;ES6 const is not about immutability · Mathias Bynens&quot;&gt;ES6 const is not about immutability · Mathias Bynens&lt;/a&gt;という記事では、&lt;code&gt;const&lt;/code&gt;に関するよくある誤解を解いています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const&lt;/code&gt;は値を不変にするのではなく、値へのバインディングを不変するという意味でJavaの&lt;code&gt;final&lt;/code&gt;などと同じです。&lt;br&gt;
 そのためオブジェクトのプロパティへの代入は可能のままとなりますが、オブジェクトの不変については&lt;code&gt;Object.freeze()&lt;/code&gt;を利用できる点などについて書かれています。&lt;br&gt;
 またそれをふまえて&lt;code&gt;let&lt;/code&gt;と&lt;code&gt;const&lt;/code&gt;の使い分けについても書かれています。&lt;/p&gt;

&lt;p&gt;合わせて、&lt;code&gt;let&lt;/code&gt;(&lt;code&gt;const&lt;/code&gt;も同様)のスコープについて解説されている以下の記事も参照してみるといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://davidwalsh.name/for-and-against-let&quot; title=&quot;For and against &amp;amp;#39;let&amp;amp;#39;&quot;&gt;For and against &amp;#39;let&amp;#39;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.5.0-·-babel/babel&quot;&gt;Release v6.5.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.5.0&quot; title=&quot;Release v6.5.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.5.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel 6.5.0リリース。&lt;br&gt;
Babel 6から一度のコード変換で全てされていたが、それを複数に分けられる&lt;code&gt;passPerPreset&lt;/code&gt;オプションの追加。&lt;br&gt;
V8のString実装への最適化を行いコード生成を高速化するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dev.opera-—-opera-35-released&quot;&gt;Dev.Opera — Opera 35 released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.opera.com/blog/opera-35/&quot; title=&quot;Dev.Opera — Opera 35 released&quot;&gt;dev.opera.com/blog/opera-35/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Opera&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Opera 35(based on Chromium 48)リリース。&lt;br&gt;
&lt;code&gt;document.fonts&lt;/code&gt;がSetらいくなオブジェクトとなり&lt;code&gt;entries()&lt;/code&gt;などが利用できるように、&lt;code&gt;TouchEvent&lt;/code&gt;イベントコンストラクタの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-1.5.0---ennoblement-facilitation-has-been-released!&quot;&gt;Angular 1.5.0 - ennoblement-facilitation has been released!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.com/2016/02/angular-150-ennoblement-facilitation.html&quot; title=&quot;Angular 1.5.0 - ennoblement-facilitation has been released!&quot;&gt;angularjs.blogspot.com/2016/02/angular-150-ennoblement-facilitation.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS 1.5.0リリース。&lt;br&gt;
AngularJS 2へのアップグレードパスの改善。&lt;br&gt;
&lt;code&gt;module.component()&lt;/code&gt;の追加、one-wayバインディングの対応、ES6 Classesの対応改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-49-beta:-css-custom-properties,-background-sync-with-service-workers,-and-new-es2015-features&quot;&gt;Chromium Blog: Chrome 49 Beta: CSS custom properties, background sync with service workers, and new ES2015 features&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.chromium.org/2016/02/chrome-49-beta-css-custom-properties.html&quot; title=&quot;Chromium Blog: Chrome 49 Beta: CSS custom properties, background sync with service workers, and new ES2015 features&quot;&gt;blog.chromium.org/2016/02/chrome-49-beta-css-custom-properties.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 49 Betaリリース。&lt;br&gt;
CSS custom propetires(CSS Variable)、ES6の対応改善、&lt;code&gt;Object.observe()&lt;/code&gt;が非推奨となるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;looking-ahead:-microsoft-edge-for-developers-in-2016-|-microsoft-edge-dev-blog&quot;&gt;Looking ahead: Microsoft Edge for developers in 2016 | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/02/03/2016-platform-priorities/&quot; title=&quot;Looking ahead: Microsoft Edge for developers in 2016 | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2016/02/03/2016-platform-priorities/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;MSEdgeのロードマップ。&lt;br&gt;
アクセシビリティの改善、ES6 modules、Fetch API、Web Notifications、Beacon APIなどの対応を予定している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typings-で-d.ts-の管理をする-|-スマホ神-–-javascript-受託開発-–&quot;&gt;typings で d.ts の管理をする | スマホ神 – JavaScript 受託開発 –&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://smart.ataglance.jp/2016-02-04-manage-dts-by-typings/&quot; title=&quot;typings で d.ts の管理をする | スマホ神 – JavaScript 受託開発 –&quot;&gt;smart.ataglance.jp/2016-02-04-manage-dts-by-typings/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;typings&lt;/code&gt;を遣ったd.tsの管理について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;handling-props-and-class-names-in-react-–-simonsmith.io-–-portfolio-and-blog-of-a-london-based-front-end-web-developer&quot;&gt;Handling props and class names in React – simonsmith.io – Portfolio and blog of a London based front-end web developer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://simonsmith.io/handling-props-and-classnames-in-react/&quot; title=&quot;Handling props and class names in React – simonsmith.io – Portfolio and blog of a London based front-end web developer&quot;&gt;simonsmith.io/handling-props-and-classnames-in-react/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React ComponentとclassNameの管理パターン。&lt;br&gt;
classnamesモジュールを使う方法とテストについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;for-and-against-&amp;#x27;let&amp;#x27;&quot;&gt;For and against &amp;#x27;let&amp;#x27;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://davidwalsh.name/for-and-against-let&quot; title=&quot;For and against &amp;#39;let&amp;#39;&quot;&gt;davidwalsh.name/for-and-against-let&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;let&lt;/code&gt;とスコープについての詳しい解説&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es6-const-is-not-about-immutability-·-mathias-bynens&quot;&gt;ES6 const is not about immutability · Mathias Bynens&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://mathiasbynens.be/notes/es6-const&quot; title=&quot;ES6 const is not about immutability · Mathias Bynens&quot;&gt;mathiasbynens.be/notes/es6-const&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;const&lt;/code&gt;は値を不変(immutable)にするのではなく、値へのバインディングを不変にするという意味。&lt;br&gt;
そのためオブジェクトのプロパティへの代入は可能のままだが、オブジェクトの不変については&lt;code&gt;Object.freeze()&lt;/code&gt;が扱う。また&lt;code&gt;let&lt;/code&gt;と&lt;code&gt;const&lt;/code&gt;の使い分けについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developer-edition-46-–-more-memory-tooling,-improved-@media-sidebar-and-more-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Developer Edition 46 – More memory tooling, improved @media sidebar and more ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/02/developer-edition-46-more-memory-tooling-improved-media-sidebar-and-more/&quot; title=&quot;Developer Edition 46 – More memory tooling, improved @media sidebar and more ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/02/developer-edition-46-more-memory-tooling-improved-media-sidebar-and-more/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 46の開発者ツール変更点について。&lt;br&gt;
Dominator viewの追加、開発者ツールが閉じてても&lt;code&gt;debugger&lt;/code&gt;ステートメントでブレークするようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-es2015-proxies-|-web-updates---google-developers&quot;&gt;Introducing ES2015 Proxies | Web Updates - Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/02/es2015-proxies&quot; title=&quot;Introducing ES2015 Proxies | Web Updates - Google Developers&quot;&gt;developers.google.com/web/updates/2016/02/es2015-proxies&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2015 Proxiesの使い方について。&lt;br&gt;
Reflect APIとの組み合わた使い方などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;다함께,-fluxutils-한바퀴!&quot;&gt;다함께, FluxUtils 한바퀴!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/UyeongJu/fluxutils&quot; title=&quot;다함께, FluxUtils 한바퀴!&quot;&gt;www.slideshare.net/UyeongJu/fluxutils&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;flux utilsについてのスライド。&lt;br&gt;
flux utilsのソースコードを見ながらどのようなシーケンスでやり取りしてるのか、fluxアーキテクチャでの非同期処理についてなどがわかりやすく解説されてる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;top-|-diff-of-htmls&quot;&gt;Top | Diff of HTMLs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://diffofhtmls.herokuapp.com/&quot; title=&quot;Top | Diff of HTMLs&quot;&gt;diffofhtmls.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;W3CとWHATWGのHTML仕様書のdiffを見ることが出来るサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vasanthk/css-refresher-notes:-css-refresher!&quot;&gt;vasanthk/css-refresher-notes: CSS Refresher!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vasanthk/css-refresher-notes&quot; title=&quot;vasanthk/css-refresher-notes: CSS Refresher!&quot;&gt;github.com/vasanthk/css-refresher-notes&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS再入門。&lt;br&gt;
よく使う機能や指定の仕方について詳しく解説されてる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;start-runner/start:-dead-simple-tasks-runner&quot;&gt;start-runner/start: Dead simple tasks runner&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/start-runner/start&quot; title=&quot;start-runner/start: Dead simple tasks runner&quot;&gt;github.com/start-runner/start&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promiseベースのタスク自動化ツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;teamweek/instadate:-a-minimal-high-performance-date-library-for-node.js-and-browser&quot;&gt;Teamweek/instadate: A minimal high performance date library for Node.js and Browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Teamweek/instadate&quot; title=&quot;Teamweek/instadate: A minimal high performance date library for Node.js and Browser&quot;&gt;github.com/Teamweek/instadate&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;日付、時間処理を扱うライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thinking-in-react&quot;&gt;Thinking In React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.thinkinginreact.xyz/&quot; title=&quot;Thinking In React&quot;&gt;www.thinkinginreact.xyz/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactを扱う場合においての現実問題に対する解を考えていく電子書籍。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 08 Feb 2016 20:19:00 +0900</pubDate>
        <link>http://jser.info/2016/02/08/babel6.5.0-angular1.5-let-const/</link>
        <guid isPermaLink="true">http://jser.info/2016/02/08/babel6.5.0-angular1.5-let-const/</guid>
        
        <category>ES6</category>
        
        <category>Babel</category>
        
        <category>AngularJS</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
  </channel>
</rss>
