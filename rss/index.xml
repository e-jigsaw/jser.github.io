<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>http://jser.info/</link>
    <atom:link href="http://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 20 Sep 2016 11:29:32 +0900</pubDate>
    <lastBuildDate>Tue, 20 Sep 2016 11:29:32 +0900</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>2016-09-20のJS: AngularJS 2、Node 6.6.0、Chrome 54の開発者ツール</title>
        <description>&lt;p&gt;JSer.info #297 - Angular &lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md#200-2016-09-14&quot; title=&quot;2.0.0&quot;&gt;2.0.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://angularjs.blogspot.jp/2016/09/angular2-final.html&quot;&gt;Angular, version 2: proprioception-reinforcement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md#200-2016-09-14&quot;&gt;angular/CHANGELOG.md at master · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://ng2-info.github.io/2016/09/angular-2-final/&quot;&gt;🎉✨ Angular 2.0.0がリリースされました 🎉✨ · Angular2 Info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://juristr.com/blog/2016/09/ng2-released/&quot; title=&quot;Angular 2 released!!&quot;&gt;Angular 2 released!!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AngularJS 2.0.0以降では、Semverに従ってバージョンを上げていくようです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Node.js 6.6.0がリリースされました&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.6.0/&quot;&gt;Node v6.6.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;6.6.0ではEventEmitterのmemory leak警告と&lt;br&gt;
PromiseのUnhandled rejectionの警告を次のように書くことで受け取れるようになっています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;warning&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;warning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;warning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/dist/latest-v6.x/docs/api/process.html#process_event_warning&quot;&gt;process | Node.js v6.6.0 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jasnell/node/blob/995d504d396d9a7137b11a4c1abebaafd97c3061/test/parallel/test-promises-warning-on-unhandled-rejection.js&quot;&gt;node/test-promises-warning-on-unhandled-rejection.js at 995d504d396d9a7137b11a4c1abebaafd97c3061 · jasnell/node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/8298/files&quot;&gt;events: make memory leak warning more programatically accessible by addaleax · Pull Request #8298 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ブラウザでは自動でコンソールにPromiseの&lt;a href=&quot;http://azu.github.io/slide/error-handling/promise-error-handling.html&quot;&gt;Unhandled Rejection&lt;/a&gt;の警告が表示されます。&lt;br&gt;
Node.js 6.6.0でも同様にデフォルトで&lt;code&gt;stderr&lt;/code&gt;へ警告が出力されるようになりました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;This was rejected&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): This was rejected&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;また、これらの警告は&lt;code&gt;&amp;quot;warning&amp;quot;&lt;/code&gt;イベントとしてキャッチすることができるようになっています。&lt;/p&gt;

&lt;p&gt;今まで、EventEmitterのメモリリーク警告は&lt;code&gt;stderr&lt;/code&gt;にログを出すだけでテストも難しいものでしたが、同じように&lt;code&gt;warning&lt;/code&gt;イベントで取得できるようになりました。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;events&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;events&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EventEmitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setMaxListeners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;warning&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;warning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;warning&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Warning: Possible EventEmitter memory leak detected. 2 test listeners added. Use emitter.setMaxListeners() to increase limit&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/azu/node6.6-warning-demo&quot; title=&quot;azu/node6.6-warning-demo&quot;&gt;azu/node6.6-warning-demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.chromium.org/2016/09/chrome-54-beta-custom-elements-v1.html&quot; title=&quot;Chrome 54 Beta&quot;&gt;Chrome 54 Beta&lt;/a&gt;がリリースされましたが、開発者ツールも同様に更新されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/09/devtools-digest&quot; title=&quot;DevTools Digest, September 2016: Perf Roundup | Web Updates - Google Developers&quot;&gt;DevTools Digest, September 2016: Perf Roundup | Web Updates - Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CPU Throttling、TimelineにNetwork viewの表示、スクロールパフォーマンスのProfile、SourceパネルにTimelineのデータ表示などのボトルネックを見つける機能が追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular,-version-2:-proprioception-reinforcement&quot;&gt;Angular, version 2: proprioception-reinforcement&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.com/2016/09/angular2-final.html&quot; title=&quot;Angular, version 2: proprioception-reinforcement&quot;&gt;angularjs.blogspot.com/2016/09/angular2-final.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS 2リリース&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ng2-info.github.io/2016/09/angular-2-final/&quot; title=&quot;🎉✨ Angular 2.0.0がリリースされました 🎉✨ · Angular2 Info&quot;&gt;🎉✨ Angular 2.0.0がリリースされました 🎉✨ · Angular2 Info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v6.6.0-(current)-|-node.js&quot;&gt;Node v6.6.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.6.0/&quot; title=&quot;Node v6.6.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v6.6.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node v6.6.0リリース。&lt;br&gt;
EventEmitterのmemory leak警告、&lt;br&gt;
PromiseのUnhandled rejectionの警告が、&lt;code&gt;process.on(&amp;#39;warning&amp;#39;, (warning) =&amp;gt; { })&lt;/code&gt;でキャッチできるように&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-ui-1.12.1-|-jquery-ui-blog&quot;&gt;jQuery UI 1.12.1 | jQuery UI Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.jqueryui.com/2016/09/jquery-ui-1-12-1/&quot; title=&quot;jQuery UI 1.12.1 | jQuery UI Blog&quot;&gt;blog.jqueryui.com/2016/09/jquery-ui-1-12-1/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery UI 1.12.1リリース。&lt;br&gt;
新しいテーマの追加、&lt;code&gt;Checkboxradio　widget&lt;/code&gt;の追加、&lt;code&gt;classes&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-release-13-|-webkit&quot;&gt;Release Notes for Safari Technology Preview Release 13 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6937/release-notes-for-safari-technology-preview-release-13/&quot; title=&quot;Release Notes for Safari Technology Preview Release 13 | WebKit&quot;&gt;webkit.org/blog/6937/release-notes-for-safari-technology-preview-release-13/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 13 リリース。&lt;br&gt;
&lt;code&gt;adoptedCallback&lt;/code&gt;のサポート、&lt;code&gt;CSS.escape&lt;/code&gt;の実装、クロスオリジンのチェック強化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-54-beta:-custom-elements-v1,-broadcastchannel,-and-media-platform-improvements&quot;&gt;Chromium Blog: Chrome 54 Beta: Custom Elements V1, BroadcastChannel, and media platform improvements&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.chromium.org/2016/09/chrome-54-beta-custom-elements-v1.html&quot; title=&quot;Chromium Blog: Chrome 54 Beta: Custom Elements V1, BroadcastChannel, and media platform improvements&quot;&gt;blog.chromium.org/2016/09/chrome-54-beta-custom-elements-v1.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 54βリリース。&lt;br&gt;
Custom Element v1、BroadcastChannelのサポート。&lt;br&gt;
Resource Timing API のtransferやencoded/decodedのサポート、&lt;code&gt;initTouchEvent&lt;/code&gt;の削除など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-debugger.html-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Introducing debugger.html ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/09/introducing-debugger-html/&quot; title=&quot;Introducing debugger.html ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/09/introducing-debugger-html/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;debugger.htmlというソースパネルライクな新しいデバッガーについて。&lt;br&gt;
Firefox、Chrome、Node.jsに対応し、Remote Debug Protocolでデータをやり取りする。&lt;br&gt;
Firefoxの開発者ツールに統合される予定&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.mozilla.jp/2016/09/introducing-debugger-html/&quot; title=&quot;debugger.html のご紹介 | Mozilla Developer Street (modest)&quot;&gt;debugger.html のご紹介 | Mozilla Developer Street (modest)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;devtools-digest,-september-2016:-perf-roundup-|-web-updates---google-developers&quot;&gt;DevTools Digest, September 2016: Perf Roundup | Web Updates - Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/09/devtools-digest&quot; title=&quot;DevTools Digest, September 2016: Perf Roundup | Web Updates - Google Developers&quot;&gt;developers.google.com/web/updates/2016/09/devtools-digest&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 54での開発者ツールについて。&lt;br&gt;
CPU Throttling、TimelineにNetwork viewの表示、スクロールパフォーマンスのProfile、SourceパネルにTimelineのデータ表示など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;js-web-frameworks-benchmark-–-round-4-|-stefan_krause.blog()&quot;&gt;JS web frameworks benchmark – Round 4 | Stefan_Krause.blog()&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.stefankrause.net/wp/?p=316&quot; title=&quot;JS web frameworks benchmark – Round 4 | Stefan\_Krause.blog()&quot;&gt;www.stefankrause.net/wp/?p=316&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularやReactなどのライブラリやフレームワークのベンチマーク比較&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stefankrause.net/js-frameworks-benchmark4/webdriver-ts/table.html&quot; title=&quot;Table Report&quot;&gt;Table Report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-developers-use-node.js---survey-results-|-@risingstack&quot;&gt;How Developers use Node.js - Survey Results | @RisingStack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.risingstack.com/node-js-developer-survey-results-2016/&quot; title=&quot;How Developers use Node.js - Survey Results | @RisingStack&quot;&gt;blog.risingstack.com/node-js-developer-survey-results-2016/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アンケート&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsを使ったサーバサイド開発についてのアンケート結果&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-use-flow?-·-aria&quot;&gt;Why Use Flow? · Aria&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.aria.ai/post/why-use-flow/&quot; title=&quot;Why Use Flow? · Aria&quot;&gt;blog.aria.ai/post/why-use-flow/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;FlowによるStatic typeについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-future-of-es6-(jafar-husain)---full-stack-fest-2016---youtube&quot;&gt;The future of ES6 (Jafar Husain) - Full Stack Fest 2016 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=3pKNRgResq0&quot; title=&quot;The future of ES6 (Jafar Husain) - Full Stack Fest 2016 - YouTube&quot;&gt;www.youtube.com/watch?v=3pKNRgResq0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;現在策定中の仕様も含めて非同期処理について。&lt;br&gt;
Promise、Async/Await。&lt;br&gt;
PullなAPIとしてGenerator(同期)、AsyncGenerator(Stage 2)。&lt;br&gt;
PushなAPIとしてObservable(Stage 1)について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;Пользовательские-свойства-как-основа-архитектуры-css-(fronttalks)-//-speaker-deck&quot;&gt;Пользовательские свойства как основа архитектуры CSS (FrontTalks) // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/lautsevich/pol-zovatiel-skiie-svoistva-kak-osnova-arkhitiektury-css-fronttalks&quot; title=&quot;Пользовательские свойства как основа архитектуры CSS (FrontTalks) // Speaker Deck&quot;&gt;speakerdeck.com/lautsevich/pol-zovatiel-skiie-svoistva-kak-osnova-arkhitiektury-css-fronttalks&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS Custom Propertiesについてのスライド。&lt;br&gt;
Fallback、i18n、CSS Custom Propertiesとcalc、JavaScriptからの利用、@supportsについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;testing-javascript-with-jest---lesson-playlist-@eggheadio&quot;&gt;Testing JavaScript with Jest - Lesson Playlist @eggheadio&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://egghead.io/playlists/testing-javascript-with-jest-a36c4074&quot; title=&quot;Testing JavaScript with Jest - Lesson Playlist @eggheadio&quot;&gt;egghead.io/playlists/testing-javascript-with-jest-a36c4074&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Jestを学ぶスクリーンキャスト&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;building-applications-with-react-and-redux-in-es6-|-zombie-code-kill&quot;&gt;Building Applications with React and Redux in ES6 | Zombie Code Kill&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zombiecodekill.com/2016/05/21/building-applications-with-react-and-redux-in-es6/&quot; title=&quot;Building Applications with React and Redux in ES6 | Zombie Code Kill&quot;&gt;zombiecodekill.com/2016/05/21/building-applications-with-react-and-redux-in-es6/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactとReduxの入門講座&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.pluralsight.com/courses/react-redux-react-router-es6&quot; title=&quot;Building Applications with React and Redux in ES6 | Pluralsight&quot;&gt;Building Applications with React and Redux in ES6 | Pluralsight&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developer&amp;#x27;s-guide-to-accessibility-mechanics-—-developer&amp;#x27;s-guide-to-accessibility-mechanics&quot;&gt;Developer&amp;#x27;s guide to accessibility mechanics — Developer&amp;#x27;s guide to accessibility mechanics&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ljwatson.github.io/decks/2016/fromthefront/index.html#cover&quot; title=&quot;Developer&amp;#39;s guide to accessibility mechanics — Developer&amp;#39;s guide to accessibility mechanics&quot;&gt;ljwatson.github.io/decks/2016/fromthefront/index.html#cover&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;デフォルトの&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;はどういうサポートがあるからaccessibleであるかについてを独自のリンク実装で見ていく話。&lt;br&gt;
またデフォルトではaccessibleでないツールチップ、タブパネルなどをどうじっそうするか。&lt;br&gt;
実際にスクリーンリーダーの音を聞きながら確認できる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;avocode/combokeys:-web-browser-keyboard-shortcuts.-commonjs,-npm.&quot;&gt;avocode/combokeys: Web browser keyboard shortcuts. CommonJS, NPM.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/avocode/combokeys&quot; title=&quot;avocode/combokeys: Web browser keyboard shortcuts. CommonJS, NPM.&quot;&gt;github.com/avocode/combokeys&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;キーボード&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Mousetrapをforkしたキーボードショートカットライブラリ。&lt;br&gt;
リファクタリングとdocumentへのlistenがデフォルトではないように変更されている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.avocode.com/blog/handle-keyboard-shortcuts-in-the-browser-with-combokeys&quot; title=&quot;Handle keyboard shortcuts in the browser with Combokeys&quot;&gt;Handle keyboard shortcuts in the browser with Combokeys&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kentcdodds/match-sorter:-simple,-expected,-and-deterministic-best-match-sorting-of-an-array-in-javascript&quot;&gt;kentcdodds/match-sorter: Simple, expected, and deterministic best-match sorting of an array in JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kentcdodds/match-sorter&quot; title=&quot;kentcdodds/match-sorter: Simple, expected, and deterministic best-match sorting of an array in JavaScript&quot;&gt;github.com/kentcdodds/match-sorter&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;オブジェクトの配列から検索するライブラリ。&lt;br&gt;
指定したキーのみを対象にしたり、検索方法などを指定できる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;build-pacman-by-jeffrey-biles-[leanpub-pdf/ipad/kindle]&quot;&gt;BUILD PACMAN by Jeffrey Biles [Leanpub PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/buildpacman&quot; title=&quot;BUILD PACMAN by Jeffrey Biles \[Leanpub PDF/iPad/Kindle\]&quot;&gt;leanpub.com/buildpacman&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでパックマンを作る書籍。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 20 Sep 2016 09:48:00 +0900</pubDate>
        <link>http://jser.info/2016/09/20/angularjs-2node-660chrome/</link>
        <guid isPermaLink="true">http://jser.info/2016/09/20/angularjs-2node-660chrome/</guid>
        
        <category>Angular</category>
        
        <category>Node</category>
        
        <category>Chrome</category>
        
        <category>debug</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-09-12のJS: Polymer 2.0 Preview、Service Worker入門、JSから型定義ファイルの生成</title>
        <description>&lt;p&gt;JSer.info #296 - &lt;a href=&quot;https://www.polymer-project.org/1.0/blog/2016-09-09-polymer-2.0&quot; title=&quot;Polymer 2.0 Preview&quot;&gt;Polymer 2.0 Preview&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;Polymer 2.0ではWebComponent v1(&lt;a href=&quot;http://hayato.io/2016/shadowdomv1/&quot; title=&quot;Shadow DOM v1&quot;&gt;Shadow DOM v1&lt;/a&gt;や&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/customelements/&quot; title=&quot;Custom Elements v1&quot;&gt;Custom Elements v1&lt;/a&gt;)の上に形成されています。&lt;br&gt;
そのため、v1の仕様に準拠した変更やクラスベースのコンポーネントが作成できるようになっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Polymer/polymer/tree/2.0-preview&quot; title=&quot;Polymer/polymer at 2.0-preview&quot;&gt;Polymer/polymer at 2.0-preview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Flow 0.32.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.32.0&quot; title=&quot;Release v0.32.0 · facebook/flow&quot;&gt;Release v0.32.0 · facebook/flow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;0.32.0では、アノテーション付きのJavaScriptファイルからFlowの型定義ファイルを生成する&lt;code&gt;gen-flow-files&lt;/code&gt;コマンドが追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://joe-re.hatenablog.com/entry/2016/09/06/101529&quot; title=&quot;flowtype v0.32.0 changes - Please Drive Faster&quot;&gt;flowtype v0.32.0 changes - Please Drive Faster&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、TypeScriptの方では素のJavaScriptファイルからTypeScriptの型定義ファイルを生成する&lt;a href=&quot;https://github.com/Microsoft/dts-gen&quot; title=&quot;dts-gen&quot;&gt;dts-gen&lt;/a&gt;というツールが公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/dts-gen&quot; title=&quot;Microsoft/dts-gen: dts-gen creates starter TypeScript definition files for any module or library.&quot;&gt;Microsoft/dts-gen: dts-gen creates starter TypeScript definition files for any module or library.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;どちらもα版といった感じですが、気になる方はためしてみると良いかもしれません。&lt;/p&gt;

&lt;p&gt;追記: &lt;a href=&quot;http://gfx.hatenablog.com/entry/2016/09/12/232554&quot; title=&quot;dts-gen(1) でJavaScripファイルからdtsを生成する - Islands in the byte stream&quot;&gt;dts-gen(1) でJavaScripファイルからdtsを生成する - Islands in the byte stream&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/y_fujieda/items/f9e765ac9d89ba241154&quot;&gt;Service Workerの基本とそれを使ってできること - Qiita&lt;/a&gt;という記事では、Service Workerの基本的なライフサイクルやキャッシュ、Pushの実現について紹介されています。&lt;/p&gt;

&lt;p&gt;また、Googleの&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-worker/?hl=en&quot; title=&quot;Introduction to Service Worker | Web Fundamentals - Google Developers&quot;&gt;Introduction to Service Worker | Web Fundamentals - Google Developers&lt;/a&gt;の&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-worker/&quot;&gt;翻訳&lt;/a&gt;も公開されているので、合わせて読んでみるといいかもしれません。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Promise を多用する&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とあるようにService WorkerはPromiseがネストするので、それに対するアプローチを紹介している&lt;a href=&quot;https://philipwalton.com/articles/untangling-deeply-nested-promise-chains/&quot; title=&quot;Untangling Deeply-Nested Promise Chains — Philip Walton&quot;&gt;Untangling Deeply-Nested Promise Chains — Philip Walton&lt;/a&gt;も読んでみると面白いかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;polymer-2.0-preview---polymer-project&quot;&gt;Polymer 2.0 Preview - Polymer Project&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/1.0/blog/2016-09-09-polymer-2.0&quot; title=&quot;Polymer 2.0 Preview - Polymer Project&quot;&gt;www.polymer-project.org/1.0/blog/2016-09-09-polymer-2.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Polymer 2.0 Previewリリース。&lt;br&gt;
Shadow DOM v1、クラスベースで書けるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-5.4&quot;&gt;V8 JavaScript Engine: V8 Release 5.4&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/09/v8-release-54.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.4&quot;&gt;v8project.blogspot.com/2016/09/v8-release-54.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8 5.4リリース。&lt;br&gt;
メモリが少ない端末でのメモリ消費量の改善、起動速度の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---ember.js-2.8-and-2.9-beta-released&quot;&gt;Ember.js - Ember.js 2.8 and 2.9 Beta Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/09/08/ember-2-8-and-2-9-beta-released.html&quot; title=&quot;Ember.js - Ember.js 2.8 and 2.9 Beta Released&quot;&gt;emberjs.com/blog/2016/09/08/ember-2-8-and-2-9-beta-released.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Ember.js 2.8と2.9βリリース&lt;br&gt;
2.8で&lt;code&gt;Ember.Engine&lt;/code&gt; APIを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jest-15.0:-new-defaults-for-jest-·-jest&quot;&gt;Jest 15.0: New Defaults for Jest · Jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/jest/blog/2016/09/01/jest-15.html&quot; title=&quot;Jest 15.0: New Defaults for Jest · Jest&quot;&gt;facebook.github.io/jest/blog/2016/09/01/jest-15.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Jest 15.0リリース。&lt;br&gt;
CLIの表示を改善、Watchコマンドを追加、jest-react-nativeの改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.32.0-·-facebook/flow&quot;&gt;Release v0.32.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.32.0&quot; title=&quot;Release v0.32.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.32.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Flow 0.32.0リリース&lt;br&gt;
&lt;code&gt;{|&lt;/code&gt;と&lt;code&gt;|}&lt;/code&gt;を使ったexact object typeの追加、&lt;code&gt;flow gen-flow-files&lt;/code&gt;コマンドの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v3.5.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v3.5.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/09/eslint-v3.5.0-released&quot; title=&quot;ESLint v3.5.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/09/eslint-v3.5.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 3.5.0リリース。&lt;br&gt;
新しいルールの追加、&lt;code&gt;--fix&lt;/code&gt;の対応ルールの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/875c801362f337bc4ce9&quot; title=&quot;ESLint v3.5.0 - Qiita&quot;&gt;ESLint v3.5.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-release-4.0.0-·-ternjs/acorn&quot;&gt;Release Release 4.0.0 · ternjs/acorn&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ternjs/acorn/releases/tag/4.0.0&quot; title=&quot;Release Release 4.0.0 · ternjs/acorn&quot;&gt;github.com/ternjs/acorn/releases/tag/4.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;acorn 4.0.0リリース。&lt;br&gt;
デフォルトの&lt;code&gt;ecmaVersion&lt;/code&gt;が&lt;code&gt;7&lt;/code&gt;となり、async/awaitの構文をサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;es2015で始めるjavascript入門---qiita&quot;&gt;ES2015で始めるJavaScript入門 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/ABCanG1015/items/824681cb88676da4f9a8&quot; title=&quot;ES2015で始めるJavaScript入門 - Qiita&quot;&gt;qiita.com/ABCanG1015/items/824681cb88676da4f9a8&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2015ベースでJavaScriptについて学ぶレッスン式のチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;わぁいアリア（wai-aria）大好き-|-れいぶろぐ&quot;&gt;わぁいアリア（WAI-ARIA）大好き | れいぶろぐ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://labe.wp.xdomain.jp/post/567&quot; title=&quot;わぁいアリア（WAI-ARIA）大好き | れいぶろぐ&quot;&gt;labe.wp.xdomain.jp/post/567&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WAI-ARIA&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WAI-ARIAはどんなもので何のためにあるのかを分かりやすく解説してる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;service-worker-の紹介-|-web-fundamentals---google-developers&quot;&gt;Service Worker の紹介 | Web Fundamentals - Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-worker/&quot; title=&quot;Service Worker の紹介 | Web Fundamentals - Google Developers&quot;&gt;developers.google.com/web/fundamentals/primers/service-worker/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Service Workerについての紹介記事翻訳&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;service-workerの基本とそれを使ってできること---qiita&quot;&gt;Service Workerの基本とそれを使ってできること - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/y_fujieda/items/f9e765ac9d89ba241154&quot; title=&quot;Service Workerの基本とそれを使ってできること - Qiita&quot;&gt;qiita.com/y_fujieda/items/f9e765ac9d89ba241154&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Service Workerのライフサイクルやどのような事ができるかの紹介記事。&lt;br&gt;
Cache、Pushについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flowtype-v0.32.0-changes---please-drive-faster&quot;&gt;flowtype v0.32.0 changes - Please Drive Faster&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://joe-re.hatenablog.com/entry/2016/09/06/101529&quot; title=&quot;flowtype v0.32.0 changes - Please Drive Faster&quot;&gt;joe-re.hatenablog.com/entry/2016/09/06/101529&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptファイルからFlowの型定義ファイルを生成する&lt;code&gt;gen-flow-files&lt;/code&gt;コマンドについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;untangling-deeply-nested-promise-chains-—-philip-walton&quot;&gt;Untangling Deeply-Nested Promise Chains — Philip Walton&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://philipwalton.com/articles/untangling-deeply-nested-promise-chains/&quot; title=&quot;Untangling Deeply-Nested Promise Chains — Philip Walton&quot;&gt;philipwalton.com/articles/untangling-deeply-nested-promise-chains/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Promiseでネストが深くなったものを、関数へ分割やasync/awaitを使いネストを浅くリファクタリングする話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;d3-v4---what&amp;#39;s-new?&quot;&gt;D3 V4 - What&amp;#39;s new?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://iros.github.io/d3-v4-whats-new/#1&quot; title=&quot;D3 V4 - What&amp;#39;s new?&quot;&gt;iros.github.io/d3-v4-whats-new/#1&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;d3.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;D3.js v4についてのスライド。&lt;br&gt;
モジュール分割、Canvasへの書き出し、分割されたモジュール毎の解説&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;devtools-timeline-viewer&quot;&gt;DevTools Timeline Viewer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://chromedevtools.github.io/timeline-viewer/&quot; title=&quot;DevTools Timeline Viewer&quot;&gt;chromedevtools.github.io/timeline-viewer/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chromeの開発者ツールのTimelineデータを読み込ませて表示できるサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft/dts-gen:-dts-gen-creates-starter-typescript-definition-files-for-any-module-or-library.&quot;&gt;Microsoft/dts-gen: dts-gen creates starter TypeScript definition files for any module or library.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Microsoft/dts-gen&quot; title=&quot;Microsoft/dts-gen: dts-gen creates starter TypeScript definition files for any module or library.&quot;&gt;github.com/Microsoft/dts-gen&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npmパッケージやコードからd.tsを自動生成してくれるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fuse.js---javascript-fuzzy-search-library&quot;&gt;Fuse.js - JavaScript fuzzy-search library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://fusejs.io/&quot; title=&quot;Fuse.js - JavaScript fuzzy-search library&quot;&gt;fusejs.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;検索&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;データからあいまい検索を行えるJavaScriptライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ebidel/appmetrics.js:-a-small-(1.1kb)-library-for-measuring-things-in-your-web-app-and-reporting-the-results-to-google-analytics.&quot;&gt;ebidel/appmetrics.js: A small (1.1kb) library for measuring things in your web app and reporting the results to Google Analytics.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ebidel/appmetrics.js&quot; title=&quot;ebidel/appmetrics.js: A small (1.1kb) library for measuring things in your web app and reporting the results to Google Analytics.&quot;&gt;github.com/ebidel/appmetrics.js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アクセス解析&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;User Timing APIを使って計測したデータをGoogle Analyticsにレポートできるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jgornick/asyncp:-port-of-the-async.js-api-to-use-promises&quot;&gt;jgornick/asyncp: Port of the Async.js API to use Promises&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jgornick/asyncp&quot; title=&quot;jgornick/asyncp: Port of the Async.js API to use Promises&quot;&gt;github.com/jgornick/asyncp&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async.jsのAPIをPromiseを使って実装したライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript:-the-new-toys:-t.-j.-crowder:-9781119367956:-amazon.com:-books&quot;&gt;JavaScript: The New Toys: T. J. Crowder: 9781119367956: Amazon.com: Books&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/JavaScript-Toys-T-J-Crowder/dp/1119367956&quot; title=&quot;JavaScript: The New Toys: T. J. Crowder: 9781119367956: Amazon.com: Books&quot;&gt;www.amazon.com/JavaScript-Toys-T-J-Crowder/dp/1119367956&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2017年4月10日発売&lt;br&gt;
ES2015+についての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;改訂新版javascript本格入門　～モダンスタイルによる基礎から現場での応用まで：書籍案内｜技術評論社&quot;&gt;改訂新版JavaScript本格入門　～モダンスタイルによる基礎から現場での応用まで：書籍案内｜技術評論社&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://gihyo.jp/book/2016/978-4-7741-8411-1&quot; title=&quot;改訂新版JavaScript本格入門　～モダンスタイルによる基礎から現場での応用まで：書籍案内｜技術評論社&quot;&gt;gihyo.jp/book/2016/978-4-7741-8411-1&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年9月30日発売&lt;br&gt;
JavaScript本格入門の改訂版&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://gihyo.jp/book/2010/978-4-7741-4466-5&quot; title=&quot;JavaScript本格入門　～モダンスタイルによる基礎からAjax・jQueryまで：書籍案内｜技術評論社&quot;&gt;JavaScript本格入門　～モダンスタイルによる基礎からAjax・jQueryまで：書籍案内｜技術評論社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 12 Sep 2016 20:19:00 +0900</pubDate>
        <link>http://jser.info/2016/09/12/polymer-20aservice-workerjs/</link>
        <guid isPermaLink="true">http://jser.info/2016/09/12/polymer-20aservice-workerjs/</guid>
        
        <category>Polymer</category>
        
        <category>WebComponent</category>
        
        <category>ServiceWorker</category>
        
        <category>Flow</category>
        
        <category>TypeScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-09-05のJS: Babili α、TypeScript 2.0 RC、Sass 3.5 RC</title>
        <description>&lt;p&gt;JSer.info #295 - TypeScript 2.0 RCがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/08/30/announcing-typescript-2-0-rc/&quot; title=&quot;Announcing TypeScript 2.0 RC | TypeScript&quot;&gt;Announcing TypeScript 2.0 RC | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#typescript-20&quot; title=&quot;What&amp;amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&quot;&gt;What&amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;--strictNullChecks&lt;/code&gt;でのnullチェックや&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#tagged-union-types&quot; title=&quot;Tagged union types&quot;&gt;Tagged union types&lt;/a&gt;の、&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#glob-support-in-tsconfigjson&quot;&gt;tsconfig.jsonがglobをサポート&lt;/a&gt;など色々強化されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Babelのプラグインとしてminifyを行う&lt;a href=&quot;https://github.com/babel/babili&quot; title=&quot;babili&quot;&gt;babili&lt;/a&gt;がαリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/blog/2016/08/30/babili&quot; title=&quot;Babili (babel-minify) · Babel&quot;&gt;Babili (babel-minify) · Babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ES2015+のコードに対して圧縮や未使用コードの削除などを行うBabelプラグインとなっています。&lt;br&gt;
Rollupやwebpackはbundleツールなので少し領域が異なりますが、&lt;a href=&quot;https://github.com/mishoo/UglifyJS2&quot;&gt;UglifyJS2&lt;/a&gt;のようなツールに対抗できるポジションを目指しているようです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;CSSメタ言語のSass 3.5RCがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.sass-lang.com/posts/809572-sass-35-release-candidate&quot; title=&quot;Sass 3.5 Release Candidate « Sass Blog&quot;&gt;Sass 3.5 Release Candidate « Sass Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;C++で実装しなおした&lt;a href=&quot;http://sass-lang.com/libsass&quot; title=&quot;LibSass&quot;&gt;LibSass&lt;/a&gt;がRuby版と殆ど100％の互換性となったようです。&lt;br&gt;
3.5ではCSS Custom Property、First-Class Functions、Bracketed Listsなどのサポートが追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;esprima/changelog-at-3.0.0-·-jquery/esprima&quot;&gt;esprima/ChangeLog at 3.0.0 · jquery/esprima&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jquery/esprima/blob/3.0.0/ChangeLog&quot; title=&quot;esprima/ChangeLog at 3.0.0 · jquery/esprima&quot;&gt;github.com/jquery/esprima/blob/3.0.0/ChangeLog&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AST&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;esprima 3.0.0リリース。&lt;br&gt;
ES2016 &lt;code&gt;**&lt;/code&gt; をサポート、JSXのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sass-3.5-release-candidate-«-sass-blog&quot;&gt;Sass 3.5 Release Candidate « Sass Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.sass-lang.com/posts/809572-sass-35-release-candidate&quot; title=&quot;Sass 3.5 Release Candidate « Sass Blog&quot;&gt;blog.sass-lang.com/posts/809572-sass-35-release-candidate&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Sass&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Sass 3.5 RCリリース。&lt;br&gt;
libsassがRuby版とほぼ100％の互換性を持つように。&lt;br&gt;
CSS Custom Propertyのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdom/changelog.md-at-9.5.0-·-tmpvar/jsdom&quot;&gt;jsdom/Changelog.md at 9.5.0 · tmpvar/jsdom&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tmpvar/jsdom/blob/9.5.0/Changelog.md&quot; title=&quot;jsdom/Changelog.md at 9.5.0 · tmpvar/jsdom&quot;&gt;github.com/tmpvar/jsdom/blob/9.5.0/Changelog.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdom 9.5.0リリース。&lt;br&gt;
&lt;code&gt;document.scripts&lt;/code&gt;、 &lt;code&gt;document.embeds&lt;/code&gt;と &lt;code&gt;document.plugins&lt;/code&gt;の追加。&lt;br&gt;
&lt;code&gt;document.getElementsByTagName&lt;/code&gt;が&lt;code&gt;HTMLCollection&lt;/code&gt;を返すようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-2-rc6&quot;&gt;Angular 2 RC6&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.com/2016/09/angular-2-rc6_1.html&quot; title=&quot;Angular 2 RC6&quot;&gt;angularjs.blogspot.com/2016/09/angular-2-rc6_1.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Angular 2 RC6リリース&lt;br&gt;
RC5以下で非推奨となっていたAPIの削除、npmパッケージにES6 modules形式のソースを含むように、TypeScript 2.0に対応など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ng2-info.github.io/2016/09/angular-2-rc-6/&quot; title=&quot;Angular 2 RC.6がリリースされました · Angular2 Info&quot;&gt;Angular 2 RC.6がリリースされました · Angular2 Info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md#200-rc6-2016-08-31&quot; title=&quot;angular/CHANGELOG.md at master · angular/angular&quot;&gt;angular/CHANGELOG.md at master · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-release-12-|-webkit&quot;&gt;Release Notes for Safari Technology Preview Release 12 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6928/release-notes-for-safari-technology-preview-release-12/&quot; title=&quot;Release Notes for Safari Technology Preview Release 12 | WebKit&quot;&gt;webkit.org/blog/6928/release-notes-for-safari-technology-preview-release-12/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 12リリース。&lt;br&gt;
Fetch APIがデフォルトで有効に、Resource Timingの仕様追従など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v6.5.0-(current)-|-node.js&quot;&gt;Node v6.5.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.5.0/&quot; title=&quot;Node v6.5.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v6.5.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node v6.5.0リリース。&lt;br&gt;
inspectorがuncaught exceptionをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-2.0-rc-|-typescript&quot;&gt;Announcing TypeScript 2.0 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/08/30/announcing-typescript-2-0-rc/&quot; title=&quot;Announcing TypeScript 2.0 RC | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2016/08/30/announcing-typescript-2-0-rc/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.0 RCリリース。&lt;br&gt;
Tagged Unions、numberとstringのLiteral Typeを強化、tsconfig.jsonでglobの対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babili-(babel-minify)-·-babel&quot;&gt;Babili (babel-minify) · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2016/08/30/babili&quot; title=&quot;Babili (babel-minify) · Babel&quot;&gt;babeljs.io/blog/2016/08/30/babili&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;BabelのminifyプラグインであるBabili βリリース。&lt;br&gt;
Uglifyと違って変換後のES5なコードではなく、ES2015+のコードに対して圧縮を行う。&lt;br&gt;
そのためFlowなどの型情報を使った圧縮なども可能になる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-case-for-custom-elements:-part-1-–-dev-channel-–-medium&quot;&gt;The Case for Custom Elements: Part 1 – Dev Channel – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/dev-channel/the-case-for-custom-elements-part-1-65d807b4b439&quot; title=&quot;The Case for Custom Elements: Part 1 – Dev Channel – Medium&quot;&gt;medium.com/dev-channel/the-case-for-custom-elements-part-1-65d807b4b439&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Custome Elementのケーススタディ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;15k-行のアプリを-typescript-1.8-から-2.0-に移行してみた---はやくプログラムになりたい&quot;&gt;15K 行のアプリを TypeScript 1.8 から 2.0 に移行してみた - はやくプログラムになりたい&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://rhysd.hatenablog.com/entry/2016/07/15/090000&quot; title=&quot;15K 行のアプリを TypeScript 1.8 から 2.0 に移行してみた - はやくプログラムになりたい&quot;&gt;rhysd.hatenablog.com/entry/2016/07/15/090000&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2系への移行とオプションについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-new-code-–-web-developer-reading-list:-maths-in-javascript&quot;&gt;the new code – Web Developer Reading List: Maths in JavaScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://thenewcode.com/1131/Web-Developer-Reading-List-Maths-in-JavaScript&quot; title=&quot;the new code – Web Developer Reading List: Maths in JavaScript&quot;&gt;thenewcode.com/1131/Web-Developer-Reading-List-Maths-in-JavaScript&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Mathについての学ぶチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reactの最新動向とベストプラクティス-//-speaker-deck&quot;&gt;Reactの最新動向とベストプラクティス // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/koba04/reactfalsezui-xin-dong-xiang-tobesutopurakuteisu&quot; title=&quot;Reactの最新動向とベストプラクティス // Speaker Deck&quot;&gt;speakerdeck.com/koba04/reactfalsezui-xin-dong-xiang-tobesutopurakuteisu&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactのコンポーネントの作り方やテスト、React周りで最近でてきたツールについてのスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;service-worker-deep-dive---google-スライド&quot;&gt;Service Worker Deep Dive - Google スライド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/19x3yi7Jn-6In5igGYfEiK0tBfNI290BAclT0AiqDj4Q/pub#slide=id.p&quot; title=&quot;Service Worker Deep Dive - Google スライド&quot;&gt;docs.google.com/presentation/d/19x3yi7Jn-6In5igGYfEiK0tBfNI290BAclT0AiqDj4Q/pub#slide=id.p&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ここ1年ぐらいのService Worker周りの変化についてのスライド。&lt;br&gt;
Push Notification、Stream、Background、Foreign Fetch、Header-based Install、Origin Trialなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;edge-web-technologies-and-browser-vendors&quot;&gt;Edge Web Technologies and Browser Vendors&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/dynamis/edge-web-technologies-and-browser-vendors&quot; title=&quot;Edge Web Technologies and Browser Vendors&quot;&gt;www.slideshare.net/dynamis/edge-web-technologies-and-browser-vendors&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ここ最近のウェブブラウザの変化についてのスライド。&lt;br&gt;
ウェブ互換性への方針、新しい機能などについてざっくりと紹介されている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wai-aria珍プレー好プレー&quot;&gt;WAI-ARIA珍プレー好プレー&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/mlca11y/waiaria-65618928&quot; title=&quot;WAI-ARIA珍プレー好プレー&quot;&gt;www.slideshare.net/mlca11y/waiaria-65618928&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WAI-ARIA&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;WAI-ARIAは表現やインタラクションを変えない&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;role=&amp;quot;button&amp;quot;を付けてキーボードによるインタラクションを忘れているケース、メニューの例などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;html-best-practices/readme.ja.md-at-master-·-hail2u/html-best-practices&quot;&gt;html-best-practices/README.ja.md at master · hail2u/html-best-practices&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/hail2u/html-best-practices/blob/master/README.ja.md&quot; title=&quot;html-best-practices/README.ja.md at master · hail2u/html-best-practices&quot;&gt;github.com/hail2u/html-best-practices/blob/master/README.ja.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;HTML Best Practices日本語訳&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hail2u.net/blog/webdesign/html-best-practices-in-japanese.html&quot; title=&quot;普通のHTMLの書き方（またはHTML Best Practices日本語版） - Weblog - Hail2u.net&quot;&gt;普通のHTMLの書き方（またはHTML Best Practices日本語版） - Weblog - Hail2u.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ssvvgg.net/post/147494232850/html5%E3%81%AEsvg%E8%A6%81%E7%B4%A0%E3%81%A7%E3%81%AF%E5%90%8D%E5%89%8D%E7%A9%BA%E9%96%93%E5%AE%A3%E8%A8%80%E3%81%8C%E7%9C%81%E7%95%A5%E3%81%A7%E3%81%8D%E3%82%8B&quot; title=&quot;HTML5のSVG要素では名前空間宣言が省略できる - 週刊SVG&quot;&gt;HTML5のSVG要素では名前空間宣言が省略できる - 週刊SVG&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;top-|-diff-of-htmls&quot;&gt;Top | Diff of HTMLs&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://diffofhtmls.herokuapp.com/&quot; title=&quot;Top | Diff of HTMLs&quot;&gt;diffofhtmls.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WHATWGとW3C HTMLのdiffを見ることができるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;async-redux-actions-with-rxjs---react-rally-2016&quot;&gt;Async Redux Actions With RxJS - React Rally 2016&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/benlesh1/async-redux-actions-with-rxjs-react-rally-2016&quot; title=&quot;Async Redux Actions With RxJS - React Rally 2016&quot;&gt;www.slideshare.net/benlesh1/async-redux-actions-with-rxjs-react-rally-2016&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;redux-observable&lt;/em&gt;についてのスライド。&lt;br&gt;
Reduxにおいて非同期処理を行う場合に、連続性やCancelなどを表現しやすいRxJSを使うという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/redux-observable/redux-observable&quot; title=&quot;redux-observable/redux-observable: RxJS middleware for action side effects in Redux using &amp;amp;amp;#34;Epics&amp;amp;amp;#34;&quot;&gt;redux-observable/redux-observable: RxJS middleware for action side effects in Redux using &amp;amp;#34;Epics&amp;amp;#34;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;camwiegert/in-view:-get-notified-when-a-dom-element-enters-or-exits-the-viewport.&quot;&gt;camwiegert/in-view: Get notified when a DOM element enters or exits the viewport.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/camwiegert/in-view&quot; title=&quot;camwiegert/in-view: Get notified when a DOM element enters or exits the viewport.&quot;&gt;github.com/camwiegert/in-view&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ある要素がviewportに含まれているかを判定して、入った時と出た時のハンドラを書けるライブラリ。&lt;br&gt;
将来的にIntersectionObserverへも対応予定&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dollarshaveclub/postmate:-a-powerful,-simple,-promise-based-postmessage-library-📭-📨-📬-📫-🚚&quot;&gt;dollarshaveclub/postmate: A powerful, simple, promise-based postMessage library 📭 📨 📬 📫 🚚&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dollarshaveclub/postmate&quot; title=&quot;dollarshaveclub/postmate: A powerful, simple, promise-based postMessage library 📭 📨 📬 📫 🚚&quot;&gt;github.com/dollarshaveclub/postmate&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PromiseベースのpostMessageライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sdkennedy/babel-preset-target:-babel-preset-that-allows-for-target-environments-to-be-specified-along-with-plugins-and-presets.-if-all-environments-have-native-support-for-a-given-plugin,-it-will-be-skipped.&quot;&gt;sdkennedy/babel-preset-target: Babel preset that allows for target environments to be specified along with plugins and presets. If all environments have native support for a given plugin, it will be skipped.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sdkennedy/babel-preset-target&quot; title=&quot;sdkennedy/babel-preset-target: Babel preset that allows for target environments to be specified along with plugins and presets. If all environments have native support for a given plugin, it will be skipped.&quot;&gt;github.com/sdkennedy/babel-preset-target&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;サポートするブラウザを指定することで、対応したBabel pluginでの変換をしてくれるbabel preset&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-2-router-by-victor-savkin-[leanpub-pdf/ipad/kindle]&quot;&gt;Angular 2 Router by Victor Savkin [Leanpub PDF/iPad/Kindle]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://leanpub.com/router&quot; title=&quot;Angular 2 Router by Victor Savkin \[Leanpub PDF/iPad/Kindle\]&quot;&gt;leanpub.com/router&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS 2のRouterについての電子書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 05 Sep 2016 19:41:00 +0900</pubDate>
        <link>http://jser.info/2016/09/05/babili-atypescript20-rcsass-35-rc/</link>
        <guid isPermaLink="true">http://jser.info/2016/09/05/babili-atypescript20-rcsass-35-rc/</guid>
        
        <category>Sass</category>
        
        <category>Babel</category>
        
        <category>TypeScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-08-30のJS: pixi.js 4.0.0、Babel 6.14.0、JSフレームワークアンケート</title>
        <description>&lt;p&gt;JSer.info #294 - WebGLやCanvasを使った2Dレンダリングエンジンのpixi.js 4.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pixijs/pixi.js/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · pixijs/pixi.js&quot;&gt;Release v4.0.0 · pixijs/pixi.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.goodboydigital.com/pixi-js-v4/&quot;&gt;RCリリース時の記事&lt;/a&gt;でも紹介されていますが、&lt;br&gt;
Multi texture rendereringのサポート、GPU GC管理、WebGLレンダーの改善などが行われています。&lt;br&gt;
また、コア部分が&lt;a href=&quot;https://github.com/pixijs/pixi-gl-core&quot; title=&quot;pixi-gl-core&quot;&gt;pixi-gl-core&lt;/a&gt;として公開されたり、&lt;br&gt;
npm周りの整備がされています。&lt;/p&gt;

&lt;p&gt;移行ガイドラインについてはまだありませんが、ドキュメントが予定されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pixijs/pixi.js/issues/2867&quot; title=&quot;Migration guide v3-&amp;amp;gt;v4 · Issue #2867 · pixijs/pixi.js&quot;&gt;Migration guide v3-&amp;gt;v4 · Issue #2867 · pixijs/pixi.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;バグ修正も行われていますが4.0になって増えたバグもあるので、それらの修正を含めた4.1のリリースが予定されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pixijs/pixi.js/issues?q=is%3Aopen+is%3Aissue+milestone%3Av4.1&quot; title=&quot;Issues · pixijs/pixi.js&quot;&gt;Issues · pixijs/pixi.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Babel &lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.14.0&quot; title=&quot;6.14.0&quot;&gt;6.14.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://babeljs.io/blog/2016/08/24/6.14.0&quot; title=&quot;6.14.0 Released · Babel&quot;&gt;6.14.0 Released · Babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;新しく &lt;code&gt;latest&lt;/code&gt; と &lt;code&gt;es2017&lt;/code&gt; のpresetが追加されています。&lt;br&gt;
&lt;code&gt;latest&lt;/code&gt; presetはES2015+ (ES2015, ES2016, ES2017)のものが含まれていて、ECMAScriptの新しいバージョンが追加されている方式となっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@sachagreif/the-state-of-javascript-front-end-frameworks-1a2d8a61510&quot; title=&quot;The State Of JavaScript: Front-End Frameworks – Medium&quot;&gt;The State Of JavaScript: Front-End Frameworks – Medium&lt;/a&gt;という記事ではJavaScriptのフレームワークについてのアンケート結果が公開されています。&lt;br&gt;
&lt;a href=&quot;http://stateofjs.com/&quot; title=&quot;The State Of JavaScript&quot;&gt;The State Of JavaScript&lt;/a&gt;にて行われたもので、著名なフレームワーク/ライブラリごとに興味や満足度について調べたものです。&lt;/p&gt;

&lt;p&gt;対象となっていたフレームワーク/ライブラリは次の6つとなっています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React&lt;/li&gt;
&lt;li&gt;Angular&lt;/li&gt;
&lt;li&gt;Angular 2&lt;/li&gt;
&lt;li&gt;Ember&lt;/li&gt;
&lt;li&gt;Vue&lt;/li&gt;
&lt;li&gt;Backbone&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この記事ではそのアンケート結果が公開されています。&lt;/p&gt;

&lt;p&gt;候補となったものでVue以外は殆どの人が知っていて、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;学びたいもの: React -&amp;gt; Vue -&amp;gt; Angular2&lt;/li&gt;
&lt;li&gt;満足度: React -&amp;gt; Vue -&amp;gt; Angular2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という結果になっています。&lt;/p&gt;

&lt;p&gt;詳しくは、&lt;a href=&quot;https://medium.com/@sachagreif/the-state-of-javascript-front-end-frameworks-1a2d8a61510&quot; title=&quot;The State Of JavaScript: Front-End Frameworks – Medium&quot;&gt;The State Of JavaScript: Front-End Frameworks – Medium&lt;/a&gt;を参照してください。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4.0.0-·-pixijs/pixi.js&quot;&gt;Release v4.0.0 · pixijs/pixi.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pixijs/pixi.js/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · pixijs/pixi.js&quot;&gt;github.com/pixijs/pixi.js/releases/tag/v4.0.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;pixi.js 4.0.0リリース&lt;br&gt;
Multi texture rendereringのサポート、GPU GC管理、WebGLレンダーの改善、npmでパッケージの公開など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.goodboydigital.com/pixi-js-v4/&quot; title=&quot;PixiJS v4 Arrives - Goodboy™ — Goodboy™&quot;&gt;PixiJS v4 Arrives - Goodboy™ — Goodboy™&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.14.0-·-babel/babel&quot;&gt;Release v6.14.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.14.0&quot; title=&quot;Release v6.14.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.14.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel 6.14.0リリース。&lt;br&gt;
&lt;code&gt;es2017&lt;/code&gt; presetと、ES2015+を扱う&lt;code&gt;latest&lt;/code&gt; presetが追加された。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-javascript:-front-end-frameworks-–-medium&quot;&gt;The State Of JavaScript: Front-End Frameworks – Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@sachagreif/the-state-of-javascript-front-end-frameworks-1a2d8a61510&quot; title=&quot;The State Of JavaScript: Front-End Frameworks – Medium&quot;&gt;medium.com/@sachagreif/the-state-of-javascript-front-end-frameworks-1a2d8a61510&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのフレームワークについてアンケート結果。&lt;br&gt;
認知度はVue以外大体同じ。&lt;br&gt;
学びたいもの: React -&amp;gt; Vue -&amp;gt; Angular2&lt;br&gt;
満足度: React -&amp;gt; Vue -&amp;gt; Angular2&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stateofjs.com/&quot; title=&quot;The State Of JavaScript&quot;&gt;The State Of JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;enable-chrome-accessibility-experiment&quot;&gt;Enable Chrome Accessibility Experiment&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/marcysutton/0a42f815878c159517a55e6652e3b23a&quot; title=&quot;Enable Chrome Accessibility Experiment&quot;&gt;gist.github.com/marcysutton/0a42f815878c159517a55e6652e3b23a&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chromeの試験的なAccessibility inspectorを有効にする方法。&lt;br&gt;
要素に対するWAI-ARIAの情報をElementsパネルで見ることができる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;demythstifying-web-components-–-back-alley-coder&quot;&gt;Demythstifying Web Components – Back Alley Coder&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.backalleycoder.com/2016/08/26/demythstifying-web-components/&quot; title=&quot;Demythstifying Web Components – Back Alley Coder&quot;&gt;www.backalleycoder.com/2016/08/26/demythstifying-web-components/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Componentsに関するよくある誤解について書かれたもの&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-use-webpagetest-and-its-api-|-css-tricks&quot;&gt;How To Use WebPageTest and its API | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/use-webpagetest-api/&quot; title=&quot;How To Use WebPageTest and its API | CSS-Tricks&quot;&gt;css-tricks.com/use-webpagetest-api/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;API&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebPageTest APIを使ったメトリクスについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;three-ways-to-test-angular-2-components-–-angular-2&quot;&gt;Three Ways to Test Angular 2 Components – Angular 2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://vsavkin.com/three-ways-to-test-angular-2-components-dcea8e90bd8d&quot; title=&quot;Three Ways to Test Angular 2 Components – Angular 2&quot;&gt;vsavkin.com/three-ways-to-test-angular-2-components-dcea8e90bd8d&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS 2のコンポーネントをテストする方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;you-should-learn-vanilla-javascript-before-js-frameworks---snipcart&quot;&gt;You SHOULD Learn Vanilla JavaScript Before JS Frameworks - Snipcart&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://snipcart.com/blog/learn-vanilla-javascript-before-using-js-frameworks&quot; title=&quot;You SHOULD Learn Vanilla JavaScript Before JS Frameworks - Snipcart&quot;&gt;snipcart.com/blog/learn-vanilla-javascript-before-using-js-frameworks&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;thought&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;フレームワークを学ぶ前にJavaScriptを学ぼうという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsdoc-to-assert-を試す-–-アカベコマイリ&quot;&gt;jsdoc-to-assert を試す – アカベコマイリ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://akabeko.me/blog/2016/08/jsdoc-to-assert/&quot; title=&quot;jsdoc-to-assert を試す – アカベコマイリ&quot;&gt;akabeko.me/blog/2016/08/jsdoc-to-assert/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jsdoc-to-assertでのランタイムassertの導入について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;型定義ベースのアサーションライブラリ-types-assert-を書いた---qiita&quot;&gt;型定義ベースのアサーションライブラリ types-assert を書いた - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/KeitaMoromizato/items/e49185a0cd03c6cb8b3a&quot; title=&quot;型定義ベースのアサーションライブラリ types-assert を書いた - Qiita&quot;&gt;qiita.com/KeitaMoromizato/items/e49185a0cd03c6cb8b3a&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptの型定義ファイルを使ったassertionライブラリ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/KeitaMoromizato/types-assert&quot; title=&quot;KeitaMoromizato/types-assert: type-assert is dynamic type assertion library&quot;&gt;KeitaMoromizato/types-assert: type-assert is dynamic type assertion library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;from-mvc-to-flux---js-monthly-london---youtube&quot;&gt;From MVC to Flux - JS Monthly London - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=p8tqhf5qKOI&quot; title=&quot;From MVC to Flux - JS Monthly London - YouTube&quot;&gt;www.youtube.com/watch?v=p8tqhf5qKOI&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Flux&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;改めてFluxとはどういうコンセプトなのか、同様のコアコンセプトを持つReduxについての紹介&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.pusher.com/from-mvc-to-flux/&quot; title=&quot;From MVC to Flux - Pusher Blog&quot;&gt;From MVC to Flux - Pusher Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thejameskyle/itsy-bitsy-data-structures:-all-the-things-you-didn&amp;#x27;t-know-you-wanted-to-know-about-data-structures&quot;&gt;thejameskyle/itsy-bitsy-data-structures: All the things you didn&amp;#x27;t know you wanted to know about data structures&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/thejameskyle/itsy-bitsy-data-structures&quot; title=&quot;thejameskyle/itsy-bitsy-data-structures: All the things you didn&amp;#39;t know you wanted to know about data structures&quot;&gt;github.com/thejameskyle/itsy-bitsy-data-structures&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アルゴリズム&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでリスト、ハッシュテーブル、スタックなどのデータ構造についての実装と解説リポジトリ。&lt;br&gt;
それぞれの探索のコストや特徴などの解説がコメントに書かれている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=nI0cQ-2YR1I&quot; title=&quot;React Rally Day 2 - YouTube&quot;&gt;React Rally Day 2 - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sam---state-|-action-|-model&quot;&gt;SAM - State | Action | Model&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://sam.js.org/&quot; title=&quot;SAM - State | Action | Model&quot;&gt;sam.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;デザインパターン&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SAM (State-Action-Model)についてのドキュメントサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel/babel-minify:-babel-preset-for-minification-(alpha)&quot;&gt;babel/babel-minify: Babel preset for minification (Alpha)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel-minify&quot; title=&quot;babel/babel-minify: Babel preset for minification (Alpha)&quot;&gt;github.com/babel/babel-minify&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babelのminify plugin preset&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google/closure-compiler-js:-package-for-the-js-version-of-closure-compiler-for-use-via-npm&quot;&gt;google/closure-compiler-js: Package for the JS version of closure-compiler for use via npm&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/google/closure-compiler-js&quot; title=&quot;google/closure-compiler-js: Package for the JS version of closure-compiler for use via npm&quot;&gt;github.com/google/closure-compiler-js&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Closure Compilerの一部機能を使えるツール。JavaScriptへのコンパイル済みファイルを含んでいるので、Javaを必要としない。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reactjs/react-docgen:-a-cli-and-toolbox-to-extract-information-from-react-component-files-for-documentation-generation-purposes.&quot;&gt;reactjs/react-docgen: A CLI and toolbox to extract information from React component files for documentation generation purposes.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/reactjs/react-docgen&quot; title=&quot;reactjs/react-docgen: A CLI and toolbox to extract information from React component files for documentation generation purposes.&quot;&gt;github.com/reactjs/react-docgen&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactのpropTypesなどをパースしてASTとして取得できるライブラリ/CLI&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;pakastin/redom:-tiny-dom-library&quot;&gt;pakastin/redom: Tiny DOM library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pakastin/redom&quot; title=&quot;pakastin/redom: Tiny DOM library&quot;&gt;github.com/pakastin/redom&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;DOM APIを使った小さなコンポーネントライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nolanlawson/slow-deps:-🐌-measure-which-dependencies-in-a-project-are-slowest-to-npm-install&quot;&gt;nolanlawson/slow-deps: 🐌 Measure which dependencies in a project are slowest to npm install&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nolanlawson/slow-deps&quot; title=&quot;nolanlawson/slow-deps: 🐌 Measure which dependencies in a project are slowest to npm install&quot;&gt;github.com/nolanlawson/slow-deps&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npmの依存モジュールがそれぞれどれくらいのインストール時間やサイズなのかを計測出来るツール&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;fluent-javascript-|-packt-books&quot;&gt;Fluent JavaScript | PACKT Books&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.packtpub.com/web-development/fluent-javascript&quot; title=&quot;Fluent JavaScript | PACKT Books&quot;&gt;www.packtpub.com/web-development/fluent-javascript&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2017年4月6日発売&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B01F7HCB0C/&quot; title=&quot;Amazon | Fluent JavaScript \[Kindle edition\] by Callum Rimmer, Lucian Lature | Languages &amp;amp;amp;amp; Tools | Kindleストア&quot;&gt;Amazon | Fluent JavaScript [Kindle edition] by Callum Rimmer, Lucian Lature | Languages &amp;amp;amp; Tools | Kindleストア&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 30 Aug 2016 09:40:00 +0900</pubDate>
        <link>http://jser.info/2016/08/30/pixijs-babel-jsframwork/</link>
        <guid isPermaLink="true">http://jser.info/2016/08/30/pixijs-babel-jsframwork/</guid>
        
        <category>Canvas</category>
        
        <category>WebGL</category>
        
        <category>game</category>
        
        <category>Babel</category>
        
        <category>framwork</category>
        
        <category>survery</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-08-23のJS: Web Audio APIの変更点、AngularJS 2 RC5のNgModule、Property-based Testing</title>
        <description>&lt;p&gt;JSer.info #293 - &lt;a href=&quot;https://hacks.mozilla.org/2016/08/whats-new-in-web-audio-2/&quot;&gt;What’s new in Web Audio? ★ Mozilla Hacks – the Web developer blog&lt;/a&gt;（&lt;a href=&quot;https://dev.mozilla.jp/2016/08/whats-new-in-web-audio-2/&quot;&gt;翻訳&lt;/a&gt;）という記事では、ここ1年でのWeb Audio APIの変更点について書かれています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;DynamicsCompressorNode&lt;/code&gt;の仕様変更やライフサイクルメソッド(&lt;code&gt;suspend()&lt;/code&gt;,&lt;code&gt;resume()&lt;/code&gt;,&lt;code&gt;close()&lt;/code&gt;)の追加、&lt;code&gt;disconnect()&lt;/code&gt;の多重定義の追加など仕様的な変更についてまとめられています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.bokuweb.me/entry/angular2_rc5&quot; title=&quot;Angular2 RC5への更新とステート管理の変更、power-assertによるテストまで試す - undefined&quot;&gt;Angular2 RC5への更新とステート管理の変更、power-assertによるテストまで試す - undefined&lt;/a&gt;という記事では、&lt;a href=&quot;https://ng2-info.github.io/2016/08/angular-2-rc-5/&quot; title=&quot;Angular 2 RC5&quot;&gt;Angular 2 RC5&lt;/a&gt;で追加された&lt;a href=&quot;http://ng2-info.github.io/2016/07/preparing-for-ngmodule/&quot; title=&quot;NgModule&quot;&gt;NgModule&lt;/a&gt;を使った開発やテストについて書かれています。&lt;/p&gt;

&lt;p&gt;また&lt;a href=&quot;https://vsavkin.com/managing-state-in-angular-2-applications-caf78d123d02&quot; title=&quot;Tackling State — Angular 2&quot;&gt;Tackling State — Angular 2&lt;/a&gt;で紹介されているようなステート管理をどうやるかについても書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-inside/generative-testing-in-javascript-f91432247c27&quot; title=&quot;Generative Testing in JavaScript — JavaScript Inside — Medium&quot;&gt;Generative Testing in JavaScript — JavaScript Inside — Medium&lt;/a&gt;という記事ではJavaScriptでのProperty-based testingについて書かれています。&lt;/p&gt;

&lt;p&gt;Haskellの&lt;a href=&quot;https://wiki.haskell.org/Introduction_to_QuickCheck1&quot; title=&quot;QuickCheck&quot;&gt;QuickCheck&lt;/a&gt;などが有名で、JavaScriptにも&lt;a href=&quot;https://github.com/jsverify/jsverify&quot; title=&quot;jsverify&quot;&gt;jsverify&lt;/a&gt;や&lt;a href=&quot;https://github.com/leebyron/testcheck-js&quot; title=&quot;testcheck-js&quot;&gt;testcheck-js&lt;/a&gt;などの類似するライブラリがあったりします。&lt;/p&gt;

&lt;p&gt;この記事ではProperty-based testingというどういうテスト手法なのかやよく見るユニットテストとはどう違うのかなどについて書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v6.4.0-(current)-|-node.js&quot;&gt;Node v6.4.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v6.4.0/&quot; title=&quot;Node v6.4.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v6.4.0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node v6.4.0リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0.31.0-·-facebook/flow&quot;&gt;Release v0.31.0 · facebook/flow&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/flow/releases/tag/v0.31.0&quot; title=&quot;Release v0.31.0 · facebook/flow&quot;&gt;github.com/facebook/flow/releases/tag/v0.31.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Flow 0.31.0リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-release-11-|-webkit&quot;&gt;Release Notes for Safari Technology Preview Release 11 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6883/release-notes-for-safari-technology-preview-release-11/&quot; title=&quot;Release Notes for Safari Technology Preview Release 11 | WebKit&quot;&gt;webkit.org/blog/6883/release-notes-for-safari-technology-preview-release-11/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview Release 11リリース。&lt;br&gt;
&lt;code&gt;class extends null&lt;/code&gt;の挙動をES2016準拠に、&lt;code&gt;DOMTokenList.replace()&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webvr-1.0-available-in-firefox-nightly&quot;&gt;WebVR 1.0 available in Firefox Nightly&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.mozvr.com/webvr-1-0-available-in-firefox-nightly/&quot; title=&quot;WebVR 1.0 available in Firefox Nightly&quot;&gt;blog.mozvr.com/webvr-1-0-available-in-firefox-nightly/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VR&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebVR 1.0 APIがFirefoxのNightlyで利用できるように&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what’s-new-in-web-audio?-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;What’s new in Web Audio? ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/08/whats-new-in-web-audio-2/&quot; title=&quot;What’s new in Web Audio? ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/08/whats-new-in-web-audio-2/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ここ1年のWeb Audio APIの変更点について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.mozilla.jp/2016/08/whats-new-in-web-audio-2/&quot; title=&quot;What’s new in Web Audio? | Mozilla Developer Street (modest)&quot;&gt;What’s new in Web Audio? | Mozilla Developer Street (modest)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;generative-testing-in-javascript-—-javascript-inside-—-medium&quot;&gt;Generative Testing in JavaScript — JavaScript Inside — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-inside/generative-testing-in-javascript-f91432247c27&quot; title=&quot;Generative Testing in JavaScript — JavaScript Inside — Medium&quot;&gt;medium.com/javascript-inside/generative-testing-in-javascript-f91432247c27&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでのProperty-based Testingについて。&lt;br&gt;
そもそもどのようなアプローチのテスト手法なのかやtestcheck-jsなどの既存のライブラリについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/leebyron/testcheck-js&quot; title=&quot;testcheck-js&quot;&gt;testcheck-js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jsverify/jsverify&quot; title=&quot;jsverify/jsverify: Property-based testing for JavaScript. Like QuickCheck.&quot;&gt;jsverify/jsverify: Property-based testing for JavaScript. Like QuickCheck.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://unexpected.js.org/unexpected-check/&quot; title=&quot;unexpected-check&quot;&gt;unexpected-check&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance.markでパフォーマンス計測する-|-web-scratch&quot;&gt;performance.markでパフォーマンス計測する | Web Scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://efcl.info/2016/08/15/performance.mark/&quot; title=&quot;performance.markでパフォーマンス計測する | Web Scratch&quot;&gt;efcl.info/2016/08/15/performance.mark/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;performance.mark&lt;/code&gt;などのAPIを使ってある区間の処理時間を計測する方法や、パフォーマンスロガーの作り方などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular2-rc5への更新とステート管理の変更、power-assertによるテストまで試す---undefined&quot;&gt;Angular2 RC5への更新とステート管理の変更、power-assertによるテストまで試す - undefined&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.bokuweb.me/entry/angular2_rc5&quot; title=&quot;Angular2 RC5への更新とステート管理の変更、power-assertによるテストまで試す - undefined&quot;&gt;blog.bokuweb.me/entry/angular2_rc5&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS 2 RC5で導入されたNgModuleについてや、ステート管理について。&lt;br&gt;
また、&lt;code&gt;NgModule&lt;/code&gt;を使ったテストについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ng2-info.github.io/2016/08/angular-2-rc-5/&quot; title=&quot;Angular 2 RC.5がリリースされました · Angular2 Info&quot;&gt;Angular 2 RC.5がリリースされました · Angular2 Info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ng2-info.github.io/2016/07/preparing-for-ngmodule/&quot; title=&quot;NgModule導入について · Angular2 Info&quot;&gt;NgModule導入について · Angular2 Info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue.js-2.0のfeaturesを訳してみる---qiita&quot;&gt;Vue.js 2.0のFeaturesを訳してみる - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/prismrism/items/66a9dfc31139326911d8&quot; title=&quot;Vue.js 2.0のFeaturesを訳してみる - Qiita&quot;&gt;qiita.com/prismrism/items/66a9dfc31139326911d8&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue.js 2.0の変更点についての訳&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;writing-a-javascript-framework---execution-timing,-beyond-settimeout-|-@risingstack&quot;&gt;Writing a JavaScript Framework - Execution timing, beyond setTimeout | @RisingStack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.risingstack.com/writing-a-javascript-framework-execution-timing-beyond-settimeout/&quot; title=&quot;Writing a JavaScript Framework - Execution timing, beyond setTimeout | @RisingStack&quot;&gt;blog.risingstack.com/writing-a-javascript-framework-execution-timing-beyond-settimeout/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptの非同期実行に関する記事。&lt;br&gt;
ECMAScript、HTML、Node.jsそれぞれのjob queueの仕組みについて。&lt;br&gt;
それらを使ってどのようにレンダリングのイベントループを実装するかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-cost-of-small-modules-|-read-the-tea-leaves&quot;&gt;The cost of small modules | Read the Tea Leaves&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nolanlawson.com/2016/08/15/the-cost-of-small-modules/&quot; title=&quot;The cost of small modules | Read the Tea Leaves&quot;&gt;nolanlawson.com/2016/08/15/the-cost-of-small-modules/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Browserifyやwebpack、rollupなどのモジュール数とロード時間の相関関係について。 browserifyはrequireをエミュレート、rollupなどはインライン化するなどの特徴が現れてる&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-for-software-engineers-for-css-developers-//-speaker-deck&quot;&gt;CSS for Software Engineers for CSS Developers // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/csswizardry/css-for-software-engineers-for-css-developers&quot; title=&quot;CSS for Software Engineers for CSS Developers // Speaker Deck&quot;&gt;speakerdeck.com/csswizardry/css-for-software-engineers-for-css-developers&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;thought&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSにおけるSOLIDの原則のような開発指針についてのスライド。&lt;br&gt;
DRY、単一責任の原則、関心の分離、Immutability、Open/Closed、直交性など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://vimeo.com/177216958&quot; title=&quot;Harry Roberts | CSS for Software Engineers for CSS Developers | CSS Day 2016 on Vimeo&quot;&gt;Harry Roberts | CSS for Software Engineers for CSS Developers | CSS Day 2016 on Vimeo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-progressive-framework---google-スライド&quot;&gt;The Progressive Framework - Google スライド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1WnYsxRMiNEArT3xz7xXHdKeH1C-jT92VxmptghJb5Es/present#slide=id.p&quot; title=&quot;The Progressive Framework - Google スライド&quot;&gt;docs.google.com/presentation/d/1WnYsxRMiNEArT3xz7xXHdKeH1C-jT92VxmptghJb5Es/present#slide=id.p&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue.js 2.0についてのスライド&lt;br&gt;
規模や状況に応じてツール/フレームワークを選ぶべきという話。&lt;br&gt;
Vue.js 2.0は段階を踏んで使えるよという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;keynote&quot;&gt;Keynote&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://henryzoo.com/babel-plugin-slides/assets/player/KeynoteDHTMLPlayer.html#0&quot; title=&quot;Keynote&quot;&gt;henryzoo.com/babel-plugin-slides/assets/player/KeynoteDHTMLPlayer.html#0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel pluginについてのスライド。&lt;br&gt;
どのような仕組みで変換されているのかをDOM APIとの対比しながら見ていく話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;siddharthkp/auto-install:-install-dependencies-as-you-code&quot;&gt;siddharthkp/auto-install: Install dependencies as you code&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/siddharthkp/auto-install&quot; title=&quot;siddharthkp/auto-install: Install dependencies as you code&quot;&gt;github.com/siddharthkp/auto-install&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;コードの変更を監視して自動的に&lt;code&gt;npm install&lt;/code&gt;してくれるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;waud/waud:-web-audio-library&quot;&gt;waud/waud: Web Audio Library&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/waud/waud&quot; title=&quot;waud/waud: Web Audio Library&quot;&gt;github.com/waud/waud&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Web Audio APIを使った音を再生するライブラリ。&lt;br&gt;
Audio Spriteやbase64、iOSなどの再生にインタラクションが必要な物への対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;andywer/npm-launch:-🚀-minimalistic-task-runner-on-steroids!&quot;&gt;andywer/npm-launch: 🚀 Minimalistic task runner on steroids!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/andywer/npm-launch&quot; title=&quot;andywer/npm-launch: 🚀 Minimalistic task runner on steroids!&quot;&gt;github.com/andywer/npm-launch&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npm run-scriptの表記と互換性があるTask Runnerツール。&lt;br&gt;
コメントが書けるJSONまたはNode.jsスクリプトで書ける&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-book-apart,-practical-svg&quot;&gt;A Book Apart, Practical SVG&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://abookapart.com/products/practical-svg&quot; title=&quot;A Book Apart, Practical SVG&quot;&gt;abookapart.com/products/practical-svg&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SVGについての書籍&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;書籍情報―javascriptとwebglによる-画像処理プログラミング&quot;&gt;書籍情報―JavaScriptとWebGLによる 画像処理プログラミング&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.kohgakusha.co.jp/books/detail/978-4-7775-1958-3&quot; title=&quot;書籍情報―JavaScriptとWebGLによる 画像処理プログラミング&quot;&gt;www.kohgakusha.co.jp/books/detail/978-4-7775-1958-3&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;WebGLでの画像処理についての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 23 Aug 2016 09:38:00 +0900</pubDate>
        <link>http://jser.info/2016/08/23/web-audio-apiangularjs-2-rc5ngmoduleproperty-based-testing/</link>
        <guid isPermaLink="true">http://jser.info/2016/08/23/web-audio-apiangularjs-2-rc5ngmoduleproperty-based-testing/</guid>
        
        <category>WebAudioAPI</category>
        
        <category>Angular2</category>
        
        <category>Testing</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-08-15のJS: Chrome 53 Beta、使わなくて良いイディオム、60FPS CSS Animation</title>
        <description>&lt;p&gt;JSer.info #292 - Chrome 53βがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.chromium.org/2016/08/chrome-53-beta-shadow-dom.html&quot;&gt;Chromium Blog: Chrome 53 Beta: Shadow DOM, PaymentRequest, and Android autoplay&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Shadow DOM v1のサポートをしています。&lt;br&gt;
v1については次の記事を読むと良いです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/shadowdom/&quot; title=&quot;Shadow DOM v1: self-contained web components | Web Fundamentals - Google Developers&quot;&gt;Shadow DOM v1: self-contained web components | Web Fundamentals - Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hayato.io/2016/shadowdomv1/&quot; title=&quot;What&amp;amp;#39;s New in Shadow DOM v1 (by examples) — hayato.io&quot;&gt;What&amp;#39;s New in Shadow DOM v1 (by examples) — hayato.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;PaymentRequest APIのサポート、&lt;a href=&quot;https://webkit.org/blog/6784/new-video-policies-for-ios/&quot;&gt;Safariと同様&lt;/a&gt;に&lt;a href=&quot;https://developers.google.com/web/updates/2016/07/autoplay&quot;&gt;Video要素は&lt;code&gt;muted&lt;/code&gt;なら&lt;code&gt;autoplay&lt;/code&gt;で自動再生&lt;/a&gt;をサポートしています。&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&quot;https://www.chromestatus.com/feature/5128908798164992&quot; title=&quot;DHE-based ciphers&quot;&gt;DHE-based ciphers&lt;/a&gt;のサポートが削除されています。&lt;br&gt;
非推奨/削除されたAPIなどについては次の記事を読むと良いです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/08/chrome-53-deprecations&quot; title=&quot;API Deprecations and Removals in Chrome 53 | Web Updates - Google Developers&quot;&gt;API Deprecations and Removals in Chrome 53 | Web Updates - Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://rainsoft.io/make-your-javascript-code-shide-knockout-old-es5-hack/&quot;&gt;Make your JavaScript code shine: knockout old ES5 hacks&lt;/a&gt;という記事では、既に代替表現があるES5以下のコードについて書かれています。&lt;br&gt;
ES2016以降では&lt;code&gt;indexOf !== -1&lt;/code&gt;ではなく&lt;code&gt;includes&lt;/code&gt;が利用できるなど、ES2015以降ではこれまでのイディオムをより明示的に表現する&lt;a href=&quot;https://github.com/asciidwango/js-primer/issues/108&quot;&gt;方法が多く&lt;/a&gt;あります。&lt;/p&gt;

&lt;p&gt;この記事では、それらについてどういうイディオムなのかと代わりにどう書けるのかが分かりやすく書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/outsystems-experts/how-to-achieve-60-fps-animations-with-css3-db7b98610108&quot;&gt;Smooth as Butter: Achieving 60 FPS Animations with CSS3 — OutSystems Experts — Medium&lt;/a&gt;という記事では、スライドメニューバーのCSSアニメーションを60FPSで処理出来るようするまでをステップバイステップで紹介しています。&lt;/p&gt;

&lt;p&gt;開発者ツールでのFPSの読み方や変更による変化を分かりやすくまとめています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-state-of-vue-—-the-vue-point-—-medium&quot;&gt;The State of Vue — The Vue Point — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/the-vue-point/the-state-of-vue-1655e10a340a&quot; title=&quot;The State of Vue — The Vue Point — Medium&quot;&gt;medium.com/the-vue-point/the-state-of-vue-1655e10a340a&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue.js 2.0.0 RC1リリース。&lt;br&gt;
APIはフリーズされたため、正式リリースまでにAPIはもう変更しないとのこと&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue/releases/tag/v2.0.0-rc.1&quot; title=&quot;Release v2.0.0-rc.1 · vuejs/vue&quot;&gt;Release v2.0.0-rc.1 · vuejs/vue&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v3.3.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v3.3.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/08/eslint-v3.3.0-released&quot; title=&quot;ESLint v3.3.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/08/eslint-v3.3.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 3.3.0リリース。&lt;br&gt;
実体と名前が合ってないルールをリネーム(元ルールは非推奨)、新しいルールとして&lt;code&gt;no-template-curly-in-string&lt;/code&gt;と&lt;code&gt;sort-keys&lt;/code&gt;の追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/adf6ef3c63b35c01fc05&quot; title=&quot;ESLint v3.3.0 - Qiita&quot;&gt;ESLint v3.3.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog:-chrome-53-beta:-shadow-dom,-paymentrequest,-and-android-autoplay&quot;&gt;Chromium Blog: Chrome 53 Beta: Shadow DOM, PaymentRequest, and Android autoplay&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.chromium.org/2016/08/chrome-53-beta-shadow-dom.html&quot; title=&quot;Chromium Blog: Chrome 53 Beta: Shadow DOM, PaymentRequest, and Android autoplay&quot;&gt;blog.chromium.org/2016/08/chrome-53-beta-shadow-dom.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 53βリリース。&lt;br&gt;
Shadow DOM v1、PaymentRequest APIのサポート、Video要素は&lt;code&gt;muted&lt;/code&gt;なら&lt;code&gt;autoplay&lt;/code&gt;で自動再生が可能に、&lt;code&gt;allow-presentation&lt;/code&gt;の対応。&lt;br&gt;
HTTP/0.9が非推奨に、TextEncoderは常にutf-8を使うようなるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://joe-noh.hatenablog.com/entry/2016/08/08/213159&quot; title=&quot;Payment Request APIを試す - mmag&quot;&gt;Payment Request APIを試す - mmag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/07/autoplay&quot; title=&quot;Muted autoplay on mobile: say goodbye to &amp;amp;amp;lt;canvas&amp;amp;amp;gt; hacks and animated GIFs! | Web Updates - Google Developers&quot;&gt;Muted autoplay on mobile: say goodbye to &amp;amp;lt;canvas&amp;amp;gt; hacks and animated GIFs! | Web Updates - Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-chrome-blog:-flash-and-chrome&quot;&gt;Google Chrome Blog: Flash and Chrome&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://chrome.googleblog.com/2016/08/flash-and-chrome.html&quot; title=&quot;Google Chrome Blog: Flash and Chrome&quot;&gt;chrome.googleblog.com/2016/08/flash-and-chrome.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 53でトラッキング用の小さなFlashをブロック。&lt;br&gt;
Chrome 55で全てのFlashがデフォルトブロックとなり、初回アクセス時に許可を求めるダイアログがでる形&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-2-rc5---ngmodules,-lazy-loading-and-aot-compilation&quot;&gt;Angular 2 RC5 - NgModules, Lazy Loading and AoT compilation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://angularjs.blogspot.com/2016/08/angular-2-rc5-ngmodules-lazy-loading.html&quot; title=&quot;Angular 2 RC5 - NgModules, Lazy Loading and AoT compilation&quot;&gt;angularjs.blogspot.com/2016/08/angular-2-rc5-ngmodules-lazy-loading.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Angular 2 RC5リリース。&lt;br&gt;
&lt;code&gt;@NgModule&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://angular.io/docs/ts/latest/cookbook/rc4-to-rc5.html&quot;&gt;RC4 to RC5 Migration - ts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md&quot;&gt;angular/CHANGELOG.md at master · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-#edgebug:-file-web-platform-bugs-with-a-tweet-|-microsoft-edge-dev-blog&quot;&gt;Introducing #EdgeBug: File web platform bugs with a Tweet | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/08/11/edgebug-twitter/&quot; title=&quot;Introducing #EdgeBug: File web platform bugs with a Tweet | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2016/08/11/edgebug-twitter/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Twitterで #EdgeBug のハッシュタグ経由でIssueを作成できるように&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;api-deprecations-and-removals-in-chrome-53-|-web-updates---google-developers&quot;&gt;API Deprecations and Removals in Chrome 53 | Web Updates - Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/08/chrome-53-deprecations&quot; title=&quot;API Deprecations and Removals in Chrome 53 | Web Updates - Google Developers&quot;&gt;developers.google.com/web/updates/2016/08/chrome-53-deprecations&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Chrome 53で非推奨/削除されたAPIについて。&lt;br&gt;
また非推奨となるプロセスとポリシーについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;make-your-javascript-code-shine:-knockout-old-es5-hacks&quot;&gt;Make your JavaScript code shine: knockout old ES5 hacks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rainsoft.io/make-your-javascript-code-shide-knockout-old-es5-hack/&quot; title=&quot;Make your JavaScript code shine: knockout old ES5 hacks&quot;&gt;rainsoft.io/make-your-javascript-code-shide-knockout-old-es5-hack/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2015で導入された機能や構文で代替できるため、既に使わなくても良くなったES5のイディオムについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;developer-edition-50:-console,-memory-tool,-net-monitor-and-more-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Developer Edition 50: Console, Memory Tool, Net Monitor and more ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/08/developer-edition-50-console-memory-tool-net-monitor-and-more/&quot; title=&quot;Developer Edition 50: Console, Memory Tool, Net Monitor and more ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/08/developer-edition-50-console-memory-tool-net-monitor-and-more/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 50の開発者ツールについて。&lt;br&gt;
コンソールにSource Mapを適応した行数の表示、HTTPログのコールスタックに対応、メモリツールがデフォルトで有効に、WebAssemblyのシンタックスハイライトに対応など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;従来のwebアプリの常識を変える!-service-workerがもたらすwebの未来-|-plaid-engineer-blog&quot;&gt;従来のWebアプリの常識を変える! Service WorkerがもたらすWebの未来 | PLAID Engineer Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://tech.plaid.co.jp/cong-lai-nowebapurinochang-shi-wobian-eru-service-workergamotarasuwebnowei-lai/&quot; title=&quot;従来のWebアプリの常識を変える! Service WorkerがもたらすWebの未来 | PLAID Engineer Blog&quot;&gt;tech.plaid.co.jp/cong-lai-nowebapurinochang-shi-wobian-eru-service-workergamotarasuwebnowei-lai/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ServiceWorkerがどういうものかという概要的な話。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;offline-google-analytics-made-easy-|-web-updates---google-developers&quot;&gt;Offline Google Analytics Made Easy | Web Updates - Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2016/07/offline-google-analytics&quot; title=&quot;Offline Google Analytics Made Easy | Web Updates - Google Developers&quot;&gt;developers.google.com/web/updates/2016/07/offline-google-analytics&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アクセス解析&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Service Workerを使ったGoogle Analyticsのオフライン対応について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/googlechrome/sw-helpers&quot; title=&quot;GoogleChrome/sw-helpers: Service Worker helper libraries&quot;&gt;GoogleChrome/sw-helpers: Service Worker helper libraries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;svg-2-new-features-·-w3c/svgwg-wiki&quot;&gt;SVG 2 new features · w3c/svgwg Wiki&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/w3c/svgwg/wiki/SVG-2-new-features&quot; title=&quot;SVG 2 new features · w3c/svgwg Wiki&quot;&gt;github.com/w3c/svgwg/wiki/SVG-2-new-features&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;SVG 2の新しい機能や変更点について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;smooth-as-butter:-achieving-60-fps-animations-with-css3-—-outsystems-experts-—-medium&quot;&gt;Smooth as Butter: Achieving 60 FPS Animations with CSS3 — OutSystems Experts — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/outsystems-experts/how-to-achieve-60-fps-animations-with-css3-db7b98610108&quot; title=&quot;Smooth as Butter: Achieving 60 FPS Animations with CSS3 — OutSystems Experts — Medium&quot;&gt;medium.com/outsystems-experts/how-to-achieve-60-fps-animations-with-css3-db7b98610108&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSアニメーションの60FPS出すまでをステップバイステップで見ていく話。&lt;br&gt;
スライドメニューを、position、transform、will-change、クラスの付け外しでそれぞれFPSにどのような変化があるかを見る&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flexboxのバグに立ち向かう（flexboxバグまとめ）---qiita&quot;&gt;flexboxのバグに立ち向かう（flexboxバグまとめ） - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/hashrock/items/189db03021b0f565ae27&quot; title=&quot;flexboxのバグに立ち向かう（flexboxバグまとめ） - Qiita&quot;&gt;qiita.com/hashrock/items/189db03021b0f565ae27&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS flexboxのバグについてスクリーンショットと共に紹介してる&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/luisrudge/postcss-flexbugs-fixes&quot; title=&quot;luisrudge/postcss-flexbugs-fixes: PostCSS plugin that tries to fix all of flexbug&amp;amp;amp;#39;s issues&quot;&gt;luisrudge/postcss-flexbugs-fixes: PostCSS plugin that tries to fix all of flexbug&amp;amp;#39;s issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/philipwalton/flexbugs&quot; title=&quot;philipwalton/flexbugs: A community-curated list of flexbox issues and cross-browser workarounds for them.&quot;&gt;philipwalton/flexbugs: A community-curated list of flexbox issues and cross-browser workarounds for them.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-is-promise.try,-and-why-does-it-matter?---joepie91&amp;#x27;s-ramblings&quot;&gt;What is Promise.try, and why does it matter? - joepie91&amp;#x27;s Ramblings&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://cryto.net/%7Ejoepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/&quot; title=&quot;What is Promise.try, and why does it matter? - joepie91&amp;#39;s Ramblings&quot;&gt;cryto.net/%7Ejoepie91/blog/2016/05/11/what-is-promise-try-and-why-does-it-matter/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Promise.try&lt;/code&gt;のユースケースについて。&lt;br&gt;
ECMAScript標準ではないが、&lt;code&gt;Promise.try&lt;/code&gt;があることで同期的なエラーが扱いやすくなるという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ljharb/proposal-promise-try&quot; title=&quot;ljharb/proposal-promise-try: ECMAScript Proposal, specs, and reference implementation for Promise.try&quot;&gt;ljharb/proposal-promise-try: ECMAScript Proposal, specs, and reference implementation for Promise.try&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;permission.site&quot;&gt;permission.site&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://permission.site/&quot; title=&quot;permission.site&quot;&gt;permission.site/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;HTTPSやパーミッションが必要なブラウザのAPIを試せるサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zalando/tailor:-a-streaming-layout-service-for-front-end-microservices&quot;&gt;zalando/tailor: A streaming layout service for front-end microservices&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zalando/tailor&quot; title=&quot;zalando/tailor: A streaming layout service for front-end microservices&quot;&gt;github.com/zalando/tailor&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;layout service libray for front-end&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.oreilly.com/ideas/better-streaming-layouts-for-frontend-microservices-with-tailor&quot; title=&quot;Better streaming layouts for front-end microservices with Tailor - O&amp;amp;amp;#39;Reilly Media&quot;&gt;Better streaming layouts for front-end microservices with Tailor - O&amp;amp;#39;Reilly Media&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;js-joda/js-joda:--immutable-date-and-time-library-for-javascript&quot;&gt;js-joda/js-joda: &lt;img class=&#39;emoji&#39; title=&#39;:clock2:&#39; alt=&#39;:clock2:&#39; src=&#39;https://assets.github.com/images/icons/emoji/unicode/1f551.png&#39; height=&#39;20&#39; width=&#39;20&#39; align=&#39;absmiddle&#39; /&gt; Immutable date and time library for javascript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/js-joda/js-joda&quot; title=&quot;js-joda/js-joda: &amp;lt;img class=&amp;#39;emoji&amp;#39; title=&amp;#39;:clock2:&amp;#39; alt=&amp;#39;:clock2:&amp;#39; src=&amp;#39;https://assets.github.com/images/icons/emoji/unicode/1f551.png&amp;#39; height=&amp;#39;20&amp;#39; width=&amp;#39;20&amp;#39; align=&amp;#39;absmiddle&amp;#39; /&amp;gt; Immutable date and time library for javascript&quot;&gt;github.com/js-joda/js-joda&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JSR-310/Joda timeのAPIをインスパイアした日付ライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-·-react-enlightenment-[draft]&quot;&gt;Introduction · React Enlightenment [DRAFT]&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.reactenlightenment.com/&quot; title=&quot;Introduction · React Enlightenment \[DRAFT\]&quot;&gt;www.reactenlightenment.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactについての電子書籍&lt;br&gt;
開眼JavaScriptのシリーズ。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/FrontendMasters/react-enlightenment&quot; title=&quot;FrontendMasters/react-enlightenment: A thoughtful and complete introduction to React.&quot;&gt;FrontendMasters/react-enlightenment: A thoughtful and complete introduction to React.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manning-|-rxjs-in-action&quot;&gt;Manning | RxJS in Action&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.manning.com/books/rxjs-in-action&quot; title=&quot;Manning | RxJS in Action&quot;&gt;www.manning.com/books/rxjs-in-action&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Rx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2017年3月31日発売&lt;br&gt;
RxJSについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 15 Aug 2016 10:17:00 +0900</pubDate>
        <link>http://jser.info/2016/08/15/chrome-53-beta60fps-css-animation/</link>
        <guid isPermaLink="true">http://jser.info/2016/08/15/chrome-53-beta60fps-css-animation/</guid>
        
        <category>Chrome</category>
        
        <category>ES5</category>
        
        <category>CSS</category>
        
        <category>animation</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-08-09のJS: Firefox 48.0、Node/WHATWG Stream、webpackチュートリアル</title>
        <description>&lt;p&gt;JSer.info #291 - Firefox 48.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/48.0/releasenotes/&quot; title=&quot;Firefox — Notes (48.0) — Mozilla&quot;&gt;Firefox — Notes (48.0) — Mozilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/48&quot; title=&quot;Firefox 48 for developers - Mozilla | MDN&quot;&gt;Firefox 48 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/48/&quot; title=&quot;Firefox 48 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 48 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;Element#animate&lt;/code&gt;がデフォルト有効となり、Web Animation APIが使えるようになっています。&lt;br&gt;
詳しくは以下の記事で解説されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/08/animating-like-you-just-dont-care-with-element-animate/&quot; title=&quot;Animating like you just don’t care with Element.animate ★ Mozilla Hacks – the Web developer blog&quot;&gt;Animating like you just don’t care with Element.animate ★ Mozilla Hacks – the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/howdy39/items/48d85c430f90a21075cd&quot; title=&quot;step by stepで始めるwebpack - Qiita&quot;&gt;step by stepで始めるwebpack - Qiita&lt;/a&gt;という記事ではwebpackの設定についてステップバイステップで、なぜその設定をするのかというチュートリアル形式でかかれています。&lt;/p&gt;

&lt;p&gt;webpackはBrowserifyなどに比べてビルトインの機能としてできることが豊富ですが、その分設定も必要になります。&lt;br&gt;
よく分からずにwebpackの設定をコピペして使ってる人も多いと思うので、一度見てみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/jxck/stream-between-nodejs-and-whatwg&quot; title=&quot;stream between nodejs and whatwg // Speaker Deck&quot;&gt;stream between nodejs and whatwg // Speaker Deck&lt;/a&gt;というスライドでは、&lt;a href=&quot;https://nodejs.org/api/stream.html&quot;&gt;Node.js Stream&lt;/a&gt;と&lt;a href=&quot;https://streams.spec.whatwg.org/&quot;&gt;WHATWG Steram&lt;/a&gt;の違いについて書かれています。&lt;/p&gt;

&lt;p&gt;Streamという言葉は同じですが、目的が&lt;del&gt;異なるため&lt;/del&gt;同じだが、そもそもの互換性などがないこと、&lt;br&gt;
実装方法も異なる点について書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-—-notes-(48.0)-—-mozilla&quot;&gt;Firefox — Notes (48.0) — Mozilla&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/48.0/releasenotes/&quot; title=&quot;Firefox — Notes (48.0) — Mozilla&quot;&gt;www.mozilla.org/en-US/firefox/48.0/releasenotes/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 48.0リリース。&lt;br&gt;
WebWorkerでWeb Crypto APIが動くように、CSS &lt;code&gt;calc()&lt;/code&gt;の入れ子をサポート。&lt;br&gt;
&lt;code&gt;Element.animate()&lt;/code&gt;がデフォルトで有効に、&lt;code&gt;insertAdjacentText()&lt;/code&gt;の実装など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/Firefox/Releases/48&quot; title=&quot;Firefox 48 for developers - Mozilla | MDN&quot;&gt;Firefox 48 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.fxsitecompat.com/ja/versions/48/&quot; title=&quot;Firefox 48 サイト互換性情報 | Firefox サイト互換性情報&quot;&gt;Firefox 48 サイト互換性情報 | Firefox サイト互換性情報&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-release-10-|-webkit&quot;&gt;Release Notes for Safari Technology Preview Release 10 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6823/release-notes-for-safari-technology-preview-release-10/&quot; title=&quot;Release Notes for Safari Technology Preview Release 10 | WebKit&quot;&gt;webkit.org/blog/6823/release-notes-for-safari-technology-preview-release-10/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 10リリース。&lt;br&gt;
&lt;code&gt;**&lt;/code&gt;のサポート、&amp;quot;use strict&amp;quot;の挙動を仕様へ追従、DOMTokenListがiterableに、nullを空文字として扱うように色々なAPIを修正など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-arrow-function-definitions-static-semantics-early-errors&quot; title=&quot;ECMAScript® 2017 Language Specification&quot;&gt;ECMAScript® 2017 Language Specification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;flow:-mapping-an-object-—-medium&quot;&gt;Flow: Mapping an object — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@thejameskyle/flow-mapping-an-object-373d64c44592&quot; title=&quot;Flow: Mapping an object — Medium&quot;&gt;medium.com/@thejameskyle/flow-mapping-an-object-373d64c44592&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flowtype&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;map-objというライブラリを例に、FlowTypeでどのように型定義をしていくかというチュートリアル&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/map-obj&quot; title=&quot;sindresorhus/map-obj: Map object keys and values into a new object&quot;&gt;sindresorhus/map-obj: Map object keys and values into a new object&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;step-by-stepで始めるwebpack---qiita&quot;&gt;step by stepで始めるwebpack - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/howdy39/items/48d85c430f90a21075cd&quot; title=&quot;step by stepで始めるwebpack - Qiita&quot;&gt;qiita.com/howdy39/items/48d85c430f90a21075cd&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;webpackの導入方法についてステップバイステップなチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;from-mixins-to-object-composition&quot;&gt;From Mixins to Object Composition&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://raganwald.com/2016/07/20/prefer-composition-to-inheritance.html&quot; title=&quot;From Mixins to Object Composition&quot;&gt;raganwald.com/2016/07/20/prefer-composition-to-inheritance.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設計&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;mixinではなく、objectのcompositionで機能拡張をする方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-and-functional-programming-–-beth-allchurch-|-developer&quot;&gt;JavaScript and Functional Programming – Beth Allchurch | Developer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bethallchurch.github.io/JavaScript-and-Functional-Programming/&quot; title=&quot;JavaScript and Functional Programming – Beth Allchurch | Developer&quot;&gt;bethallchurch.github.io/JavaScript-and-Functional-Programming/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;関数型プログラミング&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptで関数型プログラミングをする場合に気をつけることやパターンについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;package.json-の-browser-field-実践編---qiita&quot;&gt;package.json の browser field 実践編 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/shinout/items/911e024368e2cb29fd3d&quot; title=&quot;package.json の browser field 実践編 - Qiita&quot;&gt;qiita.com/shinout/items/911e024368e2cb29fd3d&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browserify&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;package.jsonの&amp;quot;browser&amp;quot; fieldの解釈の違いについて。&lt;br&gt;
Browserify、webpack、React Native Packagerの比較&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;project毎のnpmコマンドをいい感じにするnpmrc-&amp;amp;-config達---qiita&quot;&gt;project毎のnpmコマンドをいい感じにするnpmrc &amp;amp; config達 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/inuscript/items/86dbfd26abe6905756c0&quot; title=&quot;project毎のnpmコマンドをいい感じにするnpmrc &amp;amp; config達 - Qiita&quot;&gt;qiita.com/inuscript/items/86dbfd26abe6905756c0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;設定&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npmrc(npm-config)の設定について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-edgehtml-14-with-the-windows-10-anniversary-update-|-microsoft-edge-dev-blog&quot;&gt;Introducing EdgeHTML 14 with the Windows 10 Anniversary Update | Microsoft Edge Dev Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2016/08/04/introducing-edgehtml-14/&quot; title=&quot;Introducing EdgeHTML 14 with the Windows 10 Anniversary Update | Microsoft Edge Dev Blog&quot;&gt;blogs.windows.com/msedgedev/2016/08/04/introducing-edgehtml-14/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Windows 10 Anniversary UpdateのEdgeHTML 14で入った機能のまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;animating-like-you-just-don’t-care-with-element.animate-★-mozilla-hacks-–-the-web-developer-blog&quot;&gt;Animating like you just don’t care with Element.animate ★ Mozilla Hacks – the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2016/08/animating-like-you-just-dont-care-with-element-animate/&quot; title=&quot;Animating like you just don’t care with Element.animate ★ Mozilla Hacks – the Web developer blog&quot;&gt;hacks.mozilla.org/2016/08/animating-like-you-just-dont-care-with-element-animate/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;animation&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Firefox 48で実装された&lt;code&gt;Element#animate()&lt;/code&gt; APIについての解説&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-a11ycasts!----a11ycasts-#01---youtube&quot;&gt;Introducing A11ycasts! -- A11ycasts #01 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=HtTyRajRuyY&quot; title=&quot;Introducing A11ycasts! -- A11ycasts #01 - YouTube&quot;&gt;www.youtube.com/watch?v=HtTyRajRuyY&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;アクセシビリティについての動画シリーズ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://twitter.com/ChromiumDev/status/760555781603360768&quot; title=&quot;Chrome Developers on Twitter: &amp;amp;amp;#34;Just launched ~ A11ycasts! A new series dedicated to teaching web accessibility. Tune in every 2 weeks! https://t.co/yZphrjpGPz&amp;amp;amp;#34;&quot;&gt;Chrome Developers on Twitter: &amp;amp;#34;Just launched ~ A11ycasts! A new series dedicated to teaching web accessibility. Tune in every 2 weeks! https://t.co/yZphrjpGPz&amp;amp;#34;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stream-between-nodejs-and-whatwg-//-speaker-deck&quot;&gt;stream between nodejs and whatwg // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/jxck/stream-between-nodejs-and-whatwg&quot; title=&quot;stream between nodejs and whatwg // Speaker Deck&quot;&gt;speakerdeck.com/jxck/stream-between-nodejs-and-whatwg&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.js StreamとWHATWG Streamの違いについて。&lt;br&gt;
目的が異なるため、作りも異なるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;is-houdini-ready-yet?&quot;&gt;Is Houdini Ready Yet?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ishoudinireadyyet.com/&quot; title=&quot;Is Houdini Ready Yet?&quot;&gt;ishoudinireadyyet.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;まとめ&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSS Houdiniのそれぞれの仕様とブラウザの実装状況についてまとめられたサイト&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/w3c/css-houdini-drafts&quot; title=&quot;w3c/css-houdini-drafts: Mirror of https://hg.css-houdini.org/drafts&quot;&gt;w3c/css-houdini-drafts: Mirror of https://hg.css-houdini.org/drafts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introduction-·-almin.js&quot;&gt;Introduction · Almin.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://almin.js.org/&quot; title=&quot;Introduction · Almin.js&quot;&gt;almin.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DDD&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Flux/CQRSなライブラリであるAlminの公式サイト。&lt;br&gt;
GitBookで書かれたドキュメントが置かれてる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jumpsuit/jumpsuit:-jump-in.-zip-up.-build-great-apps.&quot;&gt;jumpsuit/jumpsuit: Jump in. Zip up. Build great apps.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jumpsuit/jumpsuit&quot; title=&quot;jumpsuit/jumpsuit: Jump in. Zip up. Build great apps.&quot;&gt;github.com/jumpsuit/jumpsuit&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;View(React)、State管理なライブラリ + CLIなども含んだワンセットなライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-stub-promises-using-sinon.js-–-temple-coding&quot;&gt;How to stub promises using Sinon.JS – Temple Coding&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://templecoding.com/blog/2016/02/29/how-to-stub-promises-using-sinonjs/&quot; title=&quot;How to stub promises using Sinon.JS – Temple Coding&quot;&gt;templecoding.com/blog/2016/02/29/how-to-stub-promises-using-sinonjs/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PromiseのstubをするSinon.jsの拡張ライブラリ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substantial/sinon-stub-promise&quot; title=&quot;substantial/sinon-stub-promise: Synchronous Promise stubbing for Sinon.JS&quot;&gt;substantial/sinon-stub-promise: Synchronous Promise stubbing for Sinon.JS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jvilk/browserfs:-browserfs-is-an-in-browser-filesystem-that-emulates-the-node-js-filesystem-api-and-supports-storing-and-retrieving-files-from-various-backends.&quot;&gt;jvilk/BrowserFS: BrowserFS is an in-browser filesystem that emulates the Node JS filesystem API and supports storing and retrieving files from various backends.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jvilk/BrowserFS&quot; title=&quot;jvilk/BrowserFS: BrowserFS is an in-browser filesystem that emulates the Node JS filesystem API and supports storing and retrieving files from various backends.&quot;&gt;github.com/jvilk/BrowserFS&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ブラウザ上でfs的なファイルシステムのエミュレートを行うライブラリ。&lt;br&gt;
memory、localStorage、Dropboxなど色々なバックエンドを持っている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;test-driving-javascript-applications---o&amp;#x27;reilly-media&quot;&gt;Test-Driving JavaScript Applications - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/9781680501742.do&quot; title=&quot;Test-Driving JavaScript Applications - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/9781680501742.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TDDについてのJavaScript本&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-ecmascript-6---o&amp;#x27;reilly-media&quot;&gt;Understanding ECMAScript 6 - O&amp;#x27;Reilly Media&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/9781593277574.do&quot; title=&quot;Understanding ECMAScript 6 - O&amp;#39;Reilly Media&quot;&gt;shop.oreilly.com/product/9781593277574.do&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES6について解説している書籍。&lt;br&gt;
Understanding ECMAScript 6 の書籍版&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://leanpub.com/understandinges6&quot; title=&quot;Understanding… by Nicholas C. Zakas \[Leanpub PDF/iPad/Kindle\]&quot;&gt;Understanding… by Nicholas C. Zakas [Leanpub PDF/iPad/Kindle]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 09 Aug 2016 09:19:00 +0900</pubDate>
        <link>http://jser.info/2016/08/09/firefox-480nodewhatwg-streamwebpack/</link>
        <guid isPermaLink="true">http://jser.info/2016/08/09/firefox-480nodewhatwg-streamwebpack/</guid>
        
        <category>Firefo</category>
        
        <category>Node.js</category>
        
        <category>Stream</category>
        
        <category>webpack</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-08-02のJS: Mocha 3.0、React 15.3.0、ECMAScript Proposalの進捗</title>
        <description>&lt;p&gt;JSer.info #290 - Mocha 3.0がリリースされました。&lt;br&gt;
メジャーアップデートであるため、いくつかの非互換性が含まれています。&lt;/p&gt;

&lt;p&gt;Promiseを返すパターンと&lt;code&gt;done&lt;/code&gt;の両方が同時に使われているケースをエラーとするように、&lt;br&gt;
&lt;code&gt;--grep&lt;/code&gt;に正規表現的な文字列を指定できるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/blob/master/CHANGELOG.md#300--2016-07-31&quot;&gt;mocha/CHANGELOG.md at master · mochajs/mocha&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;React 15.3.0がリリースされました。&lt;br&gt;
&lt;code&gt;React.PureComponent&lt;/code&gt;の追加、&lt;a href=&quot;http://facebook.github.io/jest/blog/2016/07/27/jest-14.html&quot;&gt;Jest&lt;/a&gt;と共に使う&lt;a href=&quot;https://www.npmjs.com/package/react-test-renderer&quot; title=&quot;react-test-renderer&quot;&gt;react-test-renderer&lt;/a&gt;のパッケージを公開、propTypesの警告の改善などが含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/react/releases/tag/v15.3.0&quot;&gt;Release v15.3.0 · facebook/react&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;React 15.2.0では騒がしい警告が色々追加されているので、アップデートする際は以下の記事を参考にすると良さそうです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://havelog.ayumusato.com/develop/javascript/e717-react_v15_upgrade.html&quot; title=&quot;React v0.14.x から v15.2.x へのアップデート録 ::ハブろぐ&quot;&gt;React v0.14.x から v15.2.x へのアップデート録 ::ハブろぐ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/04/07/react-v15.html&quot; title=&quot;React v15.0 | React&quot;&gt;React v15.0 | React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/2016/07/30/last-minutes-proposals-changes&quot;&gt;ECMAScript proposal updates @ 2016-07 | ECMAScript Daily&lt;/a&gt;では、&lt;a href=&quot;https://github.com/tc39/agendas/blob/master/2016/07.md&quot;&gt;7月に行われたTC39のミーティング&lt;/a&gt;の結果、Statusが変わったProposalについてまとめられています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/ecmascript-asyncawait&quot; title=&quot;Async Functions&quot;&gt;Async Functions&lt;/a&gt;と&lt;a href=&quot;https://github.com/jeffmo/es-trailing-function-commas&quot; title=&quot;trailing commas in function parameter&quot;&gt;trailing commas in function parameter&lt;/a&gt;がStage 4となっています。&lt;/p&gt;

&lt;p&gt;ES2017に入る予定(Stage 4)のものは以下にまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposals/blob/master/finished-proposals.md&quot; title=&quot;proposals/finished-proposals.md at master · tc39/proposals&quot;&gt;proposals/finished-proposals.md at master · tc39/proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;aurelia-1.0-is-here!!!&quot;&gt;Aurelia 1.0 is Here!!!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.durandal.io/2016/07/27/aurelia-1-0-is-here/&quot; title=&quot;Aurelia 1.0 is Here!!!&quot;&gt;blog.durandal.io/2016/07/27/aurelia-1-0-is-here/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Aurelia 1.0リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ember.js---ember.js-2.7-and-2.8-beta-released&quot;&gt;Ember.js - Ember.js 2.7 and 2.8 Beta Released&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://emberjs.com/blog/2016/07/25/ember-2-7-and-2-8-beta-released.html&quot; title=&quot;Ember.js - Ember.js 2.7 and 2.8 Beta Released&quot;&gt;emberjs.com/blog/2016/07/25/ember-2-7-and-2-8-beta-released.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Ember.js 2.7と2.8 Betaリリース。&lt;br&gt;
Ember 2.8では&lt;code&gt;Ember.Engine&lt;/code&gt;、&lt;code&gt;Array#includes&lt;/code&gt;のpolyfill、&lt;code&gt;Ember.String.isHTMLSafe&lt;/code&gt;などが追加される&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mocha/changelog.md-at-master-·-mochajs/mocha&quot;&gt;mocha/CHANGELOG.md at master · mochajs/mocha&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mochajs/mocha/blob/master/CHANGELOG.md#300--2016-07-31&quot; title=&quot;mocha/CHANGELOG.md at master · mochajs/mocha&quot;&gt;github.com/mochajs/mocha/blob/master/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Mocha 3.0.0リリース。 非同期テスト時に&lt;code&gt;done()&lt;/code&gt;の実装とPromiseを返すとエラーになる、&lt;code&gt;--grep&lt;/code&gt;で正規表現リテラル的な文字列が指定可能に、&lt;code&gt;describe.only&lt;/code&gt;の動作を改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jest-14.0:-react-tree-snapshot-testing-·-jest&quot;&gt;Jest 14.0: React Tree Snapshot Testing · Jest&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://facebook.github.io/jest/blog/2016/07/27/jest-14.html&quot; title=&quot;Jest 14.0: React Tree Snapshot Testing · Jest&quot;&gt;facebook.github.io/jest/blog/2016/07/27/jest-14.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Jest 14.0リリース。&lt;br&gt;
React Componentのsnapshot testing、React Nativeサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v15.3.0-·-facebook/react&quot;&gt;Release v15.3.0 · facebook/react&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/react/releases/tag/v15.3.0&quot; title=&quot;Release v15.3.0 · facebook/react&quot;&gt;github.com/facebook/react/releases/tag/v15.3.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React 15.3.0リリース。&lt;br&gt;
&lt;code&gt;React.PureComponent&lt;/code&gt;の追加、propTypesのバリデーション改善、テスト向けの&lt;code&gt;react-test-renderer&lt;/code&gt;を公開など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v3.2.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v3.2.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/07/eslint-v3.2.0-released&quot; title=&quot;ESLint v3.2.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/07/eslint-v3.2.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint v3.2.0リリース。&lt;br&gt;
&lt;code&gt;no-tab&lt;/code&gt;ルールの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/706f4bb024d7ceb78f1d&quot; title=&quot;ESLint v3.2.0 - Qiita&quot;&gt;ESLint v3.2.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6.12.0-·-babel/babel&quot;&gt;Release v6.12.0 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/releases/tag/v6.12.0&quot; title=&quot;Release v6.12.0 · babel/babel&quot;&gt;github.com/babel/babel/releases/tag/v6.12.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Babel v6.12.0リリース。&lt;br&gt;
&lt;code&gt;babel-plugin-transform-runtime&lt;/code&gt;に&lt;code&gt;helpers: false&lt;/code&gt;を追加。&lt;br&gt;
&lt;code&gt;babel-plugin-transform-es2015-modules-umd&lt;/code&gt;に&lt;code&gt;exactGlobals&lt;/code&gt;オプションを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-@-2016-07-|-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2016-07 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/2016/07/30/last-minutes-proposals-changes&quot; title=&quot;ECMAScript proposal updates @ 2016-07 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/2016/07/30/last-minutes-proposals-changes&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年7月のミーティングのProposal statusの変化まとめ。&lt;br&gt;
Async/Awaitとtrailing function commasがstage 4になった&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-comprehensive-guide-to-font-loading-strategies—zachleat.com&quot;&gt;A Comprehensive Guide to Font Loading Strategies—zachleat.com&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zachleat.com/web/comprehensive-webfonts/&quot; title=&quot;A Comprehensive Guide to Font Loading Strategies—zachleat.com&quot;&gt;www.zachleat.com/web/comprehensive-webfonts/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;fonts&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Font Loadingの手法やそれぞれの良いところ、良くないところについてのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-step-by-step-tdd-approach-on-testing-react-components-using-enzyme&quot;&gt;A step-by-step TDD approach on testing React components using Enzyme&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://thereignn.ghost.io/a-step-by-step-tdd-approach-on-testing-react-components-using-enzyme/&quot; title=&quot;A step-by-step TDD approach on testing React components using Enzyme&quot;&gt;thereignn.ghost.io/a-step-by-step-tdd-approach-on-testing-react-components-using-enzyme/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Enzymeを使ったReact ComponentのTDDについて。&lt;br&gt;
React Componentをテスト駆動で開発するチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;taming-requestanimationframe-and-requestidlecallback&quot;&gt;Taming requestAnimationFrame and requestIdleCallback&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.webreflection.co.uk/blog/2016/07/31/taming-raf-and-rick&quot; title=&quot;Taming requestAnimationFrame and requestIdleCallback&quot;&gt;www.webreflection.co.uk/blog/2016/07/31/taming-raf-and-rick&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;requestAnimationFrame/requestIdleCallbackなどのスケジューリングを行うライブラリについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebReflection/sob&quot; title=&quot;WebReflection/sob: Schedule on Browser&quot;&gt;WebReflection/sob: Schedule on Browser&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css:-will-change指定時の挙動,-パフォーマンスへの影響と考察---qiita&quot;&gt;CSS: will-change指定時の挙動, パフォーマンスへの影響と考察 - Qiita&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://qiita.com/damele0n/items/71352757d0e6fdf5b184&quot; title=&quot;CSS: will-change指定時の挙動, パフォーマンスへの影響と考察 - Qiita&quot;&gt;qiita.com/damele0n/items/71352757d0e6fdf5b184&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;CSSの&lt;code&gt;will-change&lt;/code&gt;の効果の検証とブラウザの実装(ソースコード)について。&lt;br&gt;
指定した値毎の挙動についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-v0.14.x-から-v15.2.x-へのアップデート録-::ハブろぐ&quot;&gt;React v0.14.x から v15.2.x へのアップデート録 ::ハブろぐ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://havelog.ayumusato.com/develop/javascript/e717-react_v15_upgrade.html&quot; title=&quot;React v0.14.x から v15.2.x へのアップデート録 ::ハブろぐ&quot;&gt;havelog.ayumusato.com/develop/javascript/e717-react_v15_upgrade.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React 0.14.xから15.2へのアップデートした際に出る警告と対処法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-systems-music&quot;&gt;JavaScript Systems Music&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://teropa.info/blog/2016/07/28/javascript-systems-music.html&quot; title=&quot;JavaScript Systems Music&quot;&gt;teropa.info/blog/2016/07/28/javascript-systems-music.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;music&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでSystems Music&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Systems_music&quot; title=&quot;Systems music - Wikipedia, the free encyclopedia&quot;&gt;Systems music - Wikipedia, the free encyclopedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vue.js-@-laracon---google-スライド&quot;&gt;Vue.js @ Laracon - Google スライド&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/16MpK3I2LZz47QdLg3uMNkCC3PqmM0znXF3-FdCEpics/mobilepresent#slide=id.p&quot; title=&quot;Vue.js @ Laracon - Google スライド&quot;&gt;docs.google.com/presentation/d/16MpK3I2LZz47QdLg3uMNkCC3PqmM0znXF3-FdCEpics/mobilepresent#slide=id.p&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vue.js 2.0のコンセプトについてのスライド&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;async-redux-module-1-//-speaker-deck&quot;&gt;Async Redux Module 1 // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/freddyrangel/async-redux-module-1&quot; title=&quot;Async Redux Module 1 // Speaker Deck&quot;&gt;speakerdeck.com/freddyrangel/async-redux-module-1&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reduxでの非同期についてのスライド集。&lt;br&gt;
そもそも動きから、middleware、thunk、sagaについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/freddyrangel/async-redux-module-2&quot; title=&quot;Async Redux Module 2 // Speaker Deck&quot;&gt;Async Redux Module 2 // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/freddyrangel/async-redux-module-3&quot; title=&quot;Async Redux Module 3 // Speaker Deck&quot;&gt;Async Redux Module 3 // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/freddyrangel/async-redux-module-4&quot; title=&quot;Async Redux Module 4 // Speaker Deck&quot;&gt;Async Redux Module 4 // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/freddyrangel/async-redux-module-5&quot; title=&quot;Async Redux Module 5 // Speaker Deck&quot;&gt;Async Redux Module 5 // Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;modern-javascript-|-angularclass&quot;&gt;Modern Javascript | AngularClass&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://courses.angularclass.com/courses/modern-javascript&quot; title=&quot;Modern Javascript | AngularClass&quot;&gt;courses.angularclass.com/courses/modern-javascript&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;動画&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptについての動画講座。&lt;br&gt;
ES5の復習からES6の新しい機能、TypeScript、npm、webpackについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;はじめに-|-目次&quot;&gt;はじめに | 目次&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://vuex.vuejs.org/ja/&quot; title=&quot;はじめに | 目次&quot;&gt;vuex.vuejs.org/ja/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;翻訳&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vuexについてのドキュメント訳&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;codeceptjs&quot;&gt;CodeceptJS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://codecept.io/&quot; title=&quot;CodeceptJS&quot;&gt;codecept.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;PHPのCodeceptionインスパイアなJavaScriptテストフレームワーク。&lt;br&gt;
シナリオテストのハイレベルAPIで、Protractorなど他のtest runnerの中でも動かせる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://codeception.com/&quot; title=&quot;Codeception&quot;&gt;Codeception&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rkendall/reffix:-the-reference-fixer-for-analyzing-and-fixing-broken-path-references-in-files.&quot;&gt;rkendall/reffix: The Reference Fixer for analyzing and fixing broken path references in files.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rkendall/reffix&quot; title=&quot;rkendall/reffix: The Reference Fixer for analyzing and fixing broken path references in files.&quot;&gt;github.com/rkendall/reffix&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのrequireやimportのパス、HTMLのimgやscriptのパスのチェックと修正ができるツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mgol/check-dependencies:-checks-if-currently-installed-npm-dependencies-are-installed-in-the-exact-same-versions-that-are-specified-in-package.json&quot;&gt;mgol/check-dependencies: Checks if currently installed npm dependencies are installed in the exact same versions that are specified in package.json&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mgol/check-dependencies&quot; title=&quot;mgol/check-dependencies: Checks if currently installed npm dependencies are installed in the exact same versions that are specified in package.json&quot;&gt;github.com/mgol/check-dependencies&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npmでインストールしているバージョンとpacakge.jsonのバージョンが同一なのかをチェックできるライブラリとCLI&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-web-development:-the-big-nerd-ranch-guide:-chris-aquino,-todd-gandee:-9780134433943:-amazon.com:-books&quot;&gt;Front-End Web Development: The Big Nerd Ranch Guide: Chris Aquino, Todd Gandee: 9780134433943: Amazon.com: Books&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.com/Front-End-Web-Development-Ranch-Guide/dp/0134433947&quot; title=&quot;Front-End Web Development: The Big Nerd Ranch Guide: Chris Aquino, Todd Gandee: 9780134433943: Amazon.com: Books&quot;&gt;www.amazon.com/Front-End-Web-Development-Ranch-Guide/dp/0134433947&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2016年8月11日発売&lt;br&gt;
Ember.jsを使ったウェブアプリについての書籍&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 01 Aug 2016 23:28:00 +0900</pubDate>
        <link>http://jser.info/2016/08/01/mocha-30react-1530ecmascript-proposal/</link>
        <guid isPermaLink="true">http://jser.info/2016/08/01/mocha-30react-1530ecmascript-proposal/</guid>
        
        <category>testing</category>
        
        <category>React</category>
        
        <category>ECMAScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-07-26のJS: AngularJS 2でのState管理、React Componentパターン、アクセシビリティガイドライン</title>
        <description>&lt;p&gt;JSer.info #289 - &lt;a href=&quot;https://vsavkin.com/managing-state-in-angular-2-applications-caf78d123d02&quot;&gt;Tackling State — angular2&lt;/a&gt;という記事ではAngular 2のアプリケーションにおけるState管理について書かれています。&lt;/p&gt;

&lt;p&gt;作り的にはReduxなどと似ていますが、次のような事をAngular 2 + RxJSで効率的に実装するにはどうするかが書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Immutable Stateである&lt;/li&gt;
&lt;li&gt;ActionによってのみStateは変更される&lt;/li&gt;
&lt;li&gt;ApplicationはObservableを受け取りObservableを返すもの&lt;/li&gt;
&lt;li&gt;ApplicationとViewは分離される&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://krasimirtsonev.com/blog/article/react-js-in-design-patterns&quot;&gt;React.js in patterns&lt;/a&gt;という記事ではReact Component + JSXの色々なパターンについて書かれています。&lt;/p&gt;

&lt;p&gt;コンポーネント同士を組み合わせて使う方法や、&lt;code&gt;this.props.children&lt;/code&gt;を使ったやり方、高階関数を使う方法など色々なパターンについて書かれています。&lt;/p&gt;

&lt;p&gt;高階関数を使ったコンポーネントについては以下の記事も見てみると良いです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/07/13/mixins-considered-harmful.html&quot; title=&quot;Mixins Considered Harmful | React&quot;&gt;Mixins Considered Harmful | React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://accessibility.voxmedia.com/&quot;&gt;Vox Product Accessibility Guidelines&lt;/a&gt;というサイトではアクセシビリティのガイドラインが公開されています。&lt;/p&gt;

&lt;p&gt;職種ごとのチェックリストが書かれていて、また根拠となるドキュメントへのリンクがまとまっているためそちらを参照してみるといいかもしれません。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Designers&lt;/li&gt;
&lt;li&gt;Engineers&lt;/li&gt;
&lt;li&gt;Project Managers&lt;/li&gt;
&lt;li&gt;QA&lt;/li&gt;
&lt;li&gt;Editorial&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;チェックリスト自体は結構ざっくりとした内容が多いですが、一度見てみると面白いかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dojo-recap-–-june,-2016-|-the-dojo-toolkit-blog&quot;&gt;Dojo Recap – June, 2016 | The Dojo Toolkit Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://dojotoolkit.org/blog/dojo-recap-june-2016&quot; title=&quot;Dojo Recap – June, 2016 | The Dojo Toolkit Blog&quot;&gt;dojotoolkit.org/blog/dojo-recap-june-2016&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Dojo 1.11.2リリース。&lt;br&gt;
またDojo 2の進捗について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-2.0.1-·-jquery/qunit&quot;&gt;Release 2.0.1 · jquery/qunit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jquery/qunit/releases/tag/2.0.1&quot; title=&quot;Release 2.0.1 · jquery/qunit&quot;&gt;github.com/jquery/qunit/releases/tag/2.0.1&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;QUnit 2.0.1リリース。&lt;br&gt;
Symbolのダンプができるように&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;qt-webbrowser-1.0---qt-blog&quot;&gt;Qt WebBrowser 1.0 - Qt Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.qt.io/blog/2016/07/18/qt-webbrowser-1-0/&quot; title=&quot;Qt WebBrowser 1.0 - Qt Blog&quot;&gt;blog.qt.io/blog/2016/07/18/qt-webbrowser-1-0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Qt WebBrowser 1.0リリース。&lt;br&gt;
Qt WebEngine(Chromium)を使ったブラウザ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-release-9-|-webkit&quot;&gt;Release Notes for Safari Technology Preview Release 9 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/6800/release-notes-for-safari-technology-preview-release-9/&quot; title=&quot;Release Notes for Safari Technology Preview Release 9 | WebKit&quot;&gt;webkit.org/blog/6800/release-notes-for-safari-technology-preview-release-9/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 9リリース。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-javascript-engine:-v8-release-5.3&quot;&gt;V8 JavaScript Engine: V8 Release 5.3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://v8project.blogspot.com/2016/07/v8-release-53.html&quot; title=&quot;V8 JavaScript Engine: V8 Release 5.3&quot;&gt;v8project.blogspot.com/2016/07/v8-release-53.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;V8 5.3リリース。&lt;br&gt;
Ignition Interpreterの追加、Promiseのパフォーマンス改善、V8 APIの変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/1OqjVqRhtwlKeKfvMdX6HaCIu9wpZsrzqpIVIwQSuiXQ/edit#slide=id.ge4ef702cb_2_20&quot; title=&quot;Ignition: An Interpreter for V8 \[BlinkOn\] - Google スライド&quot;&gt;Ignition: An Interpreter for V8 [BlinkOn] - Google スライド&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-object-literals-in-javascript-are-cool&quot;&gt;Why object literals in JavaScript are cool&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rainsoft.io/why-object-literals-in-javascript-are-cool/&quot; title=&quot;Why object literals in JavaScript are cool&quot;&gt;rainsoft.io/why-object-literals-in-javascript-are-cool/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのオブジェクトリテラルについて。&lt;br&gt;
プロパティの定義やES2015のshorthandやcomputed property nameについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-most-in-depth-yet-understandable-es6-destructuring-tutorial-(complete-with-assembled-avengers)-|-untangled&quot;&gt;The Most In-Depth Yet Understandable ES6 Destructuring Tutorial (complete with Assembled Avengers) | Untangled&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://untangled.io/in-depth-es6-destructuring-with-assembled-avengers/&quot; title=&quot;The Most In-Depth Yet Understandable ES6 Destructuring Tutorial (complete with Assembled Avengers) | Untangled&quot;&gt;untangled.io/in-depth-es6-destructuring-with-assembled-avengers/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ES2015のDestructuringの挙動についての記事。&lt;br&gt;
大量のサンプルと共に複雑なパターンのDestructuringについてを解説してる。&lt;br&gt;
またDestructuringを応用した使い方についてなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://untangled.io/advanced-es6-destructuring-techniques/&quot; title=&quot;Advanced ES6 Destructuring Techniques | Untangled&quot;&gt;Advanced ES6 Destructuring Techniques | Untangled&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;6-compelling-use-cases-for-es6-proxies&quot;&gt;6 compelling use cases for ES6 proxies&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://devbryce.com/use-cases-for-es6-proxies/&quot; title=&quot;6 compelling use cases for ES6 proxies&quot;&gt;devbryce.com/use-cases-for-es6-proxies/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;proxy&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Proxy APIのユースケースについて。&lt;br&gt;
バリデーション、private、ログ、変更禁止、&lt;code&gt;Proxy.revocable&lt;/code&gt;について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tackling-state-—-angular2&quot;&gt;Tackling State — angular2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://vsavkin.com/managing-state-in-angular-2-applications-caf78d123d02&quot; title=&quot;Tackling State — angular2&quot;&gt;vsavkin.com/managing-state-in-angular-2-applications-caf78d123d02&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;AngularJS&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;AngularJS 2とRxJSでのstate管理について。&lt;/p&gt;

&lt;p&gt;Immutable State、ActionによってStateは変更される。&lt;br&gt;
ApplicationはObservableを受け取りObservableを返す、ApplicationとViewは分離される。&lt;br&gt;
これらのコンセプトをどのように実現するかについてかかれている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react.js-in-patterns&quot;&gt;React.js in patterns&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://krasimirtsonev.com/blog/article/react-js-in-design-patterns&quot; title=&quot;React.js in patterns&quot;&gt;krasimirtsonev.com/blog/article/react-js-in-design-patterns&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentのパターン。&lt;br&gt;
コンポーネントの入れ子や&lt;code&gt;this.props.children&lt;/code&gt;、propsのやり取り、コンポーネント間のstate管理、DIについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debugging-the-production-web-—-medium&quot;&gt;Debugging the Production Web — Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@jrullmann/debugging-the-production-web-d36373b9440&quot; title=&quot;Debugging the Production Web — Medium&quot;&gt;medium.com/@jrullmann/debugging-the-production-web-d36373b9440&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;本番のウェブアプリケーションのログについて。&lt;br&gt;
ブラウザからどのようなログをどのように集めるか、手順をどのように再現するか、DevToolsについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;create-apps-with-no-configuration-|-react&quot;&gt;Create Apps with No Configuration | React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/07/22/create-apps-with-no-configuration.html&quot; title=&quot;Create Apps with No Configuration | React&quot;&gt;facebook.github.io/react/blog/2016/07/22/create-apps-with-no-configuration.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;設定なしでReactアプリを書き始められるツール。&lt;br&gt;
&lt;code&gt;npm start&lt;/code&gt;でサーバを立てて、&lt;code&gt;npm run build&lt;/code&gt;でビルドできる。&lt;br&gt;
&lt;code&gt;npm run eject&lt;/code&gt;でロックインから外れる事ができる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebookincubator/create-react-app&quot; title=&quot;facebookincubator/create-react-app: Create React apps with no build configuration.&quot;&gt;facebookincubator/create-react-app: Create React apps with no build configuration.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-service-worker-lifecycle&quot;&gt;The Service Worker Lifecycle&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://bitsofco.de/the-service-worker-lifecycle/&quot; title=&quot;The Service Worker Lifecycle&quot;&gt;bitsofco.de/the-service-worker-lifecycle/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ServiceWorkerのライフサイクルについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vox-product-accessibility-guidelines&quot;&gt;Vox Product Accessibility Guidelines&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://accessibility.voxmedia.com/&quot; title=&quot;Vox Product Accessibility Guidelines&quot;&gt;accessibility.voxmedia.com/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Vox Mediaのアクセシビリティガイドライン。&lt;br&gt;
職種ごとにチェックリストが書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;object-model&quot;&gt;Object Model&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://objectmodel.js.org/&quot; title=&quot;Object Model&quot;&gt;objectmodel.js.org/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;プロパティの型定義したモデルクラスを作れるライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nodeca/pica:-resize-image-in-browser-with-high-quality-and-high-speed&quot;&gt;nodeca/pica: Resize image in browser with high quality and high speed&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodeca/pica&quot; title=&quot;nodeca/pica: Resize image in browser with high quality and high speed&quot;&gt;github.com/nodeca/pica&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;画像&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypedArray、WebWorker、WebGLを使った画像リサイズライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;stefanjudis/forrest:-an-npm-scripts-desktop-client&quot;&gt;stefanjudis/forrest: An npm scripts desktop client&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/stefanjudis/forrest&quot; title=&quot;stefanjudis/forrest: An npm scripts desktop client&quot;&gt;github.com/stefanjudis/forrest&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;software&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;npm run-scriptのGUIクライアント&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;diegomura/react-log:-react-for-the-console&quot;&gt;diegomura/react-log: React for the Console&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/diegomura/react-log&quot; title=&quot;diegomura/react-log: React for the Console&quot;&gt;github.com/diegomura/react-log&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;console.logへの出力をJSXで書くことができるReact Component&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;download-blisk---a-browser-for-web-developers&quot;&gt;Download Blisk - a browser for web developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blisk.io/&quot; title=&quot;Download Blisk - a browser for web developers&quot;&gt;blisk.io/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;開発者向けの機能を持ったChromeベースのブラウザ。&lt;br&gt;
モバイル向けの機能、自動更新、パフォーマンス やエラーの可視化など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;manning-|-web-performance-in-action&quot;&gt;Manning | Web Performance in Action&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.manning.com/books/web-performance-in-action&quot; title=&quot;Manning | Web Performance in Action&quot;&gt;www.manning.com/books/web-performance-in-action&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;2017年 春発売。&lt;br&gt;
ウェブパフォーマンスについての書籍。&lt;br&gt;
ブラウザでのレンダリング、HTTP/2などについて&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 26 Jul 2016 09:43:00 +0900</pubDate>
        <link>http://jser.info/2016/07/26/angular2-state-react-component-accessibility/</link>
        <guid isPermaLink="true">http://jser.info/2016/07/26/angular2-state-react-component-accessibility/</guid>
        
        <category>Angular2</category>
        
        <category>React</category>
        
        <category>Accessibility</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
      <item>
        <title>2016-07-19のJS: Async 2.0、aXe 2.0、TypeScript 2.0β</title>
        <description>&lt;p&gt;JSer.info #288 - 非同期処理ライブラリ&lt;a href=&quot;https://github.com/caolan/async&quot; title=&quot;Async&quot;&gt;Async&lt;/a&gt;の2.0がリリースされました。&lt;br&gt;
2.0ではライブラリ内部が整理され、&lt;code&gt;require(&amp;quot;async/series&amp;quot;)&lt;/code&gt;のように直接参照でそれぞれの機能が利用できるようになっています。また、内部的にES2015 modulesでimport/exportしている&lt;a href=&quot;https://www.npmjs.com/package/async-es&quot; title=&quot;async-es&quot;&gt;async-es&lt;/a&gt;も合わせて公開されています。&lt;/p&gt;

&lt;p&gt;機能的な変更点についてはCHANGELOGを参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/caolan/async/blob/v2.0.0/CHANGELOG.md&quot; title=&quot;async/CHANGELOG.md at v2.0.0 · caolan/async&quot;&gt;async/CHANGELOG.md at v2.0.0 · caolan/async&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;HTMLのアクセシビリティテストライブラリである&lt;a href=&quot;https://github.com/dequelabs/axe-core&quot; title=&quot;aXe&quot;&gt;aXe&lt;/a&gt; 2.0がリリースされました。&lt;/p&gt;

&lt;p&gt;aXeはHTMLにスクリプトとして読み込ませて実行し、&lt;a href=&quot;https://github.com/dequelabs/axe-core/blob/master/doc/rule-descriptions.md&quot;&gt;定義したルール&lt;/a&gt;にもとづきアクセシビリティのチェックをするライブラリ/ツールです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.deque.com/blog/introducing-axe-2-0/&quot; title=&quot;Deque Launches aXe 2.0&quot;&gt;Deque Launches aXe 2.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2.0では&lt;a href=&quot;https://github.com/dequelabs/axe-core/blob/master/doc/plugins.md&quot; title=&quot;Plugins&quot;&gt;Plugins&lt;/a&gt;の仕組みが追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/07/11/announcing-typescript-2-0-beta/&quot; title=&quot;TypeScript 2.0 Beta&quot;&gt;TypeScript 2.0 Beta&lt;/a&gt;が公開されました。&lt;/p&gt;

&lt;p&gt;Non-nullable type、module定義でワイルドカード(&lt;code&gt;*&lt;/code&gt;)のサポート、&lt;code&gt;never&lt;/code&gt; typeなどの機能が追加されています。&lt;br&gt;
また、tsconfigの&lt;code&gt;include&lt;/code&gt;でglobサポート、built-inの型定義ファイルを&lt;code&gt;--lib&lt;/code&gt;で指定できるように、&lt;code&gt;--skipLibCheck&lt;/code&gt;の追加など&lt;/p&gt;

&lt;p&gt;詳しくは以下を参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#typescript-20&quot; title=&quot;What&amp;amp;amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&quot;&gt;What&amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/vvakame/items/ae239f3d6f6f08f7c719&quot; title=&quot;TypeScript 2.0 Beta 変更点 - Qiita&quot;&gt;TypeScript 2.0 Beta 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;eslint-v3.1.0-released---eslint---pluggable-javascript-linter&quot;&gt;ESLint v3.1.0 released - ESLint - Pluggable JavaScript linter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://eslint.org/blog/2016/07/eslint-v3.1.0-released&quot; title=&quot;ESLint v3.1.0 released - ESLint - Pluggable JavaScript linter&quot;&gt;eslint.org/blog/2016/07/eslint-v3.1.0-released&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ESLint 3.1.0リリース。&lt;br&gt;
ルールがエラーの開始位置のみしかレポートできなかったのが、範囲指定してエラーレポートできるようになるなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/mysticatea/items/723a467a4eb47e4913e2&quot; title=&quot;ESLint v3.1.0 - Qiita&quot;&gt;ESLint v3.1.0 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-zepto.js-1.2.0-·-madrobby/zepto&quot;&gt;Release Zepto.js 1.2.0 · madrobby/zepto&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/madrobby/zepto/releases/tag/v1.2.0&quot; title=&quot;Release Zepto.js 1.2.0 · madrobby/zepto&quot;&gt;github.com/madrobby/zepto/releases/tag/v1.2.0&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Zepto.js 1.2.0リリース。&lt;br&gt;
&lt;code&gt;__proto__&lt;/code&gt;をコードベースから削除、&lt;code&gt;$.noop&lt;/code&gt;や&lt;code&gt;$.isNumeric()&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;async/changelog.md-at-v2.0.0-·-caolan/async&quot;&gt;async/CHANGELOG.md at v2.0.0 · caolan/async&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/caolan/async/blob/v2.0.0/CHANGELOG.md&quot; title=&quot;async/CHANGELOG.md at v2.0.0 · caolan/async&quot;&gt;github.com/caolan/async/blob/v2.0.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;async 2.0.0リリース。&lt;br&gt;
ES2015版の&lt;code&gt;async-es&lt;/code&gt;の提供、&lt;code&gt;race&lt;/code&gt;などの機能追加。&lt;br&gt;
破壊的な変更として&lt;code&gt;waterfall&lt;/code&gt;の挙動変更、&lt;code&gt;filter&lt;/code&gt;や&lt;code&gt;reject&lt;/code&gt;などのコールバック関数が受け取る引数を変更など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/suguru03/items/b73ab97482d5394b8f43&quot; title=&quot;Async v2.0.0 リリース - Qiita&quot;&gt;Async v2.0.0 リリース - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deque-launches-axe-2.0&quot;&gt;Deque Launches aXe 2.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.deque.com/blog/introducing-axe-2-0/&quot; title=&quot;Deque Launches aXe 2.0&quot;&gt;www.deque.com/blog/introducing-axe-2-0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ウェブサイトのAccessibilityテストエンジンであるaXe 2.0リリース&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/dequelabs/axe-core&quot; title=&quot;dequelabs/axe-core: Accessibility engine for automated Web UI testing&quot;&gt;dequelabs/axe-core: Accessibility engine for automated Web UI testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;protractor/changelog.md-at-4.0.0-·-angular/protractor&quot;&gt;protractor/CHANGELOG.md at 4.0.0 · angular/protractor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/angular/protractor/blob/4.0.0/CHANGELOG.md&quot; title=&quot;protractor/CHANGELOG.md at 4.0.0 · angular/protractor&quot;&gt;github.com/angular/protractor/blob/4.0.0/CHANGELOG.md&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Protractor 4.0.0リリース。&lt;br&gt;
&lt;code&gt;webdriver-manager&lt;/code&gt;が個別のnpmモジュールとしてインストール可能に、TypeScriptの型定義ファイルを追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/webdriver-manager&quot; title=&quot;webdriver-manager&quot;&gt;webdriver-manager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-2.0-beta-|-typescript&quot;&gt;Announcing TypeScript 2.0 Beta | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/07/11/announcing-typescript-2-0-beta/&quot; title=&quot;Announcing TypeScript 2.0 Beta | TypeScript&quot;&gt;blogs.msdn.microsoft.com/typescript/2016/07/11/announcing-typescript-2-0-beta/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 2.0βリリース。&lt;br&gt;
Non-nullable Type、module定義に&lt;code&gt;*&lt;/code&gt;などが使えるように。&lt;br&gt;
&lt;code&gt;never&lt;/code&gt; typeの追加、tsconfigでglobサポート、built-inの型定義ファイルを&lt;code&gt;--lib&lt;/code&gt;で指定できるように、&lt;code&gt;--skipLibCheck&lt;/code&gt;の追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/wiki/What%27s-new-in-TypeScript#typescript-20&quot; title=&quot;What&amp;amp;amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&quot;&gt;What&amp;#39;s new in TypeScript · Microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://qiita.com/vvakame/items/ae239f3d6f6f08f7c719&quot; title=&quot;TypeScript 2.0 Beta 変更点 - Qiita&quot;&gt;TypeScript 2.0 Beta 変更点 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;4-types-of-memory-leaks-in-javascript-and-how-to-get-rid-of-them&quot;&gt;4 Types of Memory Leaks in JavaScript and How to Get Rid Of Them&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://auth0.com/blog/2016/01/26/four-types-of-leaks-in-your-javascript-code-and-how-to-get-rid-of-them/&quot; title=&quot;4 Types of Memory Leaks in JavaScript and How to Get Rid Of Them&quot;&gt;auth0.com/blog/2016/01/26/four-types-of-leaks-in-your-javascript-code-and-how-to-get-rid-of-them/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptでよくあるメモリリークのパターンについて。&lt;br&gt;
Chrome開発者ツールを使ってメモリリークを見つける方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node.js-における-promise-を使った例外処理---from-scratch&quot;&gt;Node.js における Promise を使った例外処理 - from scratch&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://yosuke-furukawa.hatenablog.com/entry/2016/07/12/103734&quot; title=&quot;Node.js における Promise を使った例外処理 - from scratch&quot;&gt;yosuke-furukawa.hatenablog.com/entry/2016/07/12/103734&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのuncaughtExceptionとPromiseを使った場合のunhandledRejectionについて。&lt;br&gt;
それぞれの違いや動作について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what’s-inside-jquery-3.0-|-jquery-3.0-new-features&quot;&gt;What’s inside jQuery 3.0 | jQuery 3.0 new features&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codebrahma.com/whats-new-jquery-3-0/&quot; title=&quot;What’s inside jQuery 3.0 | jQuery 3.0 new features&quot;&gt;codebrahma.com/whats-new-jquery-3-0/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;jQuery 3の細かな変更について。&lt;br&gt;
strict mode、for of、&lt;code&gt;requestAnimationFrame()&lt;/code&gt;、エスケープの仕組み、jqXHR、&lt;code&gt;.show()&lt;/code&gt;/&lt;code&gt;hide()&lt;/code&gt;の改善、&lt;code&gt;.width()&lt;/code&gt;/&lt;code&gt;.height()&lt;/code&gt;が整数値ではなくなるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-lumpy-web---tales-of-a-developer-advocate&quot;&gt;The Lumpy Web - Tales of a Developer Advocate&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://paul.kinlan.me/the-lumpy-web/&quot; title=&quot;The Lumpy Web - Tales of a Developer Advocate&quot;&gt;paul.kinlan.me/the-lumpy-web/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;web &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Webとブラウザにおける問題は大きく分けて3つに分類できる。&lt;br&gt;
ブラウザ毎の実装違い(実装のバージョン違い)、仕様と実装の齟齬、実装優先度の問題。&lt;br&gt;
これらの問題に対してどこを参照すれば、どのカテゴリの問題であるかを把握できるかについて書かれてる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-variables-hoisting-in-details&quot;&gt;JavaScript variables hoisting in details&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://rainsoft.io/javascript-hoisting-in-details/&quot; title=&quot;JavaScript variables hoisting in details&quot;&gt;rainsoft.io/javascript-hoisting-in-details/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;var&lt;/code&gt;のhoisting(巻き上げ)についての解説。&lt;br&gt;
また&lt;code&gt;let&lt;/code&gt;や&lt;code&gt;const&lt;/code&gt;、&lt;code&gt;class&lt;/code&gt;とTDZについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mixins-considered-harmful-|-react&quot;&gt;Mixins Considered Harmful | React&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/react/blog/2016/07/13/mixins-considered-harmful.html&quot; title=&quot;Mixins Considered Harmful | React&quot;&gt;facebook.github.io/react/blog/2016/07/13/mixins-considered-harmful.html&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;ReactのMixinでやっていることは、higher-order componentsやutilを使うなど別の方法で解決できるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;enzyme+mocha+power-assertでreactコンポーネントのフルレンダリングテスト---wadackel.me&quot;&gt;enzyme+mocha+power-assertでReactコンポーネントのフルレンダリングテスト - wadackel.me&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.wadackel.me/2016/react-enzyme-mocha-power-assert/&quot; title=&quot;enzyme+mocha+power-assertでReactコンポーネントのフルレンダリングテスト - wadackel.me&quot;&gt;blog.wadackel.me/2016/react-enzyme-mocha-power-assert/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reactコンポーネントをjsdomとenzymeでテストする話&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;redux-middleware-wars-(japanese)-//-speaker-deck&quot;&gt;Redux Middleware Wars (Japanese) // Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/shuhei/redux-middleware-wars-japanese&quot; title=&quot;Redux Middleware Wars (Japanese) // Speaker Deck&quot;&gt;speakerdeck.com/shuhei/redux-middleware-wars-japanese&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;redux&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;スライド&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Reduxで非同期処理を扱うMiddlewareについてのスライド。&lt;br&gt;
redux-thunk、redux-promise、redux-saga、redux-loop、redux-observableの比較&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ianstormtaylor/slate:-a-completely-customizable-framework-for-building-rich-text-editors-in-the-browser.&quot;&gt;ianstormtaylor/slate: A completely customizable framework for building rich text editors in the browser.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ianstormtaylor/slate&quot; title=&quot;ianstormtaylor/slate: A completely customizable framework for building rich text editors in the browser.&quot;&gt;github.com/ianstormtaylor/slate&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;リッチエディタを実装できるReact Component。&lt;br&gt;
ロジックはプラグインとして実装できるためカスタマイズしやすい作り。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sindresorhus/conf:-simple-config-handling-for-your-app-or-module&quot;&gt;sindresorhus/conf: Simple config handling for your app or module&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/conf&quot; title=&quot;sindresorhus/conf: Simple config handling for your app or module&quot;&gt;github.com/sindresorhus/conf&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでシンプルな設定保存ライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;carteb/carte-blanche:-an-isolated-development-space-with-integrated-fuzz-testing-for-your-components.-see-them-individually,-explore-them-in-different-states-and-quickly-and-confidently-develop-them.&quot;&gt;carteb/carte-blanche: An isolated development space with integrated fuzz testing for your components. See them individually, explore them in different states and quickly and confidently develop them.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/carteb/carte-blanche&quot; title=&quot;carteb/carte-blanche: An isolated development space with integrated fuzz testing for your components. See them individually, explore them in different states and quickly and confidently develop them.&quot;&gt;github.com/carteb/carte-blanche&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;React Componentのチェックができるツール。&lt;br&gt;
ランダム/任意のデータを入れて描画結果がどうなるかを確認できる。&lt;br&gt;
スタイルガイド的なツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-version-detector&quot;&gt;ECMAScript Version Detector&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://azu.github.io/ecmascript-version-detector/&quot; title=&quot;ECMAScript Version Detector&quot;&gt;azu.github.io/ecmascript-version-detector/&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのコードを入力すると、そのコードの構文のECMAScript versionを出してくれるツールとライブラリ。&lt;br&gt;
書いてるコードがProposal段階なのかを判定できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zingchart/zingtouch:-a-javascript-touch-gesture-detection-library-for-the-modern-web&quot;&gt;zingchart/zingtouch: A JavaScript touch gesture detection library for the modern web&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zingchart/zingtouch&quot; title=&quot;zingchart/zingtouch: A JavaScript touch gesture detection library for the modern web&quot;&gt;github.com/zingchart/zingtouch&lt;/a&gt;&lt;/p&gt;

&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mobile&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;TouchとGestureの管理ライブラリ。&lt;br&gt;
&lt;code&gt;ZingTouch.Region(element)&lt;/code&gt;で領域を作成し、その領域に対してイベントを設定できる&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 19 Jul 2016 09:50:00 +0900</pubDate>
        <link>http://jser.info/2016/07/19/async-20axe-20typescript-20b/</link>
        <guid isPermaLink="true">http://jser.info/2016/07/19/async-20axe-20typescript-20b/</guid>
        
        <category>async</category>
        
        <category>promise</category>
        
        <category>accessibility</category>
        
        <category>TypeScript</category>
        
        
        <category>_i18n</category>
        
        <category>ja</category>
        
        <category>jser</category>
        
      </item>
    
  </channel>
</rss>
